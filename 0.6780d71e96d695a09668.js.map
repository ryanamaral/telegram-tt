{"version":3,"sources":["webpack:///./src/hooks/useLang.ts","webpack:///./src/components/ui/ListItem.tsx","webpack:///./src/hooks/useIntersectionObserver.ts","webpack:///./src/components/common/PrivateChatInfo.tsx","webpack:///./src/hooks/useMedia.ts","webpack:///./src/components/ui/Modal.tsx","webpack:///./src/util/trapFocus.ts","webpack:///./src/components/common/Avatar.tsx","webpack:///./src/components/ui/Transition.tsx","webpack:///./src/components/ui/InfiniteScroll.tsx","webpack:///./src/hooks/useOnChange.ts","webpack:///./src/hooks/useTransitionForMedia.ts","webpack:///./src/components/common/helpers/mediaDimensions.ts","webpack:///./src/components/common/AnimatedSticker.tsx","webpack:///./src/components/ui/ConfirmDialog.tsx","webpack:///./src/components/common/NothingFound.tsx","webpack:///./src/components/right/hooks/useAsyncRendering.ts","webpack:///./src/components/ui/Link.tsx","webpack:///./src/components/common/GroupChatInfo.tsx","webpack:///./src/hooks/useMediaWithDownloadProgress.ts","webpack:///./src/components/ui/ProgressSpinner.tsx","webpack:///./src/components/ui/Portal.ts","webpack:///./src/util/fastSmoothScroll.ts","webpack:///./src/components/ui/Radio.tsx","webpack:///./src/components/ui/RadioGroup.tsx","webpack:///./src/hooks/useInfiniteScroll.ts","webpack:///./src/components/common/AnimatedEmoji.tsx","webpack:///./src/hooks/useBuffering.ts","webpack:///./src/util/focusEditableElement.ts","webpack:///./src/components/middle/composer/helpers/parseMessageInput.ts","webpack:///./src/components/middle/composer/DropTarget.tsx","webpack:///./src/components/middle/composer/DropArea.tsx","webpack:///./src/hooks/useBackgroundMode.ts","webpack:///./src/components/common/PickerSelectedItem.tsx","webpack:///./src/util/captureEvents.ts","webpack:///./src/hooks/useHorizontalScroll.ts","webpack:///./src/hooks/useEnsureMessage.ts","webpack:///./src/components/common/VerifiedIcon.tsx","webpack:///./src/hooks/useContextMenuHandlers.ts","webpack:///./src/util/cycleRestrict.ts","webpack:///./src/util/safePlay.ts","webpack:///./src/components/common/helpers/renderMessageText.tsx","webpack:///./src/hooks/useBlur.ts","webpack:///./src/hooks/useVideoCleanup.ts","webpack:///./src/components/ui/SearchInput.tsx","webpack:///./src/util/fastSmoothScrollHorizontal.ts","webpack:///./src/util/resetScroll.ts","webpack:///./src/util/trimText.ts","webpack:///./src/components/common/TypingStatus.tsx","webpack:///./src/components/common/DeleteChatModal.tsx","webpack:///./src/util/patchSafariProgressiveAudio.ts","webpack:///./src/hooks/useLayoutEffectWithPrevDeps.ts","webpack:///./src/components/common/Document.tsx","webpack:///./src/components/common/StickerSetModal.async.tsx","webpack:///./src/components/middle/composer/TextFormatter.tsx","webpack:///./src/components/common/Media.tsx","webpack:///./src/components/common/Audio.tsx","webpack:///./src/util/waveform.ts","webpack:///./src/components/common/helpers/waveform.ts","webpack:///./src/components/ui/Tab.tsx","webpack:///./src/components/ui/TabList.tsx","webpack:///./src/util/getReadableErrorText.ts","webpack:///./src/util/clipboard.ts","webpack:///./src/hooks/useChatContextActions.ts","webpack:///./src/components/common/LastMessageMeta.tsx","webpack:///./src/components/common/MessageOutgoingStatus.tsx","webpack:///./src/hooks/useContextMenuPosition.ts","webpack:///./src/components/ui/ShowTransition.tsx","webpack:///./src/hooks/useAudioPlayer.ts","webpack:///./src/util/audioPlayer.ts","webpack:///./src/util/download.ts","webpack:///./src/components/common/File.tsx","webpack:///./src/lib/fastBlur.js","webpack:///./src/components/ui/Notification.tsx","webpack:///./src/components/middle/composer/helpers/selection.ts","webpack:///./src/components/middle/composer/MessageInput.tsx","webpack:///./src/components/common/WebLink.tsx","webpack:///./src/components/left/main/hooks/useChatAnimationType.ts","webpack:///./src/components/left/main/Badge.tsx","webpack:///./src/components/left/main/Chat.tsx","webpack:///./src/components/left/main/ChatList.tsx","webpack:///./src/components/common/UserLink.tsx","webpack:///./src/components/common/MessageLink.tsx","webpack:///./src/components/common/ChatLink.tsx","webpack:///./src/components/common/helpers/renderActionMessageText.tsx","webpack:///./src/components/middle/composer/hooks/useMentionMenu.ts","webpack:///./src/components/middle/composer/helpers/searchUserName.ts"],"names":["forceUpdate","useForceUpdate","useOnChange","langProvider","ListItem","props","ref","icon","className","style","children","disabled","ripple","narrow","inactive","contextActions","focus","destructive","onClick","containerRef","useRef","isContextMenuOpen","contextMenuPosition","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","getTriggerElement","useCallback","current","getRootElement","closest","getMenuElement","querySelector","positionX","positionY","menuStyle","useContextMenuPosition","handleClick","e","handleMouseDown","IS_TOUCH_ENV","button","fullClassName","buildClassName","role","tabIndex","undefined","onMouseDown","onContextMenu","isOpen","autoClose","onClose","onCloseAnimationEnd","map","action","key","title","handler","useIntersectionObserver","rootRef","throttleMs","debounceMs","shouldSkipFirst","margin","threshold","isDisabled","rootCallback","controllerRef","rootCallbackRef","isFrozenRef","onUnfreezeRef","freeze","unfreeze","useHeavyAnimationCheck","useEffect","observer","disconnect","callbacks","clear","observe","target","targetCallback","Map","entriesAccumulator","observerCallbackSync","entries","Array","from","values","forEach","entry","callback","get","scheduler","throttle","debounce","observerCallback","IntersectionObserver","set","root","rootMargin","initController","controller","delete","unobserve","useOnIntersect","targetRef","useIsIntersecting","isIntersecting","setIsIntersecting","useState","memo","withGlobal","global","userId","forceShowSelf","lastSyncTime","user","selectUser","isSavedMessages","isSelf","areMessagesLoaded","Boolean","selectChatMessages","setGlobal","actions","pick","typingStatus","avatarSize","status","withMediaViewer","withHandle","withFullInfo","withUpdatingStatus","noStatusOrTyping","loadFullUser","openMediaViewer","id","fullName","getUserFullName","handleAvatarViewerOpen","hasPhoto","stopPropagation","avatarOwnerId","origin","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","lang","useLang","size","renderText","isVerified","isUserOnline","username","getUserStatus","mediaHash","noLoad","mediaFormat","ApiMediaFormat","BlobUrl","cacheBuster","delay","mediaData","mediaLoader","startedAt","Date","now","then","spentTime","setTimeout","Modal","header","hasCloseButton","noBackdrop","onEnter","shouldRender","transitionClassNames","useShowTransition","modalRef","captureKeyboardListeners","onEsc","element","handleKeyDown","preventDefault","focusableElements","querySelectorAll","length","currentFocusedIndex","findIndex","em","isSameNode","document","activeElement","newFocusedIndex","shiftKey","addEventListener","removeEventListener","trapFocus","useEffectWithPrevDeps","prevIsOpen","body","classList","toggle","dispatchHeavyAnimationEvent","remove","Portal","Button","round","color","ariaLabel","chat","text","withOnlineStatus","isDeleted","isDeletedUser","imageHash","getChatAvatarHash","dataUri","useMedia","DataUri","shouldRenderFullMedia","useTransitionForMedia","content","src","alt","decoding","userFullName","getFirstLetters","getChatTitle","isChatPrivate","isOnline","getUserColorKey","senderId","data-test-sender-id","IS_TEST","ANIMATION_DURATION","slide","fade","IS_MOBILE_SCREEN","reveal","CLEANED_UP","Symbol","animationLevel","settings","byKey","activeKey","name","direction","renderCount","shouldRestoreHeight","shouldCleanup","onStart","onStop","rendersRef","prevActiveKey","usePrevious","activateTimeoutRef","activeKeyChanged","useLayoutEffect","cleanup","container","childElements","add","childNodes","clearTimeout","isBackwards","keys","Object","Number","prevActiveIndex","indexOf","activeIndex","node","i","HTMLElement","width","offsetWidth","scrollBy","left","behavior","ANIMATION_END_DELAY","requestAnimationFrame","window","scrollLeft","height","clientHeight","renders","contents","fill","render","InfiniteScroll","onLoadMore","onScroll","items","itemSelector","preloadBackwards","sensitiveArea","noFastList","stateRef","loadMoreBackwards","loadMoreForwards","useMemo","LoadMoreDirection","Backwards","Forwards","scrollHeight","state","listItemElements","newScrollTop","currentAnchor","includes","scrollTop","getBoundingClientRect","top","currentAnchorTop","nextAnchor","offsetParent","resetScroll","isScrollTopJustUpdated","handleScroll","listLength","offsetHeight","isNearTop","offsetTop","isNearBottom","isUpdated","nextAnchorTop","newAnchorTop","teactFastList","cb","dependencies","prevDeps","some","d","SPEED","fast","slow","speed","noAnimate","isMediaLoaded","willAnimate","shouldRenderThumb","setShouldRenderThumb","MEDIA_VIEWER_MEDIA_QUERY","REM","parseInt","getComputedStyle","documentElement","fontSize","ROUND_VIDEO_DIMENSIONS","AVATAR_FULL_DIMENSIONS","DEFAULT_MEDIA_DIMENSIONS","cachedMaxWidth","getAvailableWidth","fromOwnMessage","isForwarded","isWebPagePhoto","extraPaddingRem","regularMaxWidth","Math","min","floor","innerWidth","getMaxMessageWidthRem","calculateDimensionsForMessageMedia","isGif","aspectRatio","calculateDimensions","getAvailableHeight","getMediaViewerAvailableDimensions","withFooter","isVideo","mql","matchMedia","windowWidth","windowHeight","windowSize","occupiedHeightRem","matches","calculateInlineImageDimensions","photo","getPhotoInlineDimensions","calculateVideoDimensions","video","getVideoDimensions","getPictogramDimensions","getDocumentThumbnailDimensions","smaller","getStickerDimensions","sticker","baseWidth","STICKER_SIZE_INLINE_MOBILE_FACTOR","STICKER_SIZE_INLINE_DESKTOP_FACTOR","calculatedHeight","calculateMediaViewerDimensions","availableWidth","availableHeight","mediaWidth","mediaHeight","calculatedWidth","lottiePromise","RLottie","async","ensureLottie","default","animationData","play","playSegment","noLoop","quality","isLowPriority","onLoad","animation","setAnimation","wasPlaying","isFrozen","playRef","playSegmentRef","exec","newAnimation","setSpeed","fastRaf","destroy","playAnimation","shouldRestart","goToAndPlay","pauseAnimation","pause","freezeAnimation","isPlaying","unfreezeAnimation","unfreezeAnimationOnRaf","useBackgroundMode","IS_IOS","textParts","confirmLabel","confirmHandler","confirmIsDestructive","isButtonsInOneRow","split","textPart","isText","useAsyncRendering","shouldRenderRef","timeoutRef","Link","href","chatId","selectChat","onlineCount","selectChatOnlineCount","withChatType","loadFullChat","loadSuperGroupOnlines","isSuperGroup","isChatSuperGroup","isMin","isRestricted","getChatTypeString","handle","groupStatus","chatTypeString","membersCount","getGroupStatus","onlineStatus","renderStatusOrTyping","isStreaming","Stream","IS_PROGRESSIVE_SUPPORTED","Progressive","downloadProgress","setDownloadProgress","startedAtRef","handleProgress","progress","RADIUSES","s","m","l","xl","square","transparent","noCross","radius","circleRadius","STROKE_WIDTH","borderRadius","circumference","PI","svg","firstElementChild","strokeDashOffset","max","setAttribute","toString","innerHTML","containerId","elementRef","createElement","appendChild","TeactDOM","removeChild","fastSmoothScroll","position","maxDistance","forceDirection","forceDuration","FocusDirection","Static","scrollIntoView","block","offset","Up","Down","elementTop","elementHeight","containerHeight","path","remainingPath","duration","abs","startAt","animateSingle","t","currentPath","transition","scrollWithJs","label","subLabel","value","checked","hidden","isLoading","onChange","type","Spinner","options","selected","loadingOption","handleChange","event","currentTarget","option","getViewportSlice","sourceIds","offsetId","listSlice","index","indexForDirection","to","newViewportIds","slice","areSomeLocal","areAllLocal","listIds","forceFullPreload","lastParamsRef","viewportIdsRef","prevListIds","prevIsDisabled","areSortedArraysEqual","viewportIds","getMore","AnimatedEmoji","isInline","observeIntersection","isAnimationLoaded","markAnimationLoaded","useFlag","localMediaHash","previewBlobUrl","Lottie","playKey","setPlayKey","String","random","STICKER_SIZE_TWO_FA","noInitiallyBuffered","isBuffered","setIsBuffered","bufferedProgress","setBufferedProgress","setIsBufferedDebounced","handleBuffering","media","isSafariPatchInProgress","buffered","end","readyState","currentTime","bufferingHandlers","onLoadedData","onPlaying","onLoadStart","onPause","onTimeUpdate","onProgress","checkBuffering","focusEditableElement","force","selection","getSelection","range","createRange","lastChild","nodeValue","setStart","removeAllRanges","addRange","ENTITY_CLASS_BY_NODE_NAME","B","ApiMessageEntityTypes","Bold","STRONG","I","Italic","EM","U","Underline","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","BLOCKQUOTE","Blockquote","parseMessageInput","html","fragment","parsedHtml","IS_EMOJI_SUPPORTED","replace","parseMarkdown","innerText","trim","textIndex","recursionDeepness","entities","addEntity","entity","rawText","nodeName","anchor","dataset","entityType","MentionName","startsWith","Email","Phone","textContent","TextUrl","Url","getEntityTypeFromNode","rawIndex","substring","url","getEntityDataFromNode","push","hasChildNodes","isQuick","onFileSelect","isHovered","markHovered","unmarkHovered","onDrop","onDragEnter","onDragLeave","relatedTarget","toTarget","DropAreaState","withQuick","onHide","hideTimeoutRef","prevWithQuick","captureEscKeyListener","handleFilesDrop","dataTransfer","dt","files","handleQuickFilesDrop","handleDragLeave","fromTarget","onDragOver","onBlur","onFocus","hasFocus","chatOrUserId","isMinimized","canClose","clickArg","iconElement","titleText","getUserFirstOrLastName","SwipeDirection","captureEvents","captureEvent","hasMoved","onCapture","excludedClosestSelector","onMove","onRelease","pageX","touches","pageY","withCursor","dragOffsetX","dragOffsetY","onDrag","onSwipe","xAbs","yAbs","Left","Right","processSwipe","passive","deltaX","deltaY","messageId","message","replyOriginForId","loadMessage","getDispatch","loadMessageThrottled","throttled","VerifiedIcon","contextMenuCounter","isMenuDisabled","setIsContextMenuOpen","setContextMenuPosition","x","clientX","y","clientY","timer","clearLongPressTimer","startLongPressTimer","contains","originalEvent","cancelClickOnce","stopImmediatePropagation","emulateContextMenuEvent","cycleRestrict","mediaEl","catch","err","DEBUG","console","warn","renderMessageText","highlight","shouldRenderHqEmoji","formattedText","getMessageText","renderTextWithEntities","organizeEntities","organizedEntityIndexes","Set","organizedEntities","has","organizedEntity","organizeEntity","organizedIndexes","nestedEntities","filter","organizedIndex","shouldRenderAsHtml","renderMessagePart","result","deleteLineBreakAfterPre","organizedEntites","renderEntity","textPartStart","textPartEnd","isLastEntity","renderResult","textBefore","textBeforeLength","substr","entityStartIndex","entityEndIndex","entityContent","nestedEntityContent","nestedIndex","nestedEntity","nestedEntityIndex","nestedResult","nestedEntityEndIndex","newEntity","rawEntityText","renderedContent","join","getLinkUrl","processEntityAsHtml","entityText","BotCommand","handleBotCommandClick","Hashtag","Cashtag","handleHashtagClick","rel","Mention","processEntity","isArray","textAfter","arrayIndex","c","emojiFilter","sendBotCommand","command","setLocalTextSearchQuery","query","searchTextMessagesLocal","cache","useBlur","blurredRef","img","Image","onload","canvas","imgToCanvas","fastBlur","getContext","blurredDataUri","toDataURL","useVideoCleanup","videoRef","videoEl","load","inputId","focused","placeholder","onReset","inputRef","isInputFocused","markInputFocused","unmarkInputFocused","blur","containerWidth","scrollWidth","animate","scrollTo","overflow","trimText","typingUser","typingUserName","isPrivateChat","isChatWithSelf","selectIsChatWithSelf","canDeleteForAll","contactName","getPrivateChatUserId","isChannel","isChatChannel","isBasicGroup","isChatBasicGroup","chatTitle","leaveChannel","deleteHistory","deleteChannel","handleDeleteMessageForAll","maxId","lastMessage","shouldDeleteForAll","handleDeleteChat","isCreator","patchSafariProgressiveAudio","audioEl","patchedForSafari","patchForSafariInProgress","paused","once","uploadProgress","withDate","datetime","sender","isSelected","isSelectable","onCancelUpload","onDateClick","extension","getDocumentExtension","fileName","timestamp","isDownloadAllowed","setIsDownloadAllowed","useMediaWithDownloadProgress","getMessageMediaHash","isUploading","isTransferring","transferProgress","getMediaTransferState","hasPreview","getDocumentHasPreview","thumbDataUri","getMessageMediaThumbDataUri","localBlobUrl","previewData","isAllowed","handleDateClick","download","thumbnailDataUri","StickerSetModalAsync","StickerSetModal","useModuleLoader","Bundles","Extra","TEXT_FORMAT_BY_TAG_NAME","anchorPosition","selectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","linkUrl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","EDITABLE_INPUT_ID","textFormat","tagName","getSelectedText","getSelectedElement","updateInputStyles","input","getFormatButtonClassName","fKey","monospace","strikethrough","handleBoldText","execCommand","bold","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","replaceWith","handleMonospaceText","handleLinkUrlConfirm","formattedLinkUrl","restoreSelection","KeyK","KeyB","KeyU","KeyI","KeyM","KeyS","code","altKey","ctrlKey","metaKey","linkUrlConfirmClassName","onKeyDown","autoComplete","inputMode","idPrefix","mediaBlobUrl","getMessageVideo","formatMediaDuration","MIN_SPIKES","MAX_SPIKES","renderSeekline","playProgress","handleStartSeek","handleSeek","handleStopSeek","onMouseMove","onMouseUp","theme","senderTitle","renderingFor","date","onPlay","onReadMedia","audio","voice","isMediaUnread","isVoice","isSeeking","isActivated","setIsActivated","shouldDownload","getMessageMediaFormat","useBuffering","playPause","setCurrentTime","useAudioPlayer","getMessageKey","getMediaDuration","isMessageLocal","shouldRenderSpinner","spinnerClassNames","handleButtonClick","seekBar","seekHandlers","isOwn","isOwnMessage","renderedWaveform","waveform","fillColor","fillOwnColor","progressFillColor","progressFillOwnColor","durationFactor","spikesCount","decodedWaveform","encoded5bit","bitsCount","valuesCount","bitsData","byteIndex","bitShift","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","data","spikes","peak","fitCount","newData","springFactor","leftFiller","rightFiller","idx","val","interpolateArray","fillStyle","progressFillStyle","ctx","scale","item","globalAlpha","spikeHeight","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveformToDataUri","draggable","renderWaveform","buttonClassNames","showSeekline","contentClassName","ProgressSpinner","getFirstLine","formatPastTimeShort","performer","getSecondLine","formatMediaDateTime","renderAudio","renderVoice","active","badgeCount","isBadgeActive","previousActiveTab","tabRef","tab","indicator","currentIndicator","shiftLeft","offsetLeft","scaleFactor","clientWidth","transform","tabs","activeTab","onSwitchTab","useHorizontalScroll","activeTabElement","newLeft","fastSmoothScrollHorizontal","READABLE_ERROR_MESSAGES","CHAT_RESTRICTED","CHAT_WRITE_FORBIDDEN","CHAT_SEND_POLL_FORBIDDEN","CHAT_SEND_STICKERS_FORBIDDEN","CHAT_SEND_GIFS_FORBIDDEN","CHAT_SEND_MEDIA_FORBIDDEN","CHAT_LINK_EXISTS","SLOWMODE_WAIT_X","USER_BANNED_IN_CHANNEL","USER_IS_BLOCKED","YOU_BLOCKED_USER","IMAGE_PROCESS_FAILED","MEDIA_EMPTY","MEDIA_INVALID","PHOTO_EXT_INVALID","PHOTO_INVALID_DIMENSIONS","PHOTO_SAVE_FILE_INVALID","MESSAGE_DELETE_FORBIDDEN","MESSAGE_POLL_CLOSED","MESSAGE_EDIT_TIME_EXPIRED","CHAT_ADMIN_REQUIRED","PINNED_DIALOGS_TOO_MUCH","DIALOG_FILTERS_TOO_MUCH","CHANNEL_PRIVATE","MEDIA_CAPTION_TOO_LONG","ADDRESS_STREET_LINE1_INVALID","ADDRESS_STREET_LINE2_INVALID","ADDRESS_CITY_INVALID","ADDRESS_COUNTRY_INVALID","ADDRESS_POSTCODE_INVALID","ADDRESS_STATE_INVALID","REQ_INFO_NAME_INVALID","REQ_INFO_PHONE_INVALID","REQ_INFO_EMAIL_INVALID","LINK_NOT_MODIFIED","SERVICE_WORKER_DISABLED","CAPTION_TOO_LONG_PLEASE_REMOVE_CHARACTERS","FRESH_RESET_AUTHORISATION_FORBIDDEN","BOTS_TOO_MUCH","BOT_GROUPS_BLOCKED","USERS_TOO_MUCH","USER_CHANNELS_TOO_MUCH","USER_KICKED","USER_NOT_MUTUAL_CONTACT","USER_PRIVACY_RESTRICTED","INVITE_HASH_EMPTY","INVITE_HASH_EXPIRED","INVITE_HASH_INVALID","CHANNELS_TOO_MUCH","USER_ALREADY_PARTICIPANT","getReadableErrorText","error","isSlowMode","textParams","extraPartIndex","errorMessage","reduce","acc","CLIPBOARD_ITEM_SUPPORTED","navigator","clipboard","ClipboardItem","textCopyEl","copyTextToClipboard","str","rangeToRestore","rangeCount","getRangeAt","select","copyImageToClipboard","imageUrl","imageEl","drawImage","toBlob","copyBlobToClipboard","pngBlob","write","privateChatUser","handleDelete","folderId","isPinned","toggleChatPinned","updateChatMutedState","toggleChatArchived","toggleChatUnread","actionUnreadMark","unreadCount","hasUnreadMark","actionPin","actionMute","isMuted","actionArchive","isChatArchived","getCanDeleteChat","LastMessageMeta","outgoingStatus","Keys","MessageOutgoingStatus","extraPaddingX","extraTopPadding","setPositionX","setPositionY","setStyle","triggerEl","emptyRect","menuEl","rootEl","triggerRect","menuRect","rootRect","ShowTransition","isCustom","prevChildren","fromChildrenRef","trackId","originalDuration","handlers","onInit","shouldPlay","onForcePlay","noPlaylist","setIsPlaying","isPlayingSync","setPlayProgress","register","eventName","proxy","isFinite","prevShouldPlay","prevSrc","audioProxy","tracks","currentTrackId","queue","stopCurrentAudio","currentTrack","Audio","handleEvent","nextTrackId","openAudioPlayer","parseMessageKey","nextTrack","safePlay","Proxy","createAudio","preload","IS_SAFARI","time","shouldRemoveFromQueue","track","h","filename","link","click","shouldSpinnerRender","getColorFromExtension","sizeString","getFileSizeString","mul_table","shg_table","boxBlurCanvasRGB","context","top_x","top_y","iterations","isNaN","imageData","getImageData","pixels","rsum","gsum","bsum","p","p1","p2","yp","yi","yw","wm","hm","rad1","r","g","b","mul_sum","shg_sum","vmin","vmax","putImageData","onDismiss","setIsOpen","timerRef","closeAndDismiss","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","isSelectionInsideInput","selectionRange","parentNode","MAX_INPUT_HEIGHT","currentChatId","threadId","selectCurrentMessageList","messageSendKeyCombo","replyingToId","selectReplyingToId","noTabCapture","isPollModalOpen","payment","isPaymentModalOpen","editableInputId","shouldSetFocus","shouldSupressFocus","onUpdate","onSupressedFocus","onSend","editLastMessage","cloneRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","setSelectedRange","useLayoutEffectWithPrevDeps","prevHtml","clone","updateInputHeight","focusInput","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","parseEmojiOnlyString","START_TO_END","selectionRect","inputRect","captureFirstTab","onTab","supressFocus","contentEditable","handleKeyUp","IS_ANDROID","closeContextMenuMouseListener","closeContextMenuKeyListener","handleMouseUp","onTouchCancel","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","messageText","getMessageSummaryText","siteName","description","handleMessageClick","displayUrl","truncatedDescription","data-initial","ChatAnimationTypes","Badge","isShown","renderContent","unreadMentionsCount","formatIntegerCompact","FolderTypeToListType","replyToMessageId","isOutgoing","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","selectChatMessage","targetUserId","actionTargetUserId","targetChatId","actionTargetChatId","privateChatUserId","messageListType","lastMessageOutgoingStatus","selectOutgoingStatus","actionTargetUser","draft","selectDraft","MAIN_THREAD_ID","orderDiff","animationType","openChat","focusLastMessage","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isAction","isActionMessage","useEnsureMessage","mediaThumbnail","getMessageSticker","Opacity","opacity","Move","useChatContextActions","Avatar","TypingStatus","actionOrigin","renderActionMessageText","asPlain","senderName","getMessageSenderName","blobUrl","renderMessageSummary","renderLastMessageOrTyping","DeleteChatModal","folderType","chats","byId","chatsById","orderedPinnedIds","users","usersById","currentThreadId","listType","chatFolder","selectChatFolder","isInDiscussionThread","noChatsText","loadMoreChats","preloadTopChatMessages","currentListIds","currentPinnedIds","prepareFolderListIds","orderById","orderedIds","newChatArrays","prepareChatList","singleList","pinnedChats","otherChats","newOrderedIds","prevOrderById","orderDiffById","mapValues","order","Infinity","loadMoreOfType","useInfiniteScroll","CHAT_LIST_SLICE","ALL_CHATS_PRELOAD_DISABLED","chatArrays","getAnimationType","movesUp","movesDown","orderDiffIds","numberOfUp","numberOfDown","None","useChatAnimationType","viewportOffset","pinnedOffset","CHAT_HEIGHT_PX","teactOrderKey","getChatOrder","renderChats","Loading","openUserInfo","focusMessage","targetUser","targetMessage","textOptions","maxTextLength","unprocessed","processed","processPlaceholder","isEmbedded","isChat","renderChatContent","renderUserContent","pop","getMessageContent","showQuotes","renderMessageContent","invoice","renderProductContent","renderMigratedContent","replaceValue","placeholderPosition","RE_NOT_USERNAME_SEARCH","useMentionMenu","canSuggestMembers","onUpdateHtml","groupChatMembers","currentUserId","markIsOpen","unmarkIsOpen","currentFilter","setCurrentFilter","filteredMembers","setFilteredMembers","getFilteredMembers","usernameLowered","toLowerCase","fullNameLowered","filterLowered","searchWords","searchUserName","usernameFilter","tempEl","lastSymbol","lastWord","test","getUsernameFilter","membersToMention","insertMention","forceFocus","insertedHtml","atIndex","lastIndexOf","messageInput","getElementById","isMentionMenuOpen","mentionFilter","closeMentionMenu","mentionFilteredMembers"],"mappings":"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","file":"0.6780d71e96d695a09668.js","sourcesContent":["import { ApiMediaFormat } from '../api/types';\n\nimport * as langProvider from '../util/langProvider';\nimport useForceUpdate from './useForceUpdate';\nimport useOnChange from './useOnChange';\n\nexport type LangFn = typeof langProvider.getTranslation;\n\nexport default <T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(): LangFn => {\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    return langProvider.addCallback(forceUpdate);\n  }, [forceUpdate]);\n\n  return langProvider.getTranslation;\n};\n","import { RefObject } from 'react';\nimport React, { FC, useRef, useCallback } from '../../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../../util/environment';\nimport buildClassName from '../../util/buildClassName';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useContextMenuPosition from '../../hooks/useContextMenuPosition';\n\nimport RippleEffect from './RippleEffect';\nimport Menu from './Menu';\nimport MenuItem from './MenuItem';\n\nimport './ListItem.scss';\n\ntype OnClickHandler = (e: React.MouseEvent<HTMLDivElement>) => void;\n\ntype MenuItemContextAction = {\n  title: string;\n  icon: string;\n  destructive?: boolean;\n  handler?: () => void;\n};\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  icon?: string;\n  className?: string;\n  style?: string;\n  children: any;\n  disabled?: boolean;\n  ripple?: boolean;\n  narrow?: boolean;\n  inactive?: boolean;\n  focus?: boolean;\n  destructive?: boolean;\n  contextActions?: MenuItemContextAction[];\n  onClick?: OnClickHandler;\n};\n\nconst ListItem: FC<OwnProps> = (props) => {\n  const {\n    ref,\n    icon,\n    className,\n    style,\n    children,\n    disabled,\n    ripple,\n    narrow,\n    inactive,\n    contextActions,\n    focus,\n    destructive,\n    onClick,\n  } = props;\n\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const {\n    isContextMenuOpen, contextMenuPosition,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(containerRef, !contextActions);\n\n  const getTriggerElement = useCallback(() => containerRef.current, []);\n\n  const getRootElement = useCallback(\n    () => containerRef.current!.closest('.custom-scroll'),\n    [],\n  );\n\n  const getMenuElement = useCallback(\n    () => containerRef.current!.querySelector('.ListItem-context-menu .bubble'),\n    [],\n  );\n\n  const { positionX, positionY, style: menuStyle } = useContextMenuPosition(\n    contextMenuPosition,\n    getTriggerElement,\n    getRootElement,\n    getMenuElement,\n  );\n\n  const handleClick = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (disabled || !onClick) {\n      return;\n    }\n    onClick(e);\n  }, [disabled, onClick]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (inactive || IS_TOUCH_ENV) {\n      return;\n    }\n    if (contextActions && (e.button === 2 || !onClick)) {\n      handleBeforeContextMenu(e);\n    }\n    if (e.button === 0) {\n      if (!onClick) {\n        handleContextMenu(e);\n      } else {\n        handleClick(e);\n      }\n    }\n  }, [inactive, contextActions, onClick, handleBeforeContextMenu, handleContextMenu, handleClick]);\n\n  const fullClassName = buildClassName(\n    'ListItem no-selection',\n    className,\n    ripple && 'has-ripple',\n    narrow && 'narrow',\n    disabled && 'disabled',\n    inactive && 'inactive',\n    contextMenuPosition && 'has-menu-open',\n    focus && 'focus',\n    destructive && 'destructive',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={fullClassName}\n      // @ts-ignore\n      style={style}\n    >\n      <div\n        className=\"ListItem-button\"\n        role=\"button\"\n        tabIndex={0}\n        onClick={!inactive && IS_TOUCH_ENV ? handleClick : undefined}\n        onMouseDown={handleMouseDown}\n        onContextMenu={!inactive && contextActions ? handleContextMenu : undefined}\n      >\n        {icon && (\n          <i className={`icon-${icon}`} />\n        )}\n        {children}\n        {!disabled && !inactive && ripple && (\n          <RippleEffect />\n        )}\n      </div>\n      {contextActions && contextMenuPosition !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          positionX={positionX}\n          positionY={positionY}\n          style={menuStyle}\n          className=\"ListItem-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextActions.map((action) => (\n            <MenuItem\n              key={action.title}\n              icon={action.icon}\n              destructive={action.destructive}\n              disabled={!action.handler}\n              onClick={action.handler}\n            >\n              {action.title}\n            </MenuItem>\n          ))}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default ListItem;\n","import { RefObject } from 'react';\nimport {\n  useEffect, useRef, useCallback, useState,\n} from '../lib/teact/teact';\n\nimport { throttle, debounce } from '../util/schedulers';\nimport useHeavyAnimationCheck from './useHeavyAnimationCheck';\n\ntype TargetCallback = (entry: IntersectionObserverEntry) => void;\ntype RootCallback = (entries: IntersectionObserverEntry[]) => void;\ntype ObserveCleanup = NoneToVoidFunction;\nexport type ObserveFn = (target: HTMLElement, targetCallback?: TargetCallback) => ObserveCleanup;\n\ninterface IntersectionController {\n  observer: IntersectionObserver;\n  callbacks: Map<HTMLElement, TargetCallback>;\n}\n\ninterface Response {\n  observe: ObserveFn;\n  freeze: NoneToVoidFunction;\n  unfreeze: NoneToVoidFunction;\n}\n\nexport function useIntersectionObserver({\n  rootRef,\n  throttleMs,\n  debounceMs,\n  shouldSkipFirst,\n  margin,\n  threshold,\n  isDisabled,\n}: {\n  rootRef: RefObject<HTMLDivElement>;\n  throttleMs?: number;\n  debounceMs?: number;\n  shouldSkipFirst?: boolean;\n  margin?: number;\n  threshold?: number | number[];\n  isDisabled?: boolean;\n}, rootCallback?: RootCallback): Response {\n  const controllerRef = useRef<IntersectionController>();\n  const rootCallbackRef = useRef<RootCallback>();\n  const isFrozenRef = useRef<boolean>();\n  const onUnfreezeRef = useRef<NoneToVoidFunction>();\n\n  rootCallbackRef.current = rootCallback;\n\n  const freeze = useCallback(() => {\n    isFrozenRef.current = true;\n  }, []);\n\n  const unfreeze = useCallback(() => {\n    isFrozenRef.current = false;\n\n    if (onUnfreezeRef.current) {\n      onUnfreezeRef.current();\n      onUnfreezeRef.current = undefined;\n    }\n  }, []);\n\n  useHeavyAnimationCheck(freeze, unfreeze);\n\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (controllerRef.current) {\n        controllerRef.current.observer.disconnect();\n        controllerRef.current.callbacks.clear();\n        controllerRef.current = undefined;\n      }\n    };\n  }, [isDisabled]);\n\n  function initController() {\n    const callbacks = new Map();\n    const entriesAccumulator = new Map<Element, IntersectionObserverEntry>();\n    const observerCallbackSync = () => {\n      const entries = Array.from(entriesAccumulator.values());\n\n      entries.forEach((entry: IntersectionObserverEntry) => {\n        const callback = callbacks.get(entry.target);\n        if (callback) {\n          callback!(entry, entries);\n        }\n      });\n\n      if (rootCallbackRef.current) {\n        rootCallbackRef.current(entries);\n      }\n\n      entriesAccumulator.clear();\n    };\n    const scheduler = throttleMs ? throttle : debounceMs ? debounce : undefined;\n    const observerCallback = scheduler\n      ? scheduler(observerCallbackSync, (throttleMs || debounceMs)!, !shouldSkipFirst)\n      : observerCallbackSync;\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          entriesAccumulator.set(entry.target, entry);\n        });\n\n        if (isFrozenRef.current) {\n          onUnfreezeRef.current = () => {\n            observerCallback();\n          };\n        } else {\n          observerCallback();\n        }\n      },\n      {\n        root: rootRef.current,\n        rootMargin: margin ? `${margin}px` : undefined,\n        threshold,\n      },\n    );\n\n    controllerRef.current = { observer, callbacks };\n  }\n\n  const observe = useCallback((target, targetCallback) => {\n    if (!controllerRef.current) {\n      initController();\n    }\n\n    const controller = controllerRef.current!;\n    controller.observer.observe(target);\n\n    if (targetCallback) {\n      controller.callbacks.set(target, targetCallback);\n    }\n\n    return () => {\n      if (targetCallback) {\n        controller.callbacks.delete(target);\n      }\n\n      controller.observer.unobserve(target);\n    };\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled]);\n\n  return { observe, freeze, unfreeze };\n}\n\nexport function useOnIntersect(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  useEffect(() => {\n    return observe ? observe(targetRef.current!, callback) : undefined;\n    // Arguments should never change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport function useIsIntersecting(\n  targetRef: RefObject<HTMLDivElement>, observe?: ObserveFn, callback?: TargetCallback,\n) {\n  const [isIntersecting, setIsIntersecting] = useState(!observe);\n\n  useOnIntersect(targetRef, observe, (entry) => {\n    setIsIntersecting(entry.isIntersecting);\n\n    if (callback) {\n      callback(entry);\n    }\n  });\n\n  return isIntersecting;\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport { selectChatMessages, selectUser } from '../../modules/selectors';\nimport { getUserFullName, getUserStatus, isUserOnline } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId: number;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  withMediaViewer?: boolean;\n  withHandle?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  noStatusOrTyping?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  areMessagesLoaded: boolean;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullUser' | 'openMediaViewer'>;\n\nconst PrivateChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  withMediaViewer,\n  withHandle,\n  withFullInfo,\n  withUpdatingStatus,\n  noStatusOrTyping,\n  user,\n  isSavedMessages,\n  areMessagesLoaded,\n  lastSyncTime,\n  loadFullUser,\n  openMediaViewer,\n}) => {\n  const { id: userId } = user || {};\n  const fullName = getUserFullName(user);\n\n  useEffect(() => {\n    if (withFullInfo && lastSyncTime && userId) {\n      loadFullUser({ userId });\n    }\n  }, [userId, loadFullUser, lastSyncTime, withFullInfo]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (user && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: user.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [user, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!user) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return (\n        <span className=\"status\">{status}</span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <span className=\"status\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    return (\n      <div className={`status ${isUserOnline(user) ? 'online' : ''}`}>\n        {withHandle && user.username && <span className=\"handle\">{user.username}</span>}\n        <span className=\"user-status\">{getUserStatus(user, lang)}</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\">\n      <Avatar\n        key={user.id}\n        size={avatarSize}\n        user={user}\n        isSavedMessages={isSavedMessages}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {isSavedMessages ? (\n          <div className=\"title\">\n            <h3>{lang('SavedMessages')}</h3>\n          </div>\n        ) : (\n          <div className=\"title\">\n            <h3>{fullName && renderText(fullName)}</h3>\n            {user && user.isVerified && <VerifiedIcon />}\n          </div>\n        )}\n        {!isSavedMessages && !noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { lastSyncTime } = global;\n    const user = selectUser(global, userId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, userId));\n\n    return {\n      lastSyncTime, user, isSavedMessages, areMessagesLoaded,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullUser', 'openMediaViewer']),\n)(PrivateChatInfo));\n","import { useEffect } from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\n\nexport default <T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | false | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n) => {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (!noLoad && mediaHash && !mediaData) {\n      const startedAt = Date.now();\n\n      mediaLoader.fetch(mediaHash, mediaFormat).then(() => {\n        const spentTime = Date.now() - startedAt;\n        if (!delay || spentTime >= delay) {\n          forceUpdate();\n        } else {\n          setTimeout(forceUpdate, delay - spentTime);\n        }\n      });\n    }\n  }, [noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, delay]);\n\n  return mediaData;\n};\n","import React, { FC, useEffect, useRef } from '../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport trapFocus from '../../util/trapFocus';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../hooks/useLang';\n\nimport Button from './Button';\nimport Portal from './Portal';\n\nimport './Modal.scss';\n\nconst ANIMATION_DURATION = 200;\n\ntype OwnProps = {\n  title?: string;\n  className?: string;\n  isOpen?: boolean;\n  header?: FC;\n  hasCloseButton?: boolean;\n  noBackdrop?: boolean;\n  children: any;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  onEnter?: () => void;\n};\n\nconst Modal: FC<OwnProps> = (props) => {\n  const {\n    title,\n    className,\n    isOpen,\n    header,\n    hasCloseButton,\n    noBackdrop,\n    children,\n    onClose,\n    onCloseAnimationEnd,\n    onEnter,\n  } = props;\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen, onCloseAnimationEnd);\n  // eslint-disable-next-line no-null/no-null\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => (isOpen\n    ? captureKeyboardListeners({ onEsc: onClose, onEnter })\n    : undefined), [isOpen, onClose, onEnter]);\n  useEffect(() => (isOpen && modalRef.current ? trapFocus(modalRef.current) : undefined), [isOpen]);\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    document.body.classList.toggle('has-open-dialog', isOpen);\n\n    if (isOpen || (!isOpen && prevIsOpen !== undefined)) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION);\n    }\n\n    return () => {\n      document.body.classList.remove('has-open-dialog');\n    };\n  }, [isOpen]);\n\n  const lang = useLang();\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    if (header) {\n      return header;\n    }\n\n    if (!title) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header\">\n        {hasCloseButton && (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <i className=\"icon-close\" />\n          </Button>\n        )}\n        <div className=\"modal-title\">{title}</div>\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Modal',\n    className,\n    transitionClassNames,\n    noBackdrop && 'transparent-backdrop',\n  );\n\n  return (\n    <Portal>\n      <div\n        ref={modalRef}\n        className={fullClassName}\n        tabIndex={-1}\n        role=\"dialog\"\n      >\n        <div className=\"modal-container\">\n          <div className=\"modal-backdrop\" onClick={onClose} />\n          <div className=\"modal-dialog\">\n            {renderHeader()}\n            <div className=\"modal-content custom-scroll\">\n              {children}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default Modal;\n","export default function trapFocus(element: HTMLElement) {\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key !== 'Tab') {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    const focusableElements = Array.from(\n      element.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'),\n    ) as HTMLElement[];\n    if (!focusableElements.length) {\n      return;\n    }\n\n    const currentFocusedIndex = focusableElements.findIndex((em) => em.isSameNode(document.activeElement));\n    let newFocusedIndex = 0;\n    if (currentFocusedIndex >= 0) {\n      if (e.shiftKey) {\n        newFocusedIndex = currentFocusedIndex > 0\n          ? currentFocusedIndex - 1\n          : focusableElements.length - 1;\n      } else {\n        newFocusedIndex = currentFocusedIndex < focusableElements.length - 1\n          ? currentFocusedIndex + 1\n          : 0;\n      }\n    }\n\n    focusableElements[newFocusedIndex].focus();\n  }\n\n  document.addEventListener('keydown', handleKeyDown, false);\n\n  return () => {\n    document.removeEventListener('keydown', handleKeyDown, false);\n  };\n}\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, { FC, useCallback, memo } from '../../lib/teact/teact';\n\nimport { ApiUser, ApiChat, ApiMediaFormat } from '../../api/types';\n\nimport { IS_TEST } from '../../config';\nimport {\n  getChatAvatarHash, getChatTitle, isChatPrivate,\n  getUserFullName, isUserOnline, isDeletedUser, getUserColorKey,\n} from '../../modules/helpers';\nimport { getFirstLetters } from '../../util/textFormat';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useLang from '../../hooks/useLang';\n\nimport './Avatar.scss';\n\ntype OwnProps = {\n  className?: string;\n  size?: 'micro' | 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  withOnlineStatus?: boolean;\n  chat?: ApiChat;\n  user?: ApiUser;\n  text?: string;\n  isSavedMessages?: boolean;\n  lastSyncTime?: number;\n  onClick?: (e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => void;\n};\n\nconst Avatar: FC<OwnProps> = ({\n  className,\n  size = 'large',\n  chat,\n  user,\n  text,\n  withOnlineStatus,\n  isSavedMessages,\n  lastSyncTime,\n  onClick,\n}) => {\n  const isDeleted = user && isDeletedUser(user);\n  let imageHash: string | undefined;\n\n  if (!isSavedMessages && !isDeleted) {\n    if (user) {\n      imageHash = getChatAvatarHash(user);\n    } else if (chat) {\n      imageHash = getChatAvatarHash(chat);\n    }\n  }\n\n  const dataUri = useMedia(imageHash, false, ApiMediaFormat.DataUri, lastSyncTime);\n  const { shouldRenderFullMedia, transitionClassNames } = useTransitionForMedia(dataUri, 'slow');\n\n  useLang();\n\n  let content: string | undefined = '';\n\n  if (isSavedMessages) {\n    content = <i className=\"icon-avatar-saved-messages\" />;\n  } else if (isDeleted) {\n    content = <i className=\"icon-avatar-deleted-account\" />;\n  } else if (shouldRenderFullMedia) {\n    content = <img src={dataUri} className={`${transitionClassNames} avatar-media`} alt=\"\" decoding=\"async\" />;\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(chat);\n    content = title && getFirstLetters(title, isChatPrivate(chat.id) ? 2 : 1);\n  } else if (text) {\n    content = getFirstLetters(text, 2);\n  }\n\n  const isOnline = !isSavedMessages && user && isUserOnline(user);\n  const fullClassName = buildClassName(\n    `Avatar size-${size}`,\n    className,\n    `color-bg-${getUserColorKey(user || chat)}`,\n    isSavedMessages && 'saved-messages',\n    isDeleted && 'deleted-account',\n    withOnlineStatus && isOnline && 'online',\n    onClick && 'interactive',\n    (!isSavedMessages && !shouldRenderFullMedia) && 'no-photo',\n  );\n\n  const handleClick = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (onClick) {\n      onClick(e, isSavedMessages || shouldRenderFullMedia);\n    }\n  }, [onClick, isSavedMessages, shouldRenderFullMedia]);\n\n  const senderId = (user || chat) && (user || chat)!.id;\n\n  return (\n    <div className={fullClassName} onClick={handleClick} data-test-sender-id={IS_TEST ? senderId : undefined}>\n      {typeof content === 'string' ? renderText(content, [size === 'jumbo' ? 'hq_emoji' : 'emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(Avatar);\n","import { RefObject } from 'react';\nimport React, {\n  FC, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { IS_MOBILE_SCREEN } from '../../util/environment';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\nimport { dispatchHeavyAnimationEvent } from '../../hooks/useHeavyAnimationCheck';\n\nimport './Transition.scss';\n\ntype ChildrenFn = (isActive: boolean, isFrom: boolean) => any;\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  activeKey: number;\n  name: (\n    'none' | 'slide' | 'mv-slide' | 'slide-fade' | 'zoom-fade' | 'scroll-slide' | 'fade' | 'slide-layers'\n    | 'push-slide' | 'reveal'\n  );\n  direction?: 'auto' | 'inverse' | 1 | -1;\n  renderCount?: number;\n  shouldRestoreHeight?: boolean;\n  shouldCleanup?: boolean;\n  id?: string;\n  className?: string;\n  onStart?: () => void;\n  onStop?: () => void;\n  children: ChildrenFn;\n};\n\ntype StateProps = {\n  animationLevel: number;\n};\n\nconst ANIMATION_DURATION = {\n  slide: 450,\n  'mv-slide': 400,\n  'slide-fade': 400,\n  'zoom-fade': 150,\n  'scroll-slide': 500,\n  fade: 150,\n  'slide-layers': IS_MOBILE_SCREEN ? 450 : 300,\n  'push-slide': 300,\n  reveal: 350,\n};\n\nconst CLEANED_UP = Symbol('CLEANED_UP');\n\nconst Transition: FC<OwnProps & StateProps> = ({\n  ref,\n  activeKey,\n  name,\n  direction = 'auto',\n  renderCount,\n  shouldRestoreHeight,\n  shouldCleanup,\n  id,\n  className,\n  onStart,\n  onStop,\n  children,\n  animationLevel,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const rendersRef = useRef<Record<number, ChildrenFn | typeof CLEANED_UP>>({});\n  const prevActiveKey = usePrevious<any>(activeKey);\n  const activateTimeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  const activeKeyChanged = prevActiveKey !== undefined && activeKey !== prevActiveKey;\n\n  if (!renderCount && activeKeyChanged) {\n    rendersRef.current = { [prevActiveKey]: rendersRef.current[prevActiveKey] };\n  }\n\n  rendersRef.current[activeKey] = children;\n\n  useLayoutEffect(() => {\n    function cleanup() {\n      if (!shouldCleanup) {\n        return;\n      }\n\n      rendersRef.current = { [prevActiveKey]: CLEANED_UP };\n      forceUpdate();\n    }\n\n    const container = containerRef.current!;\n\n    const childElements = container.children;\n    if (childElements.length === 1 && !activeKeyChanged) {\n      childElements[0].classList.add('active');\n\n      return;\n    }\n\n    const childNodes = Array.from(container.childNodes);\n\n    if (!activeKeyChanged || !childNodes.length) {\n      return;\n    }\n\n    if (activateTimeoutRef.current) {\n      clearTimeout(activateTimeoutRef.current);\n      activateTimeoutRef.current = undefined;\n    }\n\n    const isBackwards = (\n      direction === -1\n      || (direction === 'auto' && prevActiveKey > activeKey)\n      || (direction === 'inverse' && prevActiveKey < activeKey)\n    );\n\n    container.classList.remove('animating');\n    container.classList.toggle('backwards', isBackwards);\n\n    const keys = Object.keys(rendersRef.current).map(Number);\n    const prevActiveIndex = renderCount ? prevActiveKey : keys.indexOf(prevActiveKey);\n    const activeIndex = renderCount ? activeKey : keys.indexOf(activeKey);\n\n    if (name === 'none' || animationLevel === 0) {\n      childNodes.forEach((node, i) => {\n        if (node instanceof HTMLElement) {\n          node.classList.remove('from', 'through', 'to');\n          node.classList.toggle('active', i === activeIndex);\n        }\n      });\n\n      cleanup();\n\n      return;\n    }\n\n    childNodes.forEach((node, i) => {\n      if (node instanceof HTMLElement) {\n        node.classList.remove('active');\n        node.classList.toggle('from', i === prevActiveIndex);\n        node.classList.toggle('through', (\n          (i > prevActiveIndex && i < activeIndex) || (i < prevActiveIndex && i > activeIndex)\n        ));\n        node.classList.toggle('to', i === activeIndex);\n      }\n    });\n\n    if (name === 'scroll-slide') {\n      const width = container.offsetWidth;\n      container.scrollBy({\n        left: activeIndex > prevActiveIndex ? width : -width,\n        behavior: 'smooth',\n      });\n    }\n\n    if (animationLevel > 0) {\n      dispatchHeavyAnimationEvent(ANIMATION_DURATION[name] + ANIMATION_END_DELAY);\n    }\n\n    requestAnimationFrame(() => {\n      container.classList.add('animating');\n\n      activateTimeoutRef.current = window.setTimeout(() => {\n        requestAnimationFrame(() => {\n          container.classList.remove('animating', 'backwards');\n\n          childNodes.forEach((node, i) => {\n            if (node instanceof HTMLElement) {\n              node.classList.remove('from', 'through', 'to');\n              node.classList.toggle('active', i === activeIndex);\n            }\n          });\n\n          if (name === 'scroll-slide') {\n            container.scrollLeft = activeKey * container.offsetWidth;\n          }\n\n          if (shouldRestoreHeight) {\n            const activeElement = container.querySelector<HTMLDivElement>('.active');\n\n            if (activeElement) {\n              activeElement.style.height = 'auto';\n              container.style.height = `${activeElement.clientHeight}px`;\n            }\n          }\n\n          cleanup();\n\n          if (onStop) {\n            onStop();\n          }\n        });\n      }, ANIMATION_DURATION[name] + ANIMATION_END_DELAY);\n\n      if (onStart) {\n        onStart();\n      }\n    });\n  }, [\n    activeKey,\n    prevActiveKey,\n    activeKeyChanged,\n    direction,\n    name,\n    onStart,\n    onStop,\n    renderCount,\n    shouldRestoreHeight,\n    shouldCleanup,\n    animationLevel,\n    forceUpdate,\n  ]);\n\n  useLayoutEffect(() => {\n    if (shouldRestoreHeight) {\n      const container = containerRef.current!;\n      const activeElement = container.querySelector<HTMLDivElement>('.active')\n        || container.querySelector<HTMLDivElement>('.from');\n\n      if (activeElement) {\n        activeElement.style.height = 'auto';\n        container.style.height = `${activeElement.clientHeight}px`;\n      }\n    }\n  }, [shouldRestoreHeight, children]);\n\n  const renders = rendersRef.current;\n  const collection = Object.keys(renderCount ? new Array(renderCount).fill(undefined) : renders).map(Number);\n  const contents = collection.map((key) => {\n    const render = renders[key];\n\n    return (\n      typeof render === 'function' ? <div key={key}>{render(key === activeKey, key === prevActiveKey)}</div> : undefined\n    );\n  });\n\n  const fullClassName = buildClassName(\n    'Transition',\n    className,\n    animationLevel === 0 && name === 'scroll-slide' ? 'slide' : name,\n  );\n\n  return (\n    <div ref={containerRef} id={id} className={fullClassName}>\n      {contents}\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>((global) => {\n  const { animationLevel } = global.settings.byKey;\n  return { animationLevel };\n})(Transition);\n","import { RefObject, UIEvent } from 'react';\nimport { LoadMoreDirection } from '../../types';\n\nimport React, {\n  FC, useCallback, useEffect, useLayoutEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport { debounce } from '../../util/schedulers';\nimport resetScroll from '../../util/resetScroll';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  className?: string;\n  onLoadMore?: ({ direction }: { direction: LoadMoreDirection }) => void;\n  onScroll?: (e: UIEvent<HTMLDivElement>) => void;\n  items?: any[];\n  itemSelector?: string;\n  preloadBackwards?: number;\n  sensitiveArea?: number;\n  isDisabled?: boolean;\n  noFastList?: boolean;\n  cacheBuster?: any;\n  children: any;\n};\n\nconst DEFAULT_LIST_SELECTOR = '.ListItem';\nconst DEFAULT_PRELOAD_BACKWARDS = 20;\nconst DEFAULT_SENSITIVE_AREA = 800;\n\nconst InfiniteScroll: FC<OwnProps> = ({\n  ref,\n  className,\n  onLoadMore,\n  onScroll,\n  items,\n  itemSelector = DEFAULT_LIST_SELECTOR,\n  preloadBackwards = DEFAULT_PRELOAD_BACKWARDS,\n  sensitiveArea = DEFAULT_SENSITIVE_AREA,\n  // Used to turn off restoring scroll position (e.g. for frequently re-ordered chat or user lists)\n  isDisabled = false,\n  noFastList,\n  // Used to re-query `listItemElements` if rendering is delayed by transition\n  cacheBuster,\n  children,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  let containerRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    containerRef = ref;\n  }\n\n  const stateRef = useRef<{\n    listItemElements: NodeListOf<HTMLDivElement>;\n    isScrollTopJustUpdated: boolean;\n    currentAnchor: HTMLDivElement | undefined;\n    currentAnchorTop: number;\n  }>({} as any);\n\n  const [loadMoreBackwards, loadMoreForwards] = useMemo(() => {\n    if (!onLoadMore) {\n      return [];\n    }\n\n    return [\n      debounce(() => onLoadMore({ direction: LoadMoreDirection.Backwards }), 1000, true, false),\n      debounce(() => onLoadMore({ direction: LoadMoreDirection.Forwards }), 1000, true, false),\n    ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onLoadMore, items]);\n\n  // Initial preload\n  useEffect(() => {\n    if (!loadMoreBackwards) {\n      return;\n    }\n\n    if (!items || items.length < preloadBackwards) {\n      loadMoreBackwards();\n    } else {\n      const { scrollHeight, clientHeight } = containerRef.current!;\n      if (clientHeight && scrollHeight <= clientHeight) {\n        loadMoreBackwards();\n      }\n    }\n  }, [items, loadMoreBackwards, preloadBackwards]);\n\n  // Restore `scrollTop` after adding items\n  useLayoutEffect(() => {\n    const container = containerRef.current!;\n    const state = stateRef.current;\n\n    state.listItemElements = container.querySelectorAll<HTMLDivElement>(itemSelector);\n\n    if (isDisabled) {\n      return;\n    }\n\n    let newScrollTop;\n\n    if (state.currentAnchor && Array.from(state.listItemElements).includes(state.currentAnchor)) {\n      const { scrollTop } = container;\n      const newAnchorTop = state.currentAnchor.getBoundingClientRect().top;\n      newScrollTop = scrollTop + (newAnchorTop - state.currentAnchorTop);\n    } else {\n      const nextAnchor = state.listItemElements[0];\n      if (nextAnchor && nextAnchor.offsetParent) {\n        state.currentAnchor = nextAnchor;\n        state.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n      }\n    }\n\n    resetScroll(container, newScrollTop);\n\n    state.isScrollTopJustUpdated = true;\n  }, [isDisabled, itemSelector, items, cacheBuster]);\n\n  const handleScroll = useCallback((e: UIEvent<HTMLDivElement>) => {\n    if (loadMoreForwards && loadMoreBackwards) {\n      const {\n        listItemElements, isScrollTopJustUpdated, currentAnchor, currentAnchorTop,\n      } = stateRef.current;\n\n      if (isScrollTopJustUpdated) {\n        stateRef.current.isScrollTopJustUpdated = false;\n        return;\n      }\n\n      const listLength = listItemElements.length;\n      const container = containerRef.current!;\n      const { scrollTop, scrollHeight, offsetHeight } = container;\n      const top = listLength ? listItemElements[0].offsetTop : 0;\n      const isNearTop = scrollTop <= top + sensitiveArea;\n      const bottom = listLength\n        ? listItemElements[listLength - 1].offsetTop + listItemElements[listLength - 1].offsetHeight\n        : scrollHeight;\n      const isNearBottom = bottom - (scrollTop + offsetHeight) <= sensitiveArea;\n      let isUpdated = false;\n\n      if (isNearTop) {\n        const nextAnchor = listItemElements[0];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingUp = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop > currentAnchorTop\n          );\n\n          if (isMovingUp) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            resetScroll(container);\n            loadMoreForwards();\n          }\n        }\n      }\n\n      if (isNearBottom) {\n        const nextAnchor = listItemElements[listLength - 1];\n        if (nextAnchor) {\n          const nextAnchorTop = nextAnchor.getBoundingClientRect().top;\n          const newAnchorTop = currentAnchor && currentAnchor !== nextAnchor\n            ? currentAnchor.getBoundingClientRect().top\n            : nextAnchorTop;\n          const isMovingDown = (\n            currentAnchor && currentAnchorTop !== undefined && newAnchorTop < currentAnchorTop\n          );\n\n          if (isMovingDown) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchorTop;\n            isUpdated = true;\n            resetScroll(container);\n            loadMoreBackwards();\n          }\n        }\n      }\n\n      if (!isUpdated) {\n        if (currentAnchor) {\n          stateRef.current.currentAnchorTop = currentAnchor.getBoundingClientRect().top;\n        } else {\n          const nextAnchor = listItemElements[0];\n\n          if (nextAnchor) {\n            stateRef.current.currentAnchor = nextAnchor;\n            stateRef.current.currentAnchorTop = nextAnchor.getBoundingClientRect().top;\n          }\n        }\n      }\n    }\n\n    if (onScroll) {\n      onScroll(e);\n    }\n  }, [loadMoreBackwards, loadMoreForwards, onScroll, sensitiveArea]);\n\n  return (\n    <div ref={containerRef} className={className} onScroll={handleScroll} teactFastList={!noFastList}>\n      {children}\n    </div>\n  );\n};\n\nexport default InfiniteScroll;\n","import usePrevious from './usePrevious';\n\nexport default <T extends any[], PT = T>(cb: (args: PT) => void, dependencies: T) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  if (!prevDeps || dependencies.some((d, i) => d !== prevDeps[i])) {\n    // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n    cb(prevDeps || []);\n  }\n};\n","import { useEffect, useRef, useState } from '../lib/teact/teact';\n\nimport useShowTransition from './useShowTransition';\n\nconst SPEED = {\n  fast: 200,\n  slow: 350,\n};\n\nexport default (mediaData?: any, speed: keyof typeof SPEED = 'fast', noAnimate = false) => {\n  const isMediaLoaded = Boolean(mediaData);\n  const willAnimate = !useRef(isMediaLoaded).current && !noAnimate;\n  const [shouldRenderThumb, setShouldRenderThumb] = useState(!isMediaLoaded);\n\n  const {\n    shouldRender: shouldRenderFullMedia,\n    transitionClassNames,\n  } = useShowTransition(isMediaLoaded, undefined, !willAnimate, speed);\n\n  useEffect(() => {\n    if (shouldRenderFullMedia) {\n      if (willAnimate) {\n        setTimeout(() => {\n          setShouldRenderThumb(false);\n        }, SPEED[speed]);\n      } else {\n        setShouldRenderThumb(false);\n      }\n    }\n  }, [willAnimate, shouldRenderFullMedia, speed]);\n\n  return {\n    shouldRenderThumb,\n    shouldRenderFullMedia,\n    transitionClassNames,\n  };\n};\n","import { ApiPhoto, ApiVideo, ApiSticker } from '../../../api/types';\nimport { getPhotoInlineDimensions, getVideoDimensions, IDimensions } from '../../../modules/helpers';\nimport windowSize from '../../../util/windowSize';\nimport { IS_MOBILE_SCREEN } from '../../../util/environment';\nimport { STICKER_SIZE_INLINE_DESKTOP_FACTOR, STICKER_SIZE_INLINE_MOBILE_FACTOR } from '../../../config';\n\nexport const MEDIA_VIEWER_MEDIA_QUERY = '(max-height: 640px)';\nexport const REM = parseInt(getComputedStyle(document.documentElement).fontSize, 10);\nexport const ROUND_VIDEO_DIMENSIONS = 200;\nexport const AVATAR_FULL_DIMENSIONS = { width: 640, height: 640 };\n\nconst DEFAULT_MEDIA_DIMENSIONS: IDimensions = { width: 100, height: 100 };\nconst LIKE_STICKER_ID = '1258816259753933';\nconst MOBILE_SCREEN_MAX_MESSAGE_SCREEN_WIDTH = 0.69;\n\nlet cachedMaxWidth: number | undefined;\n\nfunction getMaxMessageWidthRem(fromOwnMessage: boolean) {\n  const regularMaxWidth = fromOwnMessage ? 30 : 29;\n  if (!IS_MOBILE_SCREEN) {\n    return regularMaxWidth;\n  }\n\n  // @optimization Limitation: changing device screen width not supported\n  if (!cachedMaxWidth) {\n    cachedMaxWidth = Math.min(\n      regularMaxWidth,\n      Math.floor(window.innerWidth * MOBILE_SCREEN_MAX_MESSAGE_SCREEN_WIDTH) / REM,\n    );\n  }\n\n  return cachedMaxWidth;\n}\n\nfunction getAvailableWidth(\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n) {\n  const extraPaddingRem = isForwarded || isWebPagePhoto ? 1.625 : 0;\n  const availableWidthRem = getMaxMessageWidthRem(fromOwnMessage) - extraPaddingRem;\n\n  return availableWidthRem * REM;\n}\n\nfunction getAvailableHeight(isGif?: boolean, aspectRatio?: number) {\n  if (\n    isGif && aspectRatio\n    && aspectRatio >= 0.75 && aspectRatio <= 1.25\n  ) {\n    return 20 * REM;\n  }\n\n  return 27 * REM;\n}\n\nfunction calculateDimensionsForMessageMedia({\n  width,\n  height,\n  fromOwnMessage,\n  isForwarded,\n  isWebPagePhoto,\n  isGif,\n}: {\n  width: number;\n  height: number;\n  fromOwnMessage: boolean;\n  isForwarded?: boolean;\n  isWebPagePhoto?: boolean;\n  isGif?: boolean;\n}): IDimensions {\n  const aspectRatio = height / width;\n  const availableWidth = getAvailableWidth(fromOwnMessage, isForwarded, isWebPagePhoto);\n  const availableHeight = getAvailableHeight(isGif, aspectRatio);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function getMediaViewerAvailableDimensions(withFooter: boolean, isVideo: boolean): IDimensions {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let occupiedHeightRem = isVideo && mql.matches ? 10 : 8.25;\n  if (withFooter) {\n    occupiedHeightRem = mql.matches ? 10 : 15;\n  }\n\n  return {\n    width: windowWidth,\n    height: windowHeight - occupiedHeightRem * REM,\n  };\n}\n\nexport function calculateInlineImageDimensions(\n  photo: ApiPhoto,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n  isWebPagePhoto?: boolean,\n) {\n  const { width, height } = getPhotoInlineDimensions(photo) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isWebPagePhoto,\n  });\n}\n\nexport function calculateVideoDimensions(\n  video: ApiVideo,\n  fromOwnMessage: boolean,\n  isForwarded?: boolean,\n) {\n  const { width, height } = getVideoDimensions(video) || DEFAULT_MEDIA_DIMENSIONS;\n\n  return calculateDimensionsForMessageMedia({\n    width,\n    height,\n    fromOwnMessage,\n    isForwarded,\n    isGif: video.isGif,\n  });\n}\n\nexport function getPictogramDimensions(): IDimensions {\n  return {\n    width: 2 * REM,\n    height: 2 * REM,\n  };\n}\n\nexport function getDocumentThumbnailDimensions(smaller?: boolean): IDimensions {\n  if (smaller) {\n    return {\n      width: 3 * REM,\n      height: 3 * REM,\n    };\n  }\n\n  return {\n    width: 3.375 * REM,\n    height: 3.375 * REM,\n  };\n}\n\nexport function getStickerDimensions(sticker: ApiSticker): IDimensions {\n  const { width } = sticker;\n  let { height } = sticker;\n\n  // For some reason this sticker has some weird `height` value\n  if (sticker.id === LIKE_STICKER_ID) {\n    height = width;\n  }\n\n  const aspectRatio = (height && width) && height / width;\n  const baseWidth = (IS_MOBILE_SCREEN ? STICKER_SIZE_INLINE_MOBILE_FACTOR : STICKER_SIZE_INLINE_DESKTOP_FACTOR) * REM;\n  const calculatedHeight = aspectRatio ? baseWidth * aspectRatio : baseWidth;\n\n  if (aspectRatio && calculatedHeight > baseWidth) {\n    return {\n      width: Math.round(baseWidth / aspectRatio),\n      height: baseWidth,\n    };\n  }\n\n  return {\n    width: baseWidth,\n    height: calculatedHeight,\n  };\n}\n\nexport function calculateMediaViewerDimensions(\n  { width, height }: IDimensions, withFooter: boolean, isVideo: boolean = false,\n): IDimensions {\n  const { width: availableWidth, height: availableHeight } = getMediaViewerAvailableDimensions(withFooter, isVideo);\n\n  return calculateDimensions(availableWidth, availableHeight, width, height);\n}\n\nexport function calculateDimensions(\n  availableWidth: number,\n  availableHeight: number,\n  mediaWidth: number,\n  mediaHeight: number,\n): IDimensions {\n  const aspectRatio = mediaHeight / mediaWidth;\n  const calculatedWidth = Math.min(mediaWidth, availableWidth);\n  const calculatedHeight = Math.round(calculatedWidth * aspectRatio);\n\n  if (calculatedHeight > availableHeight) {\n    return {\n      width: Math.round(availableHeight / aspectRatio),\n      height: availableHeight,\n    };\n  }\n\n  return {\n    width: calculatedWidth,\n    height: Math.round(calculatedWidth * aspectRatio),\n  };\n}\n","import React, {\n  FC, useEffect, useRef, memo, useCallback, useState,\n} from '../../lib/teact/teact';\n\nimport { IS_IOS } from '../../util/environment';\nimport { fastRaf } from '../../util/schedulers';\nimport buildClassName from '../../util/buildClassName';\nimport useHeavyAnimationCheck from '../../hooks/useHeavyAnimationCheck';\nimport useBackgroundMode from '../../hooks/useBackgroundMode';\n\ntype OwnProps = {\n  className?: string;\n  id: string;\n  animationData: AnyLiteral;\n  play?: boolean | string;\n  playSegment?: [number, number];\n  speed?: number;\n  noLoop?: boolean;\n  size: number;\n  quality?: number;\n  isLowPriority?: boolean;\n  onLoad?: NoneToVoidFunction;\n};\n\ntype RLottieClass = typeof import('../../lib/rlottie/RLottie').default;\ntype RLottieInstance = import('../../lib/rlottie/RLottie').default;\nlet lottiePromise: Promise<RLottieClass>;\nlet RLottie: RLottieClass;\n\n// Time supposed for judges to measure \"Transferred Size\" in Dev Tools\nconst LOTTIE_LOAD_DELAY = 5000;\n\nasync function ensureLottie() {\n  if (!lottiePromise) {\n    lottiePromise = import('../../lib/rlottie/RLottie') as unknown as Promise<RLottieClass>;\n    RLottie = (await lottiePromise as any).default;\n  }\n\n  return lottiePromise;\n}\n\nsetTimeout(ensureLottie, LOTTIE_LOAD_DELAY);\n\nconst AnimatedSticker: FC<OwnProps> = ({\n  className,\n  id,\n  animationData,\n  play,\n  playSegment,\n  speed,\n  noLoop,\n  size,\n  quality,\n  isLowPriority,\n  onLoad,\n}) => {\n  const [animation, setAnimation] = useState<RLottieInstance>();\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n  const wasPlaying = useRef(false);\n  const isFrozen = useRef(false);\n\n  const playRef = useRef();\n  playRef.current = play;\n  const playSegmentRef = useRef<[number, number]>();\n  playSegmentRef.current = playSegment;\n\n  useEffect(() => {\n    if (animation || !animationData) {\n      return;\n    }\n\n    const exec = () => {\n      if (!container.current) {\n        return;\n      }\n\n      const newAnimation = new RLottie(\n        id,\n        container.current,\n        animationData,\n        {\n          noLoop,\n          size,\n          quality,\n          isLowPriority,\n        },\n        onLoad,\n      );\n\n      if (speed) {\n        newAnimation.setSpeed(speed);\n      }\n\n      setAnimation(newAnimation);\n    };\n\n    if (RLottie) {\n      exec();\n    } else {\n      ensureLottie().then(() => {\n        fastRaf(() => {\n          if (container.current) {\n            exec();\n          }\n        });\n      });\n    }\n  }, [animation, animationData, id, isLowPriority, noLoop, onLoad, quality, size, speed]);\n\n  useEffect(() => {\n    return () => {\n      if (animation) {\n        animation.destroy();\n      }\n    };\n  }, [animation]);\n\n  const playAnimation = useCallback((shouldRestart = false) => {\n    if (animation && (playRef.current || playSegmentRef.current)) {\n      if (playSegmentRef.current) {\n        animation.playSegment(playSegmentRef.current);\n      } else if (shouldRestart) {\n        animation.goToAndPlay(0);\n      } else {\n        animation.play();\n      }\n    }\n  }, [animation]);\n\n  const pauseAnimation = useCallback(() => {\n    if (!animation) {\n      return;\n    }\n\n    animation.pause();\n  }, [animation]);\n\n  const freezeAnimation = useCallback(() => {\n    isFrozen.current = true;\n\n    if (!animation) {\n      return;\n    }\n\n    if (!wasPlaying.current) {\n      wasPlaying.current = animation.isPlaying();\n    }\n\n    pauseAnimation();\n  }, [animation, pauseAnimation]);\n\n  const unfreezeAnimation = useCallback(() => {\n    if (wasPlaying.current) {\n      playAnimation();\n    }\n\n    wasPlaying.current = false;\n    isFrozen.current = false;\n  }, [playAnimation]);\n\n  const unfreezeAnimationOnRaf = useCallback(() => {\n    fastRaf(unfreezeAnimation);\n  }, [unfreezeAnimation]);\n\n  useEffect(() => {\n    if (!animation) {\n      return;\n    }\n\n    if (play || playSegment) {\n      if (isFrozen.current) {\n        wasPlaying.current = true;\n      } else {\n        playAnimation(noLoop);\n      }\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (isFrozen.current) {\n        wasPlaying.current = false;\n      } else {\n        pauseAnimation();\n      }\n    }\n  }, [animation, play, playSegment, noLoop, playAnimation, pauseAnimation]);\n\n  useHeavyAnimationCheck(freezeAnimation, unfreezeAnimation);\n  // Pausing frame may not happen in background\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n\n  const fullClassName = buildClassName(\n    'AnimatedSticker',\n    className,\n    // Workaround for an iOS bug when animated stickers sometimes disappear\n    IS_IOS && play && 'is-playing',\n  );\n\n  const style = size ? `width: ${size}px; height: ${size}px;` : undefined;\n\n  return (\n    <div\n      ref={container}\n      className={fullClassName}\n      // @ts-ignore\n      style={style}\n    />\n  );\n};\n\nexport default memo(AnimatedSticker);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport useLang from '../../hooks/useLang';\nimport { TextPart } from '../common/helpers/renderMessageText';\n\nimport Modal from './Modal';\nimport Button from './Button';\n\ntype OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n  header?: FC;\n  textParts?: TextPart[];\n  text?: string;\n  confirmLabel?: string;\n  confirmHandler: () => void;\n  confirmIsDestructive?: boolean;\n  isButtonsInOneRow?: boolean;\n};\n\nconst ConfirmDialog: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onCloseAnimationEnd,\n  header,\n  text,\n  textParts,\n  confirmLabel = 'Confirm',\n  confirmHandler,\n  confirmIsDestructive,\n  isButtonsInOneRow,\n}) => {\n  const lang = useLang();\n\n  return (\n    <Modal\n      className=\"confirm\"\n      header={header}\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={confirmHandler}\n    >\n      {text && text.split('\\\\n').map((textPart) => (\n        <p>{textPart}</p>\n      ))}\n      {textParts}\n      <div className={isButtonsInOneRow ? 'dialog-buttons mt-2' : ''}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color={confirmIsDestructive ? 'danger' : 'primary'}\n        >\n          {confirmLabel}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ConfirmDialog);\n","import React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useShowTransition from '../../hooks/useShowTransition';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT }) => {\n  const { transitionClassNames } = useShowTransition(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames)}>\n      {text}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useOnChange from '../../../hooks/useOnChange';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useOnChange(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","import React, { FC, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Link.scss';\n\ntype OwnProps = {\n  children: any;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst Link: FC<OwnProps> = ({ children, className, onClick }) => {\n  const handleClick = useCallback((e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    onClick!(e);\n  }, [onClick]);\n\n  return (\n    <a\n      href=\"#\"\n      className={buildClassName('Link', className)}\n      onClick={onClick ? handleClick : undefined}\n    >\n      {children}\n    </a>\n  );\n};\n\nexport default Link;\n","import { MouseEvent as ReactMouseEvent } from 'react';\nimport React, {\n  FC, useEffect, useCallback, memo,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiTypingStatus } from '../../api/types';\nimport { GlobalActions, GlobalState } from '../../global/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getChatTypeString,\n  getChatTitle,\n  isChatSuperGroup,\n} from '../../modules/helpers';\nimport { selectChat, selectChatMessages, selectChatOnlineCount } from '../../modules/selectors';\nimport renderText from './helpers/renderText';\nimport { pick } from '../../util/iteratees';\nimport useLang, { LangFn } from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport VerifiedIcon from './VerifiedIcon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  chatId: number;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'small' | 'medium' | 'large' | 'jumbo';\n  withMediaViewer?: boolean;\n  withHandle?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  onlineCount?: number;\n  areMessagesLoaded: boolean;\n} & Pick<GlobalState, 'lastSyncTime'>;\n\ntype DispatchProps = Pick<GlobalActions, 'loadFullChat' | 'loadSuperGroupOnlines' | 'openMediaViewer'>;\n\nconst GroupChatInfo: FC<OwnProps & StateProps & DispatchProps> = ({\n  typingStatus,\n  avatarSize = 'medium',\n  withMediaViewer,\n  withHandle,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  lastSyncTime,\n  loadFullChat,\n  loadSuperGroupOnlines,\n  openMediaViewer,\n}) => {\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin && withFullInfo && lastSyncTime) {\n      loadFullChat({ chatId });\n\n      if (isSuperGroup) {\n        loadSuperGroupOnlines({ chatId });\n      }\n    }\n  }, [chatId, isMin, lastSyncTime, withFullInfo, loadFullChat, isSuperGroup, loadSuperGroupOnlines]);\n\n  const handleAvatarViewerOpen = useCallback((e: ReactMouseEvent<HTMLDivElement, MouseEvent>, hasPhoto: boolean) => {\n    if (chat && hasPhoto) {\n      e.stopPropagation();\n      openMediaViewer({\n        avatarOwnerId: chat.id,\n        origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n      });\n    }\n  }, [chat, avatarSize, openMediaViewer]);\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <span className=\"status\">{lang('Updating')}</span>\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (withChatType) {\n      return (\n        <div className=\"status\">{lang(getChatTypeString(chat))}</div>\n      );\n    }\n\n    const handle = withHandle ? chat.username : undefined;\n    const groupStatus = getGroupStatus(chat, lang);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <div className=\"status\">\n        {handle && <span className=\"handle\">{handle}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ChatInfo\">\n      <Avatar\n        key={chat.id}\n        size={avatarSize}\n        chat={chat}\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>{renderText(getChatTitle(chat))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n        </div>\n        {renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nfunction getGroupStatus(chat: ApiChat, lang: LangFn) {\n  const chatTypeString = lang(getChatTypeString(chat));\n  const { membersCount } = chat;\n\n  if (chat.isRestricted) {\n    return chatTypeString === 'Channel' ? 'channel is inaccessible' : 'group is inaccessible';\n  }\n\n  if (!membersCount) {\n    return chatTypeString;\n  }\n\n  return chatTypeString === 'Channel'\n    ? lang('Subscribers', membersCount, 'i')\n    : lang('Members', membersCount, 'i');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { lastSyncTime } = global;\n    const chat = selectChat(global, chatId);\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n\n    return {\n      lastSyncTime, chat, onlineCount, areMessagesLoaded,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadFullChat', 'loadSuperGroupOnlines', 'openMediaViewer']),\n)(GroupChatInfo));\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/environment';\nimport { ApiMediaFormat } from '../api/types';\nimport { throttle } from '../util/schedulers';\nimport * as mediaLoader from '../util/mediaLoader';\nimport useForceUpdate from './useForceUpdate';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default <T extends ApiMediaFormat = ApiMediaFormat.BlobUrl>(\n  mediaHash: string | undefined,\n  noLoad = false,\n  // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n  mediaFormat: T = ApiMediaFormat.BlobUrl,\n  cacheBuster?: number,\n  delay?: number | false,\n) => {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory<T>(mediaHash) : undefined;\n  const isStreaming = mediaFormat === ApiMediaFormat.Stream || (\n    IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive\n  );\n  const forceUpdate = useForceUpdate();\n  const [downloadProgress, setDownloadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (!delay || (Date.now() - startedAtRef.current! > delay)) {\n        setDownloadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setDownloadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, handleProgress).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setDownloadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [noLoad, mediaHash, mediaData, mediaFormat, cacheBuster, forceUpdate, isStreaming, delay, handleProgress]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setDownloadProgress(0);\n    }\n  }, [handleProgress, noLoad]);\n\n  return { mediaData, downloadProgress };\n};\n","import React, {\n  FC, useEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './ProgressSpinner.scss';\n\nconst RADIUSES = {\n  s: 22, m: 25, l: 28, xl: 20,\n};\nconst STROKE_WIDTH = 2;\nconst MIN_PROGRESS = 0.05;\nconst MAX_PROGRESS = 1;\n\nconst ProgressSpinner: FC<{\n  progress?: number;\n  size?: 's' | 'm' | 'l' | 'xl';\n  square?: boolean;\n  transparent?: boolean;\n  noCross?: boolean;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n}> = ({\n  progress = 0,\n  size = 'l',\n  square,\n  transparent,\n  noCross,\n  onClick,\n}) => {\n  const radius = RADIUSES[size];\n  const circleRadius = radius - STROKE_WIDTH * 2;\n  const borderRadius = radius - 1;\n  const circumference = circleRadius * 2 * Math.PI;\n  // eslint-disable-next-line no-null/no-null\n  const container = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!container.current) {\n      return;\n    }\n\n    const svg = container.current.firstElementChild;\n    const strokeDashOffset = circumference - Math.min(Math.max(MIN_PROGRESS, progress), MAX_PROGRESS) * circumference;\n\n    if (!svg) {\n      container.current.innerHTML = `<svg\n        viewBox=\"0 0 ${borderRadius * 2} ${borderRadius * 2}\"\n        height=\"${borderRadius * 2}\"\n        width=\"${borderRadius * 2}\"\n      >\n        <circle\n          stroke=\"white\"\n          fill=\"transparent\"\n          stroke-width=${STROKE_WIDTH}\n          stroke-dasharray=\"${circumference} ${circumference}\"}\n          stroke-dashoffset=\"${strokeDashOffset}\"\n          stroke-linecap=\"round\"\n          r=${circleRadius}\n          cx=${borderRadius}\n          cy=${borderRadius}\n        />\n      </svg>`;\n    } else {\n      (svg.firstElementChild as SVGElement).setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n    }\n  }, [container, circumference, borderRadius, circleRadius, progress]);\n\n  const className = buildClassName(\n    `ProgressSpinner size-${size}`,\n    transparent && 'transparent',\n    square && 'square',\n    noCross && 'no-cross',\n  );\n\n  return (\n    <div\n      ref={container}\n      className={className}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(ProgressSpinner);\n","import { FC, useRef, useLayoutEffect } from '../../lib/teact/teact';\nimport TeactDOM from '../../lib/teact/teact-dom';\n\ntype OwnProps = {\n  containerId?: string;\n  className?: string;\n  children: any;\n};\n\nconst Portal: FC<OwnProps> = ({ containerId, className, children }) => {\n  const elementRef = useRef(document.createElement('div'));\n\n  useLayoutEffect(() => {\n    const container = document.querySelector<HTMLDivElement>(containerId || '#portals');\n    if (!container) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (className) {\n      element.classList.add(className);\n    }\n\n    container.appendChild(element);\n\n    return () => {\n      TeactDOM.render(undefined, element);\n      container.removeChild(element);\n    };\n  }, [className, containerId]);\n\n  return TeactDOM.render(children, elementRef.current);\n};\n\nexport default Portal;\n","import { FocusDirection } from '../types';\n\nimport { dispatchHeavyAnimationEvent } from '../hooks/useHeavyAnimationCheck';\nimport { fastRaf } from './schedulers';\nimport { animateSingle } from './animation';\n\nconst MAX_DISTANCE = 1500;\nconst MIN_JS_DURATION = 250;\nconst MAX_JS_DURATION = 600;\n\nexport default function fastSmoothScroll(\n  container: HTMLElement,\n  element: HTMLElement,\n  position: ScrollLogicalPosition,\n  margin = 0,\n  maxDistance = MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n  forceDuration?: number,\n) {\n  if (forceDirection === FocusDirection.Static) {\n    element.scrollIntoView({ block: position });\n\n    return;\n  }\n\n  const { offsetTop } = element;\n\n  if (forceDirection === undefined) {\n    const offset = offsetTop - container.scrollTop;\n\n    if (offset < -maxDistance) {\n      container.scrollTop += (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      container.scrollTop += (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    container.scrollTop = offsetTop + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    container.scrollTop = Math.max(0, offsetTop - maxDistance);\n  }\n\n  fastRaf(() => {\n    dispatchHeavyAnimationEvent(MAX_JS_DURATION);\n    scrollWithJs(container, element, position, margin, forceDuration);\n  });\n}\n\nfunction scrollWithJs(\n  container: HTMLElement, element: HTMLElement, position: ScrollLogicalPosition, margin = 0, forceDuration?: number,\n) {\n  const { offsetTop: elementTop, offsetHeight: elementHeight } = element;\n  const { scrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  let path!: number;\n\n  switch (position) {\n    case 'start':\n      path = (elementTop - margin) - scrollTop;\n      break;\n    case 'end':\n      path = (elementTop + elementHeight + margin) - (scrollTop + containerHeight);\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n      path = elementHeight < containerHeight\n        ? (elementTop + elementHeight / 2) - (scrollTop + containerHeight / 2)\n        : (elementTop - margin) - scrollTop;\n      break;\n  }\n\n  if (path < 0) {\n    const remainingPath = -scrollTop;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollTop + containerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const target = container.scrollTop + path;\n  const duration = forceDuration || (\n    MIN_JS_DURATION + (Math.abs(path) / MAX_DISTANCE) * (MAX_JS_DURATION - MIN_JS_DURATION)\n  );\n  const startAt = Date.now();\n\n  animateSingle(() => {\n    const t = Math.min((Date.now() - startAt) / duration, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollTop = Math.round(target - currentPath);\n\n    return t < 1;\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { ChangeEvent } from 'react';\nimport React, { FC, memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport Spinner from './Spinner';\n\nimport './Radio.scss';\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  label: string;\n  subLabel?: string;\n  value: string;\n  checked: boolean;\n  disabled?: boolean;\n  hidden?: boolean;\n  isLoading?: boolean;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst Radio: FC<OwnProps> = ({\n  id,\n  label,\n  subLabel,\n  value,\n  name,\n  checked,\n  disabled,\n  hidden,\n  isLoading,\n  onChange,\n}) => {\n  const className = buildClassName(\n    'Radio',\n    disabled && 'disabled',\n    hidden && 'hidden-widget',\n    isLoading && 'loading',\n  );\n\n  return (\n    <label className={className}>\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        id={id}\n        checked={checked}\n        onChange={onChange}\n        disabled={disabled || hidden}\n      />\n      <div className=\"Radio-main\">\n        <span className=\"label\">{label}</span>\n        {subLabel && <span className=\"subLabel\">{subLabel}</span>}\n      </div>\n      {isLoading && <Spinner />}\n    </label>\n  );\n};\n\nexport default memo(Radio);\n","import { ChangeEvent } from 'react';\nimport React, { FC, useCallback, memo } from '../../lib/teact/teact';\nimport Radio from './Radio';\n\ntype IRadioOption = {\n  label: string;\n  subLabel?: string;\n  value: string;\n  hidden?: boolean;\n};\n\ntype OwnProps = {\n  id?: string;\n  name: string;\n  options: IRadioOption[];\n  selected?: string;\n  disabled?: boolean;\n  loadingOption?: string;\n  onChange: (value: string) => void;\n};\n\nconst RadioGroup: FC<OwnProps> = ({\n  id,\n  name,\n  options,\n  selected,\n  disabled,\n  loadingOption,\n  onChange,\n}) => {\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    onChange(value);\n  }, [onChange]);\n\n  return (\n    <div id={id} className=\"radio-group\">\n      {options.map((option) => (\n        <Radio\n          name={name}\n          label={option.label}\n          subLabel={option.subLabel}\n          value={option.value}\n          checked={option.value === selected}\n          hidden={option.hidden}\n          disabled={disabled}\n          isLoading={loadingOption ? loadingOption === option.value : undefined}\n          onChange={handleChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(RadioGroup);\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\nimport { LoadMoreDirection } from '../types';\n\nimport { areSortedArraysEqual } from '../util/iteratees';\nimport useForceUpdate from './useForceUpdate';\nimport usePrevious from './usePrevious';\n\ntype GetMore = (args: { direction: LoadMoreDirection }) => void;\ntype LoadMoreBackwards = (args: { offsetId?: number }) => void;\n\nconst DEFAULT_LIST_SLICE = 30;\n\nexport default (\n  loadMoreBackwards?: LoadMoreBackwards,\n  listIds?: number[],\n  isDisabled = false,\n  listSlice = DEFAULT_LIST_SLICE,\n  forceFullPreload = false,\n): [number[]?, GetMore?] => {\n  const lastParamsRef = useRef<{\n    direction?: LoadMoreDirection;\n    offsetId?: number;\n  }>();\n\n  const viewportIdsRef = useRef<number[] | undefined>((() => {\n    // Only run once to initialize\n    if (!listIds || lastParamsRef.current) {\n      return undefined;\n    }\n\n    const { newViewportIds } = getViewportSlice(listIds, listIds[0], LoadMoreDirection.Forwards, listSlice);\n    return newViewportIds;\n  })());\n\n  const forceUpdate = useForceUpdate();\n\n  const prevListIds = usePrevious(listIds);\n  const prevIsDisabled = usePrevious(isDisabled);\n  if (listIds && !isDisabled && (listIds !== prevListIds || isDisabled !== prevIsDisabled)) {\n    const { offsetId = listIds[0], direction = LoadMoreDirection.Forwards } = lastParamsRef.current || {};\n    const { newViewportIds } = getViewportSlice(listIds, offsetId, direction, listSlice);\n\n    if (!viewportIdsRef.current || !areSortedArraysEqual(viewportIdsRef.current, newViewportIds)) {\n      viewportIdsRef.current = newViewportIds;\n    }\n  }\n\n  useEffect(() => {\n    if (listIds && !isDisabled && loadMoreBackwards && forceFullPreload) {\n      const viewportIds = viewportIdsRef.current!;\n      loadMoreBackwards({ offsetId: viewportIds[viewportIds.length - 1] });\n    }\n  }, [listIds, isDisabled, loadMoreBackwards, forceFullPreload]);\n\n  const getMore: GetMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    const viewportIds = viewportIdsRef.current;\n\n    const offsetId = viewportIds\n      ? direction === LoadMoreDirection.Backwards ? viewportIds[viewportIds.length - 1] : viewportIds[0]\n      : undefined;\n\n    if (!listIds) {\n      if (loadMoreBackwards) {\n        loadMoreBackwards({ offsetId });\n      }\n\n      return;\n    }\n\n    lastParamsRef.current = { ...lastParamsRef.current, direction, offsetId };\n\n    const {\n      newViewportIds, areSomeLocal, areAllLocal,\n    } = getViewportSlice(listIds, offsetId, direction, listSlice);\n\n    if (areSomeLocal && !(viewportIds && areSortedArraysEqual(viewportIds, newViewportIds))) {\n      viewportIdsRef.current = newViewportIds;\n      forceUpdate();\n    }\n\n    if (!areAllLocal && loadMoreBackwards) {\n      loadMoreBackwards({ offsetId });\n    }\n  }, [listIds, listSlice, loadMoreBackwards, forceUpdate]);\n\n  return isDisabled ? [listIds] : [viewportIdsRef.current, getMore];\n};\n\nfunction getViewportSlice(\n  sourceIds: number[],\n  offsetId = 0,\n  direction: LoadMoreDirection,\n  listSlice: number,\n) {\n  const { length } = sourceIds;\n  const index = sourceIds.indexOf(offsetId);\n  const isForwards = direction === LoadMoreDirection.Forwards;\n  const indexForDirection = isForwards ? index : (index + 1) || length;\n  const from = Math.max(0, indexForDirection - listSlice);\n  const to = indexForDirection + listSlice - 1;\n  const newViewportIds = sourceIds.slice(Math.max(0, from), to + 1);\n\n  let areSomeLocal;\n  let areAllLocal;\n  switch (direction) {\n    case LoadMoreDirection.Forwards:\n      areSomeLocal = indexForDirection > 0;\n      areAllLocal = from >= 0;\n      break;\n    case LoadMoreDirection.Backwards:\n      areSomeLocal = indexForDirection < length;\n      areAllLocal = to <= length - 1;\n      break;\n  }\n\n  return { newViewportIds, areSomeLocal, areAllLocal };\n}\n","import React, {\n  FC, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { ApiMediaFormat, ApiSticker } from '../../api/types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../config';\nimport { getStickerDimensions } from './helpers/mediaDimensions';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './AnimatedEmoji.scss';\n\ntype OwnProps = {\n  sticker: ApiSticker;\n  observeIntersection?: ObserveFn;\n  isInline?: boolean;\n  lastSyncTime?: number;\n};\n\nconst QUALITY = 1;\nconst RESIZE_FACTOR = 0.5;\n\nconst AnimatedEmoji: FC<OwnProps> = ({\n  sticker, isInline = false, observeIntersection, lastSyncTime,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n  const localMediaHash = `sticker${sticker.id}`;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`, !isIntersecting, ApiMediaFormat.BlobUrl, lastSyncTime);\n  const { transitionClassNames } = useTransitionForMedia(previewBlobUrl, 'slow');\n\n  const mediaData = useMedia(localMediaHash, !isIntersecting, ApiMediaFormat.Lottie, lastSyncTime);\n  const isMediaLoaded = Boolean(mediaData);\n\n  const [playKey, setPlayKey] = useState(String(Math.random()));\n  const handleClick = useCallback(() => {\n    setPlayKey(String(Math.random()));\n  }, []);\n\n  let width: number;\n  if (isInline) {\n    width = getStickerDimensions(sticker).width * RESIZE_FACTOR;\n  } else {\n    width = STICKER_SIZE_TWO_FA;\n  }\n\n  const style = `width: ${width}px; height: ${width}px;`;\n\n  return (\n    <div\n      ref={ref}\n      className=\"AnimatedEmoji media-inner\"\n      // @ts-ignore\n      style={style}\n      onClick={handleClick}\n    >\n      {previewBlobUrl && !isAnimationLoaded && (\n        <img src={previewBlobUrl} className={transitionClassNames} alt=\"\" />\n      )}\n      {isMediaLoaded && (\n        <AnimatedSticker\n          key={localMediaHash}\n          id={localMediaHash}\n          animationData={mediaData as AnyLiteral}\n          size={width}\n          quality={QUALITY}\n          play={isIntersecting && playKey}\n          noLoop\n          onLoad={markAnimationLoaded}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AnimatedEmoji;\n","import React, { useCallback, useMemo, useState } from '../lib/teact/teact';\nimport { debounce } from '../util/schedulers';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\n\ntype BufferingEvent = (e: Event | React.SyntheticEvent<HTMLMediaElement>) => void;\n\nconst MIN_READY_STATE = 3;\n// Avoid flickering when re-mounting previously buffered video\nconst DEBOUNCE = 200;\n\nexport default (noInitiallyBuffered = false) => {\n  const [isBuffered, setIsBuffered] = useState(!noInitiallyBuffered);\n  const [bufferedProgress, setBufferedProgress] = useState(0);\n\n  const setIsBufferedDebounced = useMemo(() => {\n    return debounce(setIsBuffered, DEBOUNCE, false, true);\n  }, []);\n\n  const handleBuffering = useCallback<BufferingEvent>((e) => {\n    const media = e.currentTarget as HTMLMediaElement;\n\n    if (!isSafariPatchInProgress(media)) {\n      if (media.buffered.length) {\n        setBufferedProgress(media.buffered.end(0) / media.duration);\n      }\n\n      setIsBufferedDebounced(media.readyState >= MIN_READY_STATE || media.currentTime > 0);\n    }\n  }, [setIsBufferedDebounced]);\n\n  const bufferingHandlers = {\n    onLoadedData: handleBuffering,\n    onPlaying: handleBuffering,\n    onLoadStart: handleBuffering, // Needed for Safari to start\n    onPause: handleBuffering, // Needed for Chrome when seeking\n    onTimeUpdate: handleBuffering, // Needed for audio buffering progress\n    onProgress: handleBuffering, // Needed for video buffering progress\n  };\n\n  return {\n    isBuffered,\n    bufferedProgress,\n    bufferingHandlers,\n    checkBuffering(element: HTMLMediaElement) {\n      setIsBufferedDebounced(element.readyState >= MIN_READY_STATE);\n    },\n  };\n};\n","export default function focusEditableElement(element: HTMLElement, force?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n\n  if (!element.lastChild || !element.lastChild.nodeValue) {\n    element.focus();\n    return;\n  }\n\n  range.setStart(element.lastChild, element.lastChild.nodeValue.length);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { ApiMessageEntity, ApiMessageEntityTypes, ApiFormattedText } from '../../../../api/types';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/environment';\n\nconst ENTITY_CLASS_BY_NODE_NAME: Record<string, string> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\nconst MAX_MESSAGE_LENGTH = 4096;\n\nexport default function parseMessageInput(html: string): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = parseMarkdown(html);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '').slice(0, MAX_MESSAGE_LENGTH);\n  let textIndex = 0;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nfunction parseMarkdown(html: string) {\n  let parsedHtml = html.slice(0);\n\n  if (!IS_EMOJI_SUPPORTED) {\n    // Emojis\n    parsedHtml = parsedHtml.replace(/<img[^>]+alt=\"([^\"]+)\"[^>]*>/gm, '$1');\n  }\n  // Strip redundant <span> tags\n  parsedHtml = parsedHtml.replace(/<\\/?span([^>]*)?>/g, '');\n\n  // Strip redundant nbsp's\n  parsedHtml = parsedHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <br> with newline\n  parsedHtml = parsedHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  parsedHtml = parsedHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<div>/g, '\\n');\n  parsedHtml = parsedHtml.replace(/<\\/div>/g, '');\n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*[\\n\\r][^]*?^)`{3}/gm, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(/[`]{1}([^`\\n]+)[`]{1}/g, '<code>$1</code>');\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(/[*]{2}([^*\\n]+)[*]{2}/g, '<b>$1</b>');\n  parsedHtml = parsedHtml.replace(/[*]{1}([^*\\n]+)[*]{1}/g, '<i>$1</i>');\n  parsedHtml = parsedHtml.replace(/[~]{2}([^~\\n]+)[~]{2}/g, '<s>$1</s>');\n\n  return parsedHtml;\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  let url: string | undefined;\n  let userId: number | undefined;\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    url = (node as HTMLAnchorElement).href;\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    userId = Number((node as HTMLAnchorElement).dataset.userId);\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n      ...(url && { url }),\n      ...(userId && { userId }),\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode) {\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType;\n  }\n\n  return undefined;\n}\n","import React, { FC, memo } from '../../../lib/teact/teact';\n\nimport useFlag from '../../../hooks/useFlag';\nimport buildClassName from '../../../util/buildClassName';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, onFileSelect }) => {\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragEnter = () => { markHovered(); };\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      onDrop={onFileSelect}\n      onDragEnter={handleDragEnter}\n      onDragLeave={handleDragLeave}\n    >\n      <div className=\"target-content\">\n        <div className={`icon icon-${isQuick ? 'photo' : 'document'}`} />\n        <div className=\"title\">Drop files here to send them</div>\n        <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import React, {\n  FC, memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport buildClassName from '../../../util/buildClassName';\n\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], isQuick: boolean) => void;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePrevious(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), false);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleQuickFilesDrop = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  }, [onFileSelect, onHide]);\n\n  const handleDragLeave = useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  }, [onHide]);\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} onDragLeave={handleDragLeave} onDragOver={handleDragOver} onDrop={onHide}>\n      <DropTarget onFileSelect={handleFilesDrop} />\n      {(withQuick || prevWithQuick) && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n    </div>\n  );\n};\n\nexport default memo(DropArea);\n","import { useEffect } from '../lib/teact/teact';\n\nexport default (\n  onBlur: AnyToVoidFunction,\n  onFocus: AnyToVoidFunction,\n) => {\n  useEffect(() => {\n    if (!document.hasFocus()) {\n      onBlur();\n    }\n\n    window.addEventListener('blur', onBlur);\n    window.addEventListener('focus', onFocus);\n\n    return () => {\n      window.removeEventListener('focus', onFocus);\n      window.removeEventListener('blur', onBlur);\n    };\n  }, [onBlur, onFocus]);\n};\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat, ApiUser } from '../../api/types';\n\nimport { selectChat, selectUser } from '../../modules/selectors';\nimport { getChatTitle, getUserFirstOrLastName, isChatPrivate } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\nimport buildClassName from '../../util/buildClassName';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\n\nimport './PickerSelectedItem.scss';\n\ntype OwnProps = {\n  chatOrUserId?: number;\n  icon?: string;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  onClick: (arg: any) => void;\n  clickArg: any;\n  className?: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n};\n\nconst PickerSelectedItem: FC<OwnProps & StateProps> = ({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  onClick,\n  clickArg,\n  chat,\n  user,\n  className,\n}) => {\n  useLang();\n\n  let iconElement: any;\n  let titleText: any;\n\n  if (icon && title) {\n    iconElement = (\n      <div className=\"item-icon\">\n        <i className={`icon-${icon}`} />\n      </div>\n    );\n\n    titleText = title;\n  } else if (chat || user) {\n    iconElement = (\n      <Avatar\n        chat={chat}\n        user={user}\n        size=\"small\"\n        isSavedMessages={user && user.isSelf}\n      />\n    );\n\n    const name = !chat || (user && !user.isSelf)\n      ? getUserFirstOrLastName(user)\n      : getChatTitle(chat, user);\n\n    titleText = name ? renderText(name) : undefined;\n  }\n\n  const fullClassName = buildClassName(\n    'PickerSelectedItem',\n    className,\n    isMinimized && 'minimized',\n    canClose && 'closeable',\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick(clickArg)}\n      title={isMinimized ? titleText : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className=\"item-name\">\n          {titleText}\n        </div>\n      )}\n      {canClose && (\n        <div className=\"item-remove\">\n          <i className=\"icon-close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId }): StateProps => {\n    if (!chatOrUserId) {\n      return {};\n    }\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = isChatPrivate(chatOrUserId) ? selectUser(global, chatOrUserId) : undefined;\n\n    return {\n      chat,\n      user,\n    };\n  },\n)(PickerSelectedItem));\n","export enum SwipeDirection {\n  Up,\n  Down,\n  Left,\n  Right,\n}\n\ninterface CaptureOptions {\n  onCapture?: (e: MouseEvent | TouchEvent) => void;\n  onRelease?: (e: MouseEvent | TouchEvent) => void;\n  onDrag?: (\n    e: MouseEvent | TouchEvent,\n    captureEvent: MouseEvent | TouchEvent,\n    params: {\n      dragOffsetX: number;\n      dragOffsetY: number;\n    },\n  ) => void;\n  onSwipe?: (e: Event, direction: SwipeDirection) => void;\n  onClick?: (e: MouseEvent | TouchEvent) => void;\n  excludedClosestSelector?: string;\n  withCursor?: boolean;\n}\n\n// https://stackoverflow.com/questions/11287877/how-can-i-get-e-offsetx-on-mobile-ipad\n// Android does not have this value, and iOS has it but as read-only\nexport interface RealTouchEvent extends TouchEvent {\n  pageX?: number;\n  pageY?: number;\n}\n\nconst MOVED_THRESHOLD = 15;\nconst SWIPE_THRESHOLD = 50;\n\nexport function captureEvents(element: HTMLElement, options: CaptureOptions) {\n  let captureEvent: MouseEvent | RealTouchEvent | undefined;\n  let hasMoved = false;\n\n  function onCapture(e: MouseEvent | RealTouchEvent) {\n    if (options.excludedClosestSelector && (\n      (e.target as HTMLElement).matches(options.excludedClosestSelector)\n      || (e.target as HTMLElement).closest(options.excludedClosestSelector)\n    )) {\n      return;\n    }\n\n    captureEvent = e;\n\n    if (e.type === 'mousedown') {\n      document.addEventListener('mousemove', onMove);\n      document.addEventListener('mouseup', onRelease);\n    } else if (e.type === 'touchstart') {\n      document.addEventListener('touchmove', onMove);\n      document.addEventListener('touchend', onRelease);\n      document.addEventListener('touchcancel', onRelease);\n\n      if ('touches' in e) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n      }\n    }\n\n    document.body.classList.add('no-selection');\n    if (options.withCursor) {\n      document.body.classList.add('cursor-grabbing');\n    }\n\n    if (options.onCapture) {\n      options.onCapture(e);\n    }\n  }\n\n  function onRelease(e: MouseEvent | TouchEvent) {\n    if (captureEvent) {\n      if (options.withCursor) {\n        document.body.classList.remove('cursor-grabbing');\n      }\n      document.body.classList.remove('no-selection');\n\n      document.removeEventListener('mouseup', onRelease);\n      document.removeEventListener('mousemove', onMove);\n      document.removeEventListener('touchcancel', onRelease);\n      document.removeEventListener('touchend', onRelease);\n      document.removeEventListener('touchmove', onMove);\n\n      captureEvent = undefined;\n\n      if (hasMoved) {\n        if (options.onRelease) {\n          options.onRelease(e);\n        }\n      } else if (options.onClick) {\n        options.onClick(e);\n      }\n    }\n\n    hasMoved = false;\n  }\n\n  function onMove(e: MouseEvent | RealTouchEvent) {\n    if (captureEvent) {\n      if (e.type === 'touchmove' && ('touches' in e)) {\n        if (e.pageX === undefined) {\n          e.pageX = e.touches[0].pageX;\n        }\n\n        if (e.pageY === undefined) {\n          e.pageY = e.touches[0].pageY;\n        }\n      }\n\n      const dragOffsetX = e.pageX! - captureEvent.pageX!;\n      const dragOffsetY = e.pageY! - captureEvent.pageY!;\n\n      if (Math.abs(dragOffsetX) >= MOVED_THRESHOLD || Math.abs(dragOffsetY) >= MOVED_THRESHOLD) {\n        hasMoved = true;\n      }\n\n      if (options.onDrag) {\n        options.onDrag(e, captureEvent, { dragOffsetX, dragOffsetY });\n      }\n\n      if (options.onSwipe) {\n        processSwipe(e, dragOffsetX, dragOffsetY, options.onSwipe);\n      }\n    }\n  }\n\n  element.addEventListener('mousedown', onCapture);\n  element.addEventListener('touchstart', onCapture, { passive: true });\n\n  return () => {\n    element.removeEventListener('mousedown', onCapture);\n    element.removeEventListener('touchstart', onCapture);\n  };\n}\n\nfunction processSwipe(\n  e: Event, dragOffsetX: number, dragOffsetY: number, onSwipe: (e: Event, direction: SwipeDirection) => void,\n) {\n  const xAbs = Math.abs(dragOffsetX);\n  const yAbs = Math.abs(dragOffsetY);\n\n  if (dragOffsetX && dragOffsetY) {\n    const ratio = Math.max(xAbs, yAbs) / Math.min(xAbs, yAbs);\n    // Diagonal swipe\n    if (ratio < 2) {\n      return;\n    }\n  }\n\n  if (xAbs >= SWIPE_THRESHOLD) {\n    if (dragOffsetX < 0) {\n      onSwipe(e, SwipeDirection.Left);\n    } else {\n      onSwipe(e, SwipeDirection.Right);\n    }\n  } else if (yAbs >= SWIPE_THRESHOLD) {\n    if (dragOffsetY < 0) {\n      onSwipe(e, SwipeDirection.Up);\n    } else {\n      onSwipe(e, SwipeDirection.Down);\n    }\n  }\n}\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nexport default (containerRef: RefObject<HTMLElement>, isDisabled?: boolean) => {\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      if (!e.deltaX) {\n        container!.scrollLeft += e.deltaY / 4;\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: true });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled]);\n};\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\n\nimport { ApiMessage } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nexport default (\n  chatId: number,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n) => {\n  const { loadMessage } = getDispatch();\n  const loadMessageThrottled = useMemo(() => {\n    const throttled = throttle(loadMessage, 500, true);\n    return () => {\n      throttled({ chatId, messageId, replyOriginForId });\n    };\n  }, [loadMessage, chatId, messageId, replyOriginForId]);\n\n  useEffect(() => {\n    if (messageId && !message) {\n      loadMessageThrottled();\n    }\n  });\n};\n","import React, { FC } from '../../lib/teact/teact';\n\nimport './VerifiedIcon.scss';\n\nconst VerifiedIcon: FC = () => {\n  return (\n    <span className=\"VerifiedIcon\" />\n  );\n};\n\nexport default VerifiedIcon;\n","import { RefObject } from 'react';\nimport { useState, useEffect, useCallback } from '../lib/teact/teact';\n\nimport { IAnchorPosition } from '../types';\nimport { IS_TOUCH_ENV, IS_MOBILE_SCREEN } from '../util/environment';\n\nconst LONG_TAP_DURATION_MS = 250;\nconst SELECTION_ANIMATION_DURATION_MS = 200;\n\nlet contextMenuCounter = 0;\n\nfunction checkIsDisabledForMobile() {\n  return IS_MOBILE_SCREEN\n  && window.document.body.classList.contains('enable-symbol-menu-transforms');\n}\n\nexport default (\n  elementRef: RefObject<HTMLElement>,\n  isMenuDisabled?: boolean,\n) => {\n  const [isContextMenuOpen, setIsContextMenuOpen] = useState(false);\n  const [contextMenuPosition, setContextMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleBeforeContextMenu = useCallback((e: React.MouseEvent) => {\n    if (!isMenuDisabled && e.button === 2) {\n      document.body.classList.add('no-selection');\n    }\n  }, [isMenuDisabled]);\n\n  const handleContextMenu = useCallback((e: React.MouseEvent) => {\n    if (isMenuDisabled) {\n      return;\n    }\n    e.preventDefault();\n    document.body.classList.remove('no-selection');\n\n    if (contextMenuPosition) {\n      return;\n    }\n    document.body.classList.remove('no-selection');\n    if (contextMenuCounter === 0) {\n      document.body.classList.add('has-context-menu');\n    }\n    contextMenuCounter++;\n\n    setIsContextMenuOpen(true);\n    setContextMenuPosition({ x: e.clientX, y: e.clientY });\n  }, [isMenuDisabled, contextMenuPosition]);\n\n  const handleContextMenuClose = useCallback(() => {\n    setIsContextMenuOpen(false);\n  }, []);\n\n  const handleContextMenuHide = useCallback(() => {\n    setContextMenuPosition(undefined);\n    document.body.classList.remove('no-selection');\n\n    setTimeout(() => {\n      contextMenuCounter--;\n      if (contextMenuCounter === 0) {\n        document.body.classList.remove('has-context-menu');\n      }\n    }, SELECTION_ANIMATION_DURATION_MS);\n  }, []);\n\n  // Support context menu on touch-devices\n  useEffect(() => {\n    if (isMenuDisabled || !IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    const element = elementRef.current;\n    if (!element) {\n      return undefined;\n    }\n\n    let timer: number | undefined;\n\n    const clearLongPressTimer = () => {\n      if (timer) {\n        clearTimeout(timer);\n        timer = undefined;\n      }\n    };\n\n    const emulateContextMenuEvent = (originalEvent: TouchEvent) => {\n      clearLongPressTimer();\n\n      const { clientX, clientY } = originalEvent.touches[0];\n\n      if (contextMenuPosition) {\n        return;\n      }\n\n      // temporarily intercept and clear the next click\n      element.addEventListener('touchend', function cancelClickOnce(e) {\n        element.removeEventListener('touchend', cancelClickOnce, true);\n        e.stopImmediatePropagation();\n        e.preventDefault();\n        e.stopPropagation();\n      }, true);\n\n      document.body.classList.add('no-selection');\n      setIsContextMenuOpen(true);\n      setContextMenuPosition({ x: clientX, y: clientY });\n    };\n\n    const startLongPressTimer = (e: TouchEvent) => {\n      if (isMenuDisabled || checkIsDisabledForMobile()) {\n        return;\n      }\n      clearLongPressTimer();\n\n      timer = window.setTimeout(() => emulateContextMenuEvent(e), LONG_TAP_DURATION_MS);\n    };\n\n    // @perf Consider event delegation\n    element.addEventListener('touchstart', startLongPressTimer, { passive: true });\n    element.addEventListener('touchcancel', clearLongPressTimer, true);\n    element.addEventListener('touchend', clearLongPressTimer, true);\n    element.addEventListener('touchmove', clearLongPressTimer, { passive: true });\n\n    return () => {\n      clearLongPressTimer();\n      element.removeEventListener('touchstart', startLongPressTimer);\n      element.removeEventListener('touchcancel', clearLongPressTimer, true);\n      element.removeEventListener('touchend', clearLongPressTimer, true);\n      element.removeEventListener('touchmove', clearLongPressTimer);\n    };\n  }, [contextMenuPosition, isMenuDisabled, elementRef]);\n\n  return {\n    isContextMenuOpen,\n    contextMenuPosition,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  };\n};\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { DEBUG } from '../config';\n\nexport default (mediaEl: HTMLMediaElement) => {\n  mediaEl.play().catch((err) => {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn(err);\n    }\n  });\n};\n","import { MouseEvent } from 'react';\nimport React from '../../../lib/teact/teact';\nimport { getDispatch } from '../../../lib/teact/teactn';\n\nimport { ApiMessageEntity, ApiMessageEntityTypes, ApiMessage } from '../../../api/types';\n\nimport { getMessageText } from '../../../modules/helpers';\nimport renderText from './renderText';\n\nimport MentionLink from '../../middle/message/MentionLink';\nimport SafeLink from '../SafeLink';\n\nexport type TextPart = string | Element;\n\nexport function renderMessageText(message: ApiMessage, highlight?: string, shouldRenderHqEmoji?: boolean) {\n  const formattedText = message.content.text;\n\n  if (!formattedText || !formattedText.text) {\n    const rawText = getMessageText(message);\n    return rawText ? [rawText] : undefined;\n  }\n  const { text, entities } = formattedText;\n\n  return renderTextWithEntities(text, entities, highlight, shouldRenderHqEmoji);\n}\n\ninterface IOrganizedEntity {\n  entity: ApiMessageEntity;\n  organizedIndexes: Set<number>;\n  nestedEntities: IOrganizedEntity[];\n}\n\nfunction organizeEntity(\n  entity: ApiMessageEntity,\n  index: number,\n  entities: ApiMessageEntity[],\n  organizedEntityIndexes: Set<number>,\n): IOrganizedEntity | undefined {\n  const { offset, length } = entity;\n  const organizedIndexes = new Set([index]);\n\n  if (organizedEntityIndexes.has(index)) {\n    return undefined;\n  }\n\n  // Determine any nested entities inside current entity\n  const nestedEntities = entities\n    .filter((e, i) => i > index && e.offset >= offset && e.offset < offset + length)\n    .map((e) => organizeEntity(e, entities.indexOf(e), entities, organizedEntityIndexes))\n    .filter<IOrganizedEntity>(Boolean as any);\n\n  nestedEntities.forEach((e) => e.organizedIndexes.forEach((i) => organizedIndexes.add(i)));\n\n  return {\n    entity,\n    organizedIndexes,\n    nestedEntities,\n  };\n}\n\n// Organize entities in a tree-like structure to better represent how the text will be displayed\nfunction organizeEntities(entities: ApiMessageEntity[]) {\n  const organizedEntityIndexes: Set<number> = new Set();\n  const organizedEntities: IOrganizedEntity[] = [];\n\n  entities.forEach((entity, index) => {\n    if (organizedEntityIndexes.has(index)) {\n      return;\n    }\n\n    const organizedEntity = organizeEntity(entity, index, entities, organizedEntityIndexes);\n    if (organizedEntity) {\n      organizedEntity.organizedIndexes.forEach((organizedIndex) => {\n        organizedEntityIndexes.add(organizedIndex);\n      });\n\n      organizedEntities.push(organizedEntity);\n    }\n  });\n\n  return organizedEntities;\n}\n\nexport function renderTextWithEntities(\n  text: string,\n  entities?: ApiMessageEntity[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (!entities || !entities.length) {\n    return renderMessagePart(text, highlight, shouldRenderHqEmoji, shouldRenderAsHtml);\n  }\n\n  const result: TextPart[] = [];\n  let deleteLineBreakAfterPre = false;\n\n  const organizedEntites = organizeEntities(entities);\n\n  // Recursive function to render regular and nested entities\n  function renderEntity(\n    textPartStart: number,\n    textPartEnd: number,\n    organizedEntity: IOrganizedEntity,\n    isLastEntity: boolean,\n  ) {\n    const renderResult: TextPart[] = [];\n    const { entity, nestedEntities } = organizedEntity;\n    const { offset, length, type } = entity;\n\n    // Render text before the entity\n    let textBefore = text.substring(textPartStart, offset);\n    const textBeforeLength = textBefore.length;\n    if (textBefore) {\n      if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n        textBefore = textBefore.substr(1);\n        deleteLineBreakAfterPre = false;\n      }\n      if (textBefore) {\n        renderResult.push(...renderMessagePart(\n          textBefore, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    const entityStartIndex = textPartStart + textBeforeLength;\n    const entityEndIndex = entityStartIndex + length;\n\n    let entityContent: TextPart = text.substring(offset, offset + length);\n    const nestedEntityContent: TextPart[] = [];\n\n    if (deleteLineBreakAfterPre && entityContent.length > 0 && entityContent[0] === '\\n') {\n      entityContent = entityContent.substr(1);\n      deleteLineBreakAfterPre = false;\n    }\n\n    if (type === ApiMessageEntityTypes.Pre) {\n      deleteLineBreakAfterPre = true;\n    }\n\n    // Render nested entities, if any\n    if (nestedEntities.length) {\n      let nestedIndex = entityStartIndex;\n\n      nestedEntities.forEach((nestedEntity, nestedEntityIndex) => {\n        const {\n          renderResult: nestedResult,\n          entityEndIndex: nestedEntityEndIndex,\n        } = renderEntity(\n          nestedIndex,\n          entityEndIndex,\n          nestedEntity,\n          nestedEntityIndex === nestedEntities.length - 1,\n        );\n\n        nestedEntityContent.push(...nestedResult);\n        nestedIndex = nestedEntityEndIndex;\n      });\n    }\n\n    // Render the entity itself\n    const newEntity = shouldRenderAsHtml\n      ? processEntityAsHtml(entity, entityContent, nestedEntityContent)\n      : processEntity(entity, entityContent, nestedEntityContent);\n\n    if (Array.isArray(newEntity)) {\n      renderResult.push(...newEntity);\n    } else {\n      renderResult.push(newEntity);\n    }\n\n    // Render text after the entity, if it is the last entity in the text,\n    // or the last nested entity inside of another entity\n    if (isLastEntity && entityEndIndex < textPartEnd) {\n      let textAfter = text.substring(entityEndIndex, textPartEnd);\n      if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n        textAfter = textAfter.substring(1);\n      }\n      if (textAfter) {\n        renderResult.push(...renderMessagePart(\n          textAfter, highlight, shouldRenderHqEmoji, shouldRenderAsHtml,\n        ) as TextPart[]);\n      }\n    }\n\n    return {\n      renderResult,\n      entityEndIndex,\n    };\n  }\n\n  // Process highest-level entities\n  let index = 0;\n\n  organizedEntites.forEach((entity, arrayIndex) => {\n    const { renderResult, entityEndIndex } = renderEntity(\n      index,\n      text.length,\n      entity,\n      arrayIndex === organizedEntites.length - 1,\n    );\n\n    result.push(...renderResult);\n    index = entityEndIndex;\n  });\n\n  return result;\n}\n\nfunction processEntity(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const entityText = typeof entityContent === 'string' && entityContent;\n  const renderedContent = nestedEntityContent.length ? nestedEntityContent : entityContent;\n\n  if (!entityText) {\n    return renderMessagePart(renderedContent);\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return <strong>{renderMessagePart(renderedContent)}</strong>;\n    case ApiMessageEntityTypes.Blockquote:\n      return <blockquote>{renderMessagePart(renderedContent)}</blockquote>;\n    case ApiMessageEntityTypes.BotCommand:\n      return (\n        <a\n          onClick={handleBotCommandClick}\n          className=\"text-entity-link\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Hashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Cashtag:\n      return (\n        <a\n          onClick={handleHashtagClick}\n          className=\"text-entity-link\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Code:\n      return <code className=\"text-entity-code\">{renderMessagePart(renderedContent)}</code>;\n    case ApiMessageEntityTypes.Email:\n      return (\n        <a\n          href={`mailto:${entityText}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-entity-link\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Italic:\n      return <em>{renderMessagePart(renderedContent)}</em>;\n    case ApiMessageEntityTypes.MentionName:\n      return (\n        <MentionLink userId={entity.userId}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Mention:\n      return (\n        <MentionLink username={entityText}>\n          {renderMessagePart(renderedContent)}\n        </MentionLink>\n      );\n    case ApiMessageEntityTypes.Phone:\n      return (\n        <a\n          href={`tel:${entityText}`}\n          className=\"text-entity-link\"\n        >\n          {renderMessagePart(renderedContent)}\n        </a>\n      );\n    case ApiMessageEntityTypes.Pre:\n      return <pre className=\"text-entity-pre\">{renderMessagePart(renderedContent)}</pre>;\n    case ApiMessageEntityTypes.Strike:\n      return <del>{renderMessagePart(renderedContent)}</del>;\n    case ApiMessageEntityTypes.TextUrl:\n    case ApiMessageEntityTypes.Url:\n      return (\n        <SafeLink\n          url={getLinkUrl(entityText, entity)}\n          text={entityText}\n        >\n          {renderMessagePart(renderedContent)}\n        </SafeLink>\n      );\n    case ApiMessageEntityTypes.Underline:\n      return <ins>{renderMessagePart(renderedContent)}</ins>;\n    default:\n      return renderMessagePart(renderedContent);\n  }\n}\n\nfunction renderMessagePart(\n  content: TextPart | TextPart[],\n  highlight?: string,\n  shouldRenderHqEmoji?: boolean,\n  shouldRenderAsHtml?: boolean,\n) {\n  if (Array.isArray(content)) {\n    const result: TextPart[] = [];\n\n    content.forEach((c) => {\n      result.push(...renderMessagePart(c, highlight, shouldRenderHqEmoji, shouldRenderAsHtml));\n    });\n\n    return result;\n  }\n\n  if (shouldRenderAsHtml) {\n    return renderText(content, ['emoji_html', 'br_html']);\n  }\n\n  const emojiFilter = shouldRenderHqEmoji ? 'hq_emoji' : 'emoji';\n\n  if (highlight) {\n    return renderText(content, [emojiFilter, 'br', 'highlight'], { highlight });\n  } else {\n    return renderText(content, [emojiFilter, 'br']);\n  }\n}\n\nfunction getLinkUrl(entityContent: string, entity: ApiMessageEntity) {\n  const { type, url } = entity;\n  return type === ApiMessageEntityTypes.TextUrl && url ? url : entityContent;\n}\n\nfunction handleBotCommandClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().sendBotCommand({ command: e.currentTarget.innerText });\n}\n\nfunction handleHashtagClick(e: MouseEvent<HTMLAnchorElement>) {\n  getDispatch().setLocalTextSearchQuery({ query: e.currentTarget.innerText });\n  getDispatch().searchTextMessagesLocal();\n}\n\nfunction processEntityAsHtml(\n  entity: ApiMessageEntity,\n  entityContent: TextPart,\n  nestedEntityContent: TextPart[],\n) {\n  const rawEntityText = typeof entityContent === 'string' && entityContent;\n\n  const renderedContent = nestedEntityContent.length\n    ? nestedEntityContent.join('')\n    : renderText(entityContent, ['emoji_html', 'br_html']).join('');\n\n  if (!rawEntityText) {\n    return renderedContent;\n  }\n\n  switch (entity.type) {\n    case ApiMessageEntityTypes.Bold:\n      return `<b>${renderedContent}</b>`;\n    case ApiMessageEntityTypes.Italic:\n      return `<i>${renderedContent}</i>`;\n    case ApiMessageEntityTypes.Underline:\n      return `<u>${renderedContent}</u>`;\n    case ApiMessageEntityTypes.Code:\n      return `<code class=\"text-entity-code\">${renderedContent}</code>`;\n    case ApiMessageEntityTypes.Pre:\n      return `\\`\\`\\`<br/>${renderedContent}<br/>\\`\\`\\``;\n    case ApiMessageEntityTypes.Strike:\n      return `<del>${renderedContent}</del>`;\n    case ApiMessageEntityTypes.MentionName:\n      return `<a\n        class=\"text-entity-link\"\n        data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n        data-user-id=\"${entity.userId}\"\n        contenteditable=\"false\"\n      >${renderedContent}</a>`;\n    case ApiMessageEntityTypes.Url:\n    case ApiMessageEntityTypes.TextUrl:\n      return `<a\n        class=\"text-entity-link\"\n        href=${getLinkUrl(rawEntityText, entity)}\n        data-entity-type=\"${entity.type}\"\n      >${renderedContent}</a>`;\n    default:\n      return renderedContent;\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\nimport { fastRaf } from '../util/schedulers';\n\n// Fix for memory leak when unmounting video element\nexport default function useVideoCleanup(videoRef: RefObject<HTMLVideoElement>, dependencies: any[]) {\n  useEffect(() => {\n    const videoEl = videoRef.current;\n\n    return () => {\n      if (videoEl) {\n        fastRaf(() => {\n          videoEl.pause();\n          videoEl.src = '';\n          videoEl.load();\n        });\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n","import { RefObject } from 'react';\nimport React, {\n  FC, useRef, useEffect, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\n\nimport Loading from './Loading';\nimport Button from './Button';\n\nimport './SearchInput.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLInputElement>;\n  children?: any;\n  className?: string;\n  inputId?: string;\n  value?: string;\n  focused?: boolean;\n  isLoading?: boolean;\n  placeholder?: string;\n  disabled?: boolean;\n  canClose?: boolean;\n  onChange: (value: string) => void;\n  onReset?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\nconst SearchInput: FC<OwnProps> = ({\n  ref,\n  children,\n  value,\n  inputId,\n  className,\n  focused,\n  isLoading,\n  placeholder,\n  disabled,\n  canClose,\n  onChange,\n  onReset,\n  onFocus,\n  onBlur,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLInputElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  const [isInputFocused, markInputFocused, unmarkInputFocused] = useFlag(focused);\n\n  useEffect(() => {\n    if (!inputRef.current) {\n      return;\n    }\n\n    if (focused) {\n      inputRef.current.focus();\n    } else {\n      inputRef.current.blur();\n    }\n  }, [focused, placeholder]); // Trick for setting focus when selecting a contact to search for\n\n  const lang = useLang();\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { currentTarget } = event;\n    onChange(currentTarget.value);\n  }\n\n  function handleFocus() {\n    markInputFocused();\n    if (onFocus) {\n      onFocus();\n    }\n  }\n\n  function handleBlur() {\n    unmarkInputFocused();\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  return (\n    <div className={buildClassName('SearchInput', className, isInputFocused && 'has-focus')}>\n      {children}\n      <input\n        ref={inputRef}\n        id={inputId}\n        type=\"text\"\n        placeholder={placeholder || lang('Search')}\n        className=\"form-control\"\n        value={value}\n        disabled={disabled}\n        onChange={handleChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      />\n      <i className=\"icon-search\" />\n      {isLoading && (\n        <Loading />\n      )}\n      {!isLoading && (value || canClose) && onReset && (\n        <Button\n          round\n          size=\"tiny\"\n          color=\"translucent\"\n          onClick={onReset}\n        >\n          <span className=\"icon-close\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SearchInput);\n","import { fastRaf } from './schedulers';\nimport { animate } from './animation';\nimport { IS_IOS } from './environment';\n\nconst DURATION = 450;\n\nexport default function fastSmoothScroll(container: HTMLElement, left: number) {\n  // Native way seems to be smoother in Chrome\n  if (!IS_IOS) {\n    container.scrollTo({ left, behavior: 'smooth' });\n  } else {\n    fastRaf(() => {\n      scrollWithJs(container, left);\n    });\n  }\n}\n\nfunction scrollWithJs(container: HTMLElement, left: number) {\n  const { scrollLeft, offsetWidth: containerWidth, scrollWidth } = container;\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  const target = container.scrollLeft + path;\n  const startAt = Date.now();\n\n  animate(() => {\n    const t = Math.min((Date.now() - startAt) / DURATION, 1);\n\n    const currentPath = path * (1 - transition(t));\n    container.scrollLeft = Math.round(target - currentPath);\n\n    return t < 1;\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { IS_IOS } from './environment';\n\nexport default (container: HTMLDivElement, scrollTop?: number) => {\n  if (IS_IOS) {\n    container.style.overflow = 'hidden';\n  }\n\n  if (scrollTop !== undefined) {\n    container.scrollTop = scrollTop;\n  }\n\n  if (IS_IOS) {\n    container.style.overflow = '';\n  }\n};\n","const DEFAULT_MAX_TEXT_LENGTH = 30;\n\nexport default function trimText(text: string | undefined, length = DEFAULT_MAX_TEXT_LENGTH) {\n  if (!text || text.length <= length) {\n    return text;\n  }\n\n  return `${text.substr(0, length)}...`;\n}\n","import React, { FC, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiUser, ApiTypingStatus } from '../../api/types';\n\nimport { selectUser } from '../../modules/selectors';\nimport { getUserFirstOrLastName } from '../../modules/helpers';\nimport renderText from './helpers/renderText';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n\n  return (\n    <p className=\"typing-status\">\n      {typingUserName && (\n        <span className=\"sender-name\">{renderText(typingUserName)}</span>\n      )}\n      {typingStatus.action}\n      <span className=\"ellipsis\" />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import React, { FC, useCallback, memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { ApiChat } from '../../api/types';\nimport { GlobalActions } from '../../global/types';\n\nimport { selectIsChatWithSelf, selectUser } from '../../modules/selectors';\nimport {\n  isChatPrivate,\n  getUserFirstOrLastName,\n  getPrivateChatUserId,\n  isChatBasicGroup,\n  isChatSuperGroup,\n  isChatChannel,\n  getChatTitle,\n} from '../../modules/helpers';\nimport { pick } from '../../util/iteratees';\nimport useLang from '../../hooks/useLang';\n\nimport Avatar from './Avatar';\nimport Modal from '../ui/Modal';\nimport Button from '../ui/Button';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  canDeleteForAll?: boolean;\n  chatTitle: string;\n  contactName?: string;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'leaveChannel' | 'deleteHistory' | 'deleteChannel'>;\n\nconst DeleteChatModal: FC<OwnProps & StateProps & DispatchProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBasicGroup,\n  isSuperGroup,\n  canDeleteForAll,\n  chatTitle,\n  contactName,\n  onClose,\n  leaveChannel,\n  deleteHistory,\n  deleteChannel,\n}) => {\n  const handleDeleteMessageForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, maxId: chat.lastMessage!.id, shouldDeleteForAll: true });\n    onClose();\n  }, [deleteHistory, chat.id, chat.lastMessage, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isPrivateChat || isBasicGroup) {\n      deleteHistory({ chatId: chat.id, maxId: chat.lastMessage!.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    chat.isCreator,\n    chat.lastMessage,\n    chat.id,\n    onClose,\n    deleteHistory,\n    leaveChannel,\n    deleteChannel,\n  ]);\n\n  const lang = useLang();\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          chat={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{renderTitle()}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isChannel && !chat.isCreator) {\n      return 'Leave Channel?';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'Delete and Leave Channel?';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Leave Group?';\n    }\n\n    return 'Delete Chat?';\n  }\n\n  function renderMessage() {\n    if (isChannel && !chat.isCreator) {\n      return <p>Are you sure you want to leave channel <strong>{chatTitle}</strong>?</p>;\n    }\n    if (isChannel && chat.isCreator) {\n      return <p>Are you sure you want to delete and leave channel <strong>{chatTitle}</strong>?</p>;\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return <p>Are you sure you want to leave group <strong>{chatTitle}</strong>?</p>;\n    }\n\n    return <p>Are you sure you want to delete chat with <strong>{contactName}</strong>?</p>;\n  }\n\n  function renderActionText() {\n    if (isChannel && !chat.isCreator) {\n      return 'Leave Channel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Delete and Leave Channel';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Leave Group';\n    }\n\n    return `Delete${canDeleteForAll ? ' just for me' : ''}`;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n    >\n      {renderMessage()}\n      {canDeleteForAll && (\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageForAll}>\n          Delete for {contactName ? `me and ${contactName}` : 'Everyone'}\n        </Button>\n      )}\n      <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n        {renderActionText()}\n      </Button>\n      <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const isPrivateChat = isChatPrivate(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf);\n    const contactName = chat && isChatPrivate(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      canDeleteForAll,\n      chatTitle: getChatTitle(chat),\n      contactName,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['leaveChannel', 'deleteHistory', 'deleteChannel']),\n)(DeleteChatModal));\n","/*\n * Thanks to Ace Monkey for this mind-blowing patch.\n */\n\nexport function patchSafariProgressiveAudio(audioEl: HTMLAudioElement) {\n  if (audioEl.dataset.patchedForSafari) {\n    return;\n  }\n\n  audioEl.addEventListener('play', () => {\n    const t = audioEl.currentTime;\n\n    function onProgress() {\n      if (!audioEl.buffered.length) {\n        return;\n      }\n\n      audioEl.dataset.patchForSafariInProgress = 'true';\n      audioEl.currentTime = audioEl.duration - 1;\n      audioEl.addEventListener('progress', () => {\n        delete audioEl.dataset.patchForSafariInProgress;\n        audioEl.currentTime = t;\n        if (audioEl.paused) {\n          audioEl.play();\n        }\n      }, { once: true });\n\n      audioEl.removeEventListener('progress', onProgress);\n    }\n\n    audioEl.addEventListener('progress', onProgress);\n  }, { once: true });\n\n  audioEl.dataset.patchedForSafari = 'true';\n}\n\nexport function isSafariPatchInProgress(audioEl: HTMLAudioElement) {\n  return Boolean(audioEl.dataset.patchForSafariInProgress);\n}\n","import { useLayoutEffect } from '../lib/teact/teact';\nimport usePrevious from './usePrevious';\n\nexport default <T extends any[], PT = T>(cb: (args: PT) => void, dependencies: T) => {\n  const prevDeps = usePrevious<T>(dependencies);\n  return useLayoutEffect(() => {\n    // @ts-ignore (workaround for \"could be instantiated with a different subtype\" issue)\n    cb(prevDeps || []);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n};\n","import React, {\n  FC, useCallback, useEffect, useState, memo, useRef,\n} from '../../lib/teact/teact';\n\nimport { ApiMessage } from '../../api/types';\n\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\nimport { getMediaTransferState, getMessageMediaHash, getMessageMediaThumbDataUri } from '../../modules/helpers';\nimport { ObserveFn, useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useMediaWithDownloadProgress from '../../hooks/useMediaWithDownloadProgress';\nimport useMedia from '../../hooks/useMedia';\nimport download from '../../util/download';\n\nimport File from './File';\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: number) => void;\n};\n\nconst Document: FC<OwnProps> = ({\n  message,\n  observeIntersection,\n  smaller,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const document = message.content.document!;\n  const extension = getDocumentExtension(document) || '';\n  const { fileName, size, timestamp } = document;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const [isDownloadAllowed, setIsDownloadAllowed] = useState(false);\n  const {\n    mediaData, downloadProgress,\n  } = useMediaWithDownloadProgress(getMessageMediaHash(message, 'download'), !isDownloadAllowed);\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, isDownloadAllowed);\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMessageMediaThumbDataUri(message) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n\n  const handleClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n    } else {\n      setIsDownloadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [isUploading, onCancelUpload]);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useEffect(() => {\n    if (isDownloadAllowed && mediaData) {\n      download(mediaData, fileName);\n      setIsDownloadAllowed(false);\n    }\n  }, [fileName, mediaData, isDownloadAllowed]);\n\n  return (\n    <File\n      ref={ref}\n      name={fileName}\n      extension={extension}\n      size={size}\n      timestamp={withDate ? datetime || timestamp : undefined}\n      thumbnailDataUri={thumbDataUri}\n      previewData={localBlobUrl || previewData}\n      smaller={smaller}\n      isTransferring={isTransferring}\n      isUploading={isUploading}\n      transferProgress={transferProgress}\n      className={className}\n      sender={sender}\n      isSelectable={isSelectable}\n      isSelected={isSelected}\n      onClick={handleClick}\n      onDateClick={onDateClick ? handleDateClick : undefined}\n    />\n  );\n};\n\nexport default memo(Document);\n","import React, { FC } from '../../lib/teact/teact';\nimport { OwnProps } from './StickerSetModal';\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst StickerSetModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerSetModal = useModuleLoader(Bundles.Extra, 'StickerSetModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerSetModal ? <StickerSetModal {...props} /> : undefined;\n};\n\nexport default StickerSetModalAsync;\n","import React, {\n  FC, memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { IAnchorPosition } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\n\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n};\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransition(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  function restoreSelection() {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  }\n\n  const getSelectedText = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.toString();\n  }, [selectedRange]);\n\n  const getSelectedElement = useCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  }, [selectedRange]);\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (key === 'monospace' || key === 'strikethrough') {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && !!selectedTextFormats[fKey as keyof ISelectedTextFormats],\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleBoldText = useCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && !!selectedFormats[key]) {\n          document.execCommand(key);\n        }\n      });\n\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  }, []);\n\n  const handleItalicText = useCallback(() => {\n    document.execCommand('italic');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  }, []);\n\n  const handleUnderlineText = useCallback(() => {\n    document.execCommand('underline');\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  }, []);\n\n  const handleStrikethroughText = useCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.strikethrough,\n  ]);\n\n  const handleMonospaceText = useCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\">${text}</code>`);\n    onClose();\n  }, [\n    getSelectedElement, getSelectedText, onClose,\n    selectedRange, selectedTextFormats.monospace,\n  ]);\n\n  function handleLinkUrlConfirm() {\n    const formattedLinkUrl = linkUrl.includes('://') ? linkUrl : `http://${linkUrl}`;\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n      return;\n    }\n\n    const text = getSelectedText();\n    restoreSelection();\n    document.execCommand('insertHTML', false, `<a href=${formattedLinkUrl} class=\"text-entity-link\">${text}</a>`);\n    onClose();\n  }\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY_CODE: Record<string, AnyToVoidFunction> = {\n      KeyK: openLinkControl,\n      KeyB: handleBoldText,\n      KeyU: handleUnderlineText,\n      KeyI: handleItalicText,\n      KeyM: handleMonospaceText,\n      KeyS: handleStrikethroughText,\n    };\n\n    const handler = HANDLERS_BY_KEY_CODE[e.code];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  }, [\n    handleBoldText, handleItalicText, handleUnderlineText,\n    handleMonospaceText, handleStrikethroughText,\n    openLinkControl,\n  ]);\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    !!linkUrl.length && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      // @ts-ignore Teact feature\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <i className=\"icon-bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <i className=\"icon-italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <i className=\"icon-underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <i className=\"icon-strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <i className=\"icon-monospace\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <i className=\"icon-link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <i className=\"icon-arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <i className=\"icon-check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage } from '../../api/types';\n\nimport { formatMediaDuration } from '../../util/dateFormat';\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../modules/helpers';\nimport useMedia from '../../hooks/useMedia';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  onClick?: (messageId: number, chatId: number) => void;\n};\n\nconst Media: FC<OwnProps> = ({ message, idPrefix = 'shared-media', onClick }) => {\n  const handleClick = useCallback(() => {\n    onClick!(message.id, message.chatId);\n  }, [message.id, message.chatId, onClick]);\n\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'));\n  const {\n    shouldRenderThumb, shouldRenderFullMedia, transitionClassNames,\n  } = useTransitionForMedia(mediaBlobUrl, 'slow');\n\n  const video = getMessageVideo(message);\n\n  return (\n    <div id={`${idPrefix}${message.id}`} className=\"Media scroll-item\" onClick={onClick ? handleClick : undefined}>\n      {shouldRenderThumb && (\n        <img src={thumbDataUri} alt=\"\" />\n      )}\n      {shouldRenderFullMedia && (\n        <img src={mediaBlobUrl} className={`${transitionClassNames} full-media`} alt=\"\" />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import React, {\n  FC, memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport {\n  ApiAudio, ApiMessage, ApiVoice,\n} from '../../api/types';\nimport { ISettings } from '../../types';\n\nimport { IS_MOBILE_SCREEN } from '../../util/environment';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dateFormat';\nimport {\n  getMediaDuration,\n  getMediaTransferState,\n  getMessageKey,\n  getMessageMediaFormat,\n  getMessageMediaHash,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../modules/helpers';\nimport { renderWaveformToDataUri } from './helpers/waveform';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport useMediaWithDownloadProgress from '../../hooks/useMediaWithDownloadProgress';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useBuffering from '../../hooks/useBuffering';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useLang from '../../hooks/useLang';\n\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  renderingFor?: 'searchResult' | 'sharedMedia';\n  date?: number;\n  lastSyncTime?: number;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  onPlay: (messageId: number, chatId: number) => void;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (messageId: number, chatId: number) => void;\n};\n\ntype StateProps = {\n  theme: ISettings['theme'];\n};\n\ninterface ISeekMethods {\n  handleStartSeek: (e: React.MouseEvent<HTMLElement>) => void;\n  handleSeek: (e: React.MouseEvent<HTMLElement>) => void;\n  handleStopSeek: () => void;\n}\n\nconst AVG_VOICE_DURATION = 30;\nconst MIN_SPIKES = IS_MOBILE_SCREEN ? 20 : 25;\nconst MAX_SPIKES = IS_MOBILE_SCREEN ? 50 : 75;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps & StateProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  renderingFor,\n  date,\n  lastSyncTime,\n  className,\n  isSelectable,\n  isSelected,\n  onPlay,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const { content: { audio, voice }, isMediaUnread } = message;\n  const isVoice = Boolean(voice);\n  const isSeeking = useRef<boolean>(false);\n\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldDownload = (isActivated || PRELOAD) && lastSyncTime;\n\n  const { mediaData, downloadProgress } = useMediaWithDownloadProgress(\n    getMessageMediaHash(message, 'inline'),\n    !shouldDownload,\n    getMessageMediaFormat(message, 'inline'),\n  );\n\n  function handleForcePlay() {\n    setIsActivated(true);\n    onPlay(message.id, message.chatId);\n  }\n\n  const {\n    isBuffered, bufferedProgress, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    getMessageKey(message),\n    getMediaDuration(message)!,\n    mediaData,\n    bufferingHandlers,\n    checkBuffering,\n    isActivated,\n    handleForcePlay,\n    isMessageLocal(message),\n  );\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(message, uploadProgress || downloadProgress, isActivated && !isBuffered);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring);\n\n  const handleButtonClick = useCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay(message.id, message.chatId);\n    }\n\n    setIsActivated(!isActivated);\n    playPause();\n  }, [isPlaying, isUploading, message.id, message.chatId, onCancelUpload, onPlay, playPause, isActivated]);\n\n  useEffect(() => {\n    if (isPlaying && onReadMedia && isMediaUnread) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia]);\n\n  const handleSeek = useCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isSeeking.current) {\n      const seekBar = e.currentTarget.closest('.seekline,.waveform');\n      if (seekBar) {\n        const { width, left } = seekBar.getBoundingClientRect();\n        setCurrentTime(duration * ((e.clientX - left) / width));\n      }\n    }\n  }, [duration, setCurrentTime]);\n\n  const handleStartSeek = useCallback((e: React.MouseEvent<HTMLElement>) => {\n    isSeeking.current = true;\n    handleSeek(e);\n  }, [handleSeek]);\n\n  const handleStopSeek = useCallback(() => {\n    isSeeking.current = false;\n  }, []);\n\n  const handleDateClick = useCallback(() => {\n    onDateClick!(message.id, message.chatId);\n  }, [onDateClick, message.id, message.chatId]);\n\n  useLang();\n\n  function getFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function getSecondLine() {\n    if (isVoice) {\n      return formatMediaDuration(voice!.duration);\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <>\n        {performer && renderText(performer)}\n        {performer && senderTitle && <span>&bull;</span>}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  const seekHandlers = { handleStartSeek, handleSeek, handleStopSeek };\n  const isOwn = isOwnMessage(message);\n  const renderedWaveform = useMemo(\n    () => voice && renderWaveform(voice, playProgress, isOwn, seekHandlers, theme),\n    [voice, playProgress, isOwn, seekHandlers, theme],\n  );\n\n  const fullClassName = buildClassName(\n    'Audio media-inner',\n    className,\n    isOwn && !renderingFor && 'own',\n    renderingFor && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toggle-play'];\n  if (shouldRenderSpinner) {\n    buttonClassNames.push('loading');\n  } else if (isPlaying) {\n    buttonClassNames.push('pause');\n  } else if (!isPlaying) {\n    buttonClassNames.push('play');\n  }\n\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const contentClassName = buildClassName('content', showSeekline && 'with-seekline');\n\n  function renderSearchResult() {\n    return (\n      <>\n        <div className={contentClassName}>\n          <div className=\"content-row\">\n            <p className=\"title\">{renderText(getFirstLine())}</p>\n\n            <div className=\"message-date\">\n              {date && (\n                <Link\n                  className=\"date\"\n                  onClick={handleDateClick}\n                >\n                  {formatPastTimeShort(date * 1000)}\n                </Link>\n              )}\n            </div>\n          </div>\n\n          {showSeekline && renderSeekline(playProgress, bufferedProgress, seekHandlers)}\n          {!showSeekline && (\n            <p className=\"duration\">\n              {playProgress > 0 ? `${formatMediaDuration(duration * playProgress)} / ` : undefined}\n              {getSecondLine()}\n            </p>\n          )}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div className={fullClassName}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <Button\n        round\n        ripple={!IS_MOBILE_SCREEN}\n        size={renderingFor ? 'smaller' : 'tiny'}\n        className={buttonClassNames.join(' ')}\n        ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n        onClick={handleButtonClick}\n      >\n        <i className=\"icon-play\" />\n        <i className=\"icon-pause\" />\n      </Button>\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames)}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            size={renderingFor ? 'm' : 's'}\n            onClick={handleButtonClick}\n          />\n        </div>\n      )}\n      {renderingFor === 'searchResult' && renderSearchResult()}\n      {renderingFor !== 'searchResult' && audio && renderAudio(\n        audio, isPlaying, playProgress, bufferedProgress, seekHandlers, date,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {renderingFor !== 'searchResult' && voice && renderVoice(voice, renderedWaveform, isMediaUnread)}\n    </div>\n  );\n};\n\nfunction renderAudio(\n  audio: ApiAudio,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedProgress: number,\n  seekHandlers: ISeekMethods,\n  date?: number,\n  handleDateClick?: () => void,\n) {\n  const {\n    title, performer, duration, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\">{renderText(title || fileName)}</p>\n      {showSeekline && renderSeekline(playProgress, bufferedProgress, seekHandlers)}\n      {!showSeekline && (\n        <div className=\"meta\">\n          <span className=\"performer\">{renderText(performer || 'Unknown')}</span>\n          {date && (\n            <>\n              {' '}\n              &bull;\n              {' '}\n              <Link className=\"date\" onClick={handleDateClick}>{formatMediaDateTime(date * 1000)}</Link>\n            </>\n          )}\n        </div>\n      )}\n      <p className=\"duration\">\n        {playProgress > 0 ? `${formatMediaDuration(duration * playProgress)} / ` : undefined}\n        {formatMediaDuration(duration)}\n      </p>\n    </div>\n  );\n}\n\nfunction renderVoice(voice: ApiVoice, renderedWaveform: any, isMediaUnread?: boolean) {\n  return (\n    <div className=\"content\">\n      {renderedWaveform}\n      <p className=\"voice-duration\">\n        {formatMediaDuration(voice.duration)}\n        {isMediaUnread && <span>&bull;</span>}\n      </p>\n    </div>\n  );\n}\n\nfunction renderWaveform(\n  voice: ApiVoice,\n  playProgress = 0,\n  isOwn = false,\n  { handleStartSeek, handleSeek, handleStopSeek }: ISeekMethods,\n  theme: ISettings['theme'],\n) {\n  const { waveform, duration } = voice;\n\n  if (!waveform) {\n    return undefined;\n  }\n\n  const fillColor = theme === 'dark' ? '#494B75' : '#CBCBCB';\n  const fillOwnColor = theme === 'dark' ? '#C69C85' : '#B0DEA6';\n  const progressFillColor = theme === 'dark' ? '#868DF5' : '#54a3e6';\n  const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#53ad53';\n  const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n  const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n  const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n  const { data: spikes, peak } = interpolateArray(decodedWaveform, spikesCount);\n  const { src, width, height } = renderWaveformToDataUri(spikes, playProgress, {\n    peak,\n    fillStyle: isOwn ? fillOwnColor : fillColor,\n    progressFillStyle: isOwn ? progressFillOwnColor : progressFillColor,\n  });\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    <img\n      src={src}\n      alt=\"\"\n      width={width}\n      height={height}\n      className=\"waveform\"\n      draggable={false}\n      onMouseDown={handleStartSeek}\n      onMouseMove={handleSeek}\n      onMouseUp={handleStopSeek}\n    />\n  );\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedProgress: number,\n  { handleStartSeek, handleSeek, handleStopSeek }: ISeekMethods,\n) {\n  return (\n    <div\n      className=\"seekline no-selection\"\n      onMouseDown={handleStartSeek}\n      onMouseMove={handleSeek}\n      onMouseUp={handleStopSeek}\n    >\n      <span className=\"seekline-buffered-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${bufferedProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-play-progress\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          // @ts-ignore\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global) => ({ theme: global.settings.byKey.theme }))(Audio));\n","/* eslint-disable no-bitwise */\n\n// eslint-disable-next-line max-len\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveformToDataUri(\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  const canvas = document.createElement('canvas');\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, height, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n\n  return {\n    src: canvas.toDataURL(),\n    width,\n    height,\n  };\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","import React, {\n  FC, useLayoutEffect, useRef, memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport './Tab.scss';\n\ntype OwnProps = {\n  className?: string;\n  title: string;\n  active?: boolean;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n  previousActiveTab?: number;\n  onClick: (arg: number) => void;\n  clickArg: number;\n};\n\nconst Tab: FC<OwnProps> = ({\n  className,\n  title,\n  active,\n  badgeCount,\n  isBadgeActive,\n  previousActiveTab,\n  onClick,\n  clickArg,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const tabRef = useRef<HTMLButtonElement>(null);\n\n  useLayoutEffect(() => {\n    if (!active || previousActiveTab === undefined) {\n      return;\n    }\n\n    const tab = tabRef.current!;\n    const indicator = tab.querySelector('i')!;\n    const currentIndicator = tab.parentElement!.children[previousActiveTab].querySelector('i')!;\n\n    currentIndicator.classList.remove('animate');\n    indicator.classList.remove('animate');\n\n    // We move and resize our indicator so it repeats the position and size of the previous one.\n    const shiftLeft = currentIndicator.parentElement!.offsetLeft - indicator.parentElement!.offsetLeft;\n    const scaleFactor = currentIndicator.clientWidth / indicator.clientWidth;\n    indicator.style.transform = `translate3d(${shiftLeft}px, 0, 0) scale3d(${scaleFactor}, 1, 1)`;\n\n    // 3 AFs needed here to synchronize animations with Transition component\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        requestAnimationFrame(() => {\n          // Now we remove the transform to let it animate to its own position and size.\n          indicator.classList.add('animate');\n          indicator.style.transform = 'none';\n        });\n      });\n    });\n  }, [active, previousActiveTab]);\n\n  return (\n    <button\n      type=\"button\"\n      className={buildClassName('Tab', className, active && 'active')}\n      onClick={() => onClick(clickArg)}\n      ref={tabRef}\n    >\n      <span>\n        {title}\n        {!!badgeCount && (\n          <span className={buildClassName('badge', isBadgeActive && 'active')}>{badgeCount}</span>\n        )}\n        <i />\n      </span>\n    </button>\n  );\n};\n\nexport default memo(Tab);\n","import React, {\n  FC, memo, useRef, useEffect,\n} from '../../lib/teact/teact';\n\nimport fastSmoothScrollHorizontal from '../../util/fastSmoothScrollHorizontal';\nimport usePrevious from '../../hooks/usePrevious';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\n\nimport Tab from './Tab';\n\nimport './TabList.scss';\n\nexport type TabWithProperties = {\n  title: string;\n  badgeCount?: number;\n  isBadgeActive?: boolean;\n};\n\ntype OwnProps = {\n  tabs: readonly TabWithProperties[];\n  activeTab: number;\n  onSwitchTab: (index: number) => void;\n};\n\nconst TAB_SCROLL_THRESHOLD_PX = 16;\n\nconst TabList: FC<OwnProps> = ({ tabs, activeTab, onSwitchTab }) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const previousActiveTab = usePrevious(activeTab);\n\n  useHorizontalScroll(containerRef);\n\n  // Scroll container to place active tab in the center\n  useEffect(() => {\n    const container = containerRef.current!;\n    if (container.scrollWidth <= container.offsetWidth) {\n      return;\n    }\n\n    const activeTabElement = container.querySelector('.Tab.active') as HTMLElement | null;\n    if (activeTabElement) {\n      const newLeft = activeTabElement.offsetLeft - (container.offsetWidth / 2) + (activeTabElement.offsetWidth / 2);\n\n      // Prevent scrolling by only a couple of pixels, which doesn't look smooth\n      if (Math.abs(newLeft - container.scrollLeft) < TAB_SCROLL_THRESHOLD_PX) {\n        return;\n      }\n\n      fastSmoothScrollHorizontal(container, newLeft);\n    }\n  }, [activeTab]);\n\n  const lang = useLang();\n\n  return (\n    <div className=\"TabList no-selection no-scrollbar\" ref={containerRef}>\n      {tabs.map((tab, i) => (\n        <Tab\n          key={tab.title}\n          title={lang(tab.title)}\n          active={i === activeTab}\n          badgeCount={tab.badgeCount}\n          isBadgeActive={tab.isBadgeActive}\n          previousActiveTab={previousActiveTab}\n          onClick={onSwitchTab}\n          clickArg={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TabList);\n","import { ApiError } from '../api/types';\n\nconst READABLE_ERROR_MESSAGES: Record<string, string> = {\n  CHAT_RESTRICTED: 'You can\\'t send messages in this chat, you were restricted',\n  CHAT_WRITE_FORBIDDEN: 'You can\\'t write in this chat',\n  CHAT_SEND_POLL_FORBIDDEN: 'You can\\'t create polls in this chat',\n  CHAT_SEND_STICKERS_FORBIDDEN: 'You can\\'t send stickers in this chat',\n  CHAT_SEND_GIFS_FORBIDDEN: 'You can\\'t send gifs in this chat',\n  CHAT_SEND_MEDIA_FORBIDDEN: 'You can\\'t send media in this chat',\n  CHAT_LINK_EXISTS: 'The chat is public, you can\\'t hide the history to new users',\n  // eslint-disable-next-line max-len\n  SLOWMODE_WAIT_X: 'Slowmode is enabled in this chat: you must wait for the specified number of seconds before sending another message to the chat.',\n  USER_BANNED_IN_CHANNEL: 'You\\'re banned from sending messages in supergroups / channels',\n  USER_IS_BLOCKED: 'You were blocked by this user',\n  YOU_BLOCKED_USER: 'You blocked this user',\n  IMAGE_PROCESS_FAILED: 'Failure while processing image',\n  MEDIA_EMPTY: 'The provided media object is invalid',\n  MEDIA_INVALID: 'Media invalid',\n  PHOTO_EXT_INVALID: 'The extension of the photo is invalid',\n  PHOTO_INVALID_DIMENSIONS: 'The photo dimensions are invalid',\n  PHOTO_SAVE_FILE_INVALID: 'Internal issues, try again later',\n  // eslint-disable-next-line max-len\n  MESSAGE_DELETE_FORBIDDEN: 'You can\\'t delete one of the messages you tried to delete, most likely because it is a service message.',\n  MESSAGE_POLL_CLOSED: 'Poll closed',\n  MESSAGE_EDIT_TIME_EXPIRED: 'You can\\'t edit this message anymore.',\n  CHAT_ADMIN_REQUIRED: 'You must be an admin in this chat to do this',\n  PINNED_DIALOGS_TOO_MUCH: 'Sorry, you can only pin 5 chats to the top',\n  DIALOG_FILTERS_TOO_MUCH: 'Sorry, you can\\'t have more than 10 folders',\n  CHANNEL_PRIVATE: 'This channel is private',\n  MEDIA_CAPTION_TOO_LONG: 'The provided caption is too long',\n  ADDRESS_STREET_LINE1_INVALID: 'The address you provided is not valid',\n  ADDRESS_STREET_LINE2_INVALID: 'The address you provided is not valid',\n  ADDRESS_CITY_INVALID: 'The city you provided is not valid',\n  ADDRESS_COUNTRY_INVALID: 'The country you provided is not valid',\n  ADDRESS_POSTCODE_INVALID: 'The postcode you provided is not valid',\n  ADDRESS_STATE_INVALID: 'The state you provided is not valid',\n  REQ_INFO_NAME_INVALID: 'The name you provided is not valid',\n  REQ_INFO_PHONE_INVALID: 'The phone you provided is not valid',\n  REQ_INFO_EMAIL_INVALID: 'The email you provided is not valid',\n  // TODO Bring back after fixing the weird bug\n  // CHANNEL_INVALID: 'An error occurred. Please try again later',\n  LINK_NOT_MODIFIED: 'This discussion is already linked to the channel',\n\n  // Non-API errors\n  SERVICE_WORKER_DISABLED: 'Service Worker is disabled. Please reload the page without holding <Shift> key.',\n  // eslint-disable-next-line max-len\n  CAPTION_TOO_LONG_PLEASE_REMOVE_CHARACTERS: 'The provided caption is too long. Please remove {EXTRA_CHARS_COUNT} character{PLURAL_S}.',\n  // eslint-disable-next-line max-len\n  FRESH_RESET_AUTHORISATION_FORBIDDEN: 'You can’t logout other sessions if less than 24 hours have passed since you logged on the current session',\n\n  BOTS_TOO_MUCH: 'There are too many bots in this chat/channel',\n  BOT_GROUPS_BLOCKED: 'This bot can\\'t be added to groups',\n  USERS_TOO_MUCH: 'The maximum number of users has been exceeded',\n  USER_CHANNELS_TOO_MUCH: 'One of the users you tried to add is already in too many channels/supergroups',\n  USER_KICKED: 'This user was kicked from this supergroup/channel',\n  USER_NOT_MUTUAL_CONTACT: 'The provided user is not a mutual contact',\n  USER_PRIVACY_RESTRICTED: 'The user\\'s privacy settings do not allow you to do this',\n  INVITE_HASH_EMPTY: 'The invite hash is empty',\n  INVITE_HASH_EXPIRED: 'The invite link has expired',\n  INVITE_HASH_INVALID: 'The invite hash is invalid',\n  CHANNELS_TOO_MUCH: 'You have joined too many channels/supergroups',\n  USER_ALREADY_PARTICIPANT: 'You already in the group',\n};\n\nexport default function getReadableErrorText(error: ApiError) {\n  const { message, isSlowMode, textParams } = error;\n  // Currently Telegram API doesn't return `SLOWMODE_WAIT_X` error as described in the docs\n  if (isSlowMode) {\n    const extraPartIndex = message.indexOf(' (caused by');\n    return extraPartIndex > 0 ? message.substring(0, extraPartIndex) : message;\n  }\n  let errorMessage = READABLE_ERROR_MESSAGES[message];\n  if (errorMessage && textParams) {\n    errorMessage = Object.keys(textParams).reduce((acc, current) => {\n      return acc.replace(current, textParams[current]);\n    }, errorMessage as string);\n  }\n  return errorMessage;\n}\n","import { DEBUG } from '../config';\n\nexport const CLIPBOARD_ITEM_SUPPORTED = navigator.clipboard && window.ClipboardItem;\n\nconst textCopyEl = document.createElement('textarea');\ntextCopyEl.setAttribute('readonly', '');\ntextCopyEl.tabIndex = -1;\ntextCopyEl.className = 'visually-hidden';\n\nexport const copyTextToClipboard = (str: string): void => {\n  textCopyEl.value = str;\n  document.body.appendChild(textCopyEl);\n  const selection = document.getSelection();\n\n  if (selection) {\n    // Store previous selection\n    const rangeToRestore = selection.rangeCount > 0 && selection.getRangeAt(0);\n    textCopyEl.select();\n    document.execCommand('copy');\n    // Restore the original selection\n    if (rangeToRestore) {\n      selection.removeAllRanges();\n      selection.addRange(rangeToRestore);\n    }\n  }\n\n  document.body.removeChild(textCopyEl);\n};\n\nexport const copyImageToClipboard = (imageUrl: string) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  const imageEl = new Image();\n  imageEl.onload = (e: Event) => {\n    if (ctx && e.currentTarget) {\n      const img = e.currentTarget as HTMLImageElement;\n      canvas.width = img.width;\n      canvas.height = img.height;\n      ctx.drawImage(img, 0, 0, img.width, img.height);\n      canvas.toBlob(copyBlobToClipboard, 'image/png', 1);\n    }\n  };\n\n  imageEl.src = imageUrl;\n};\n\nasync function copyBlobToClipboard(pngBlob: Blob | null) {\n  if (!pngBlob || !CLIPBOARD_ITEM_SUPPORTED) {\n    return;\n  }\n\n  try {\n    await navigator.clipboard.write([\n      new window.ClipboardItem({\n        [pngBlob.type]: pngBlob,\n      }),\n    ]);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n    }\n  }\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getDispatch } from '../lib/teact/teactn';\nimport { ApiChat, ApiUser } from '../api/types';\nimport { isChatArchived, getCanDeleteChat, isChatPrivate } from '../modules/helpers';\n\nexport default ({\n  chat,\n  privateChatUser,\n  handleDelete,\n  folderId,\n  isPinned,\n}: {\n  chat: ApiChat | undefined;\n  privateChatUser: ApiUser | undefined;\n  handleDelete: () => void;\n  folderId?: number;\n  isPinned?: boolean;\n}) => {\n  const {\n    toggleChatPinned,\n    updateChatMutedState,\n    toggleChatArchived,\n    toggleChatUnread,\n  } = getDispatch();\n\n  return useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    const isChatWithSelf = privateChatUser && privateChatUser.isSelf;\n\n    const actionUnreadMark = chat.unreadCount || chat.hasUnreadMark\n      ? { title: 'Mark as Read', icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : { title: 'Mark as Unread', icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) };\n\n    const actionPin = isPinned\n      ? { title: 'Unpin', icon: 'unpin', handler: () => toggleChatPinned({ id: chat.id, folderId }) }\n      : { title: 'Pin', icon: 'pin', handler: () => toggleChatPinned({ id: chat.id, folderId }) };\n\n    const actionMute = chat.isMuted\n      ? { title: 'Unmute', icon: 'unmute', handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }) }\n      : { title: 'Mute', icon: 'mute', handler: () => updateChatMutedState({ chatId: chat.id, isMuted: true }) };\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: 'Unarchive', icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: 'Archive', icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const actionDelete = {\n      title: isChatPrivate(chat.id) ? 'Delete' : (getCanDeleteChat(chat) ? 'Delete and Leave' : 'Leave'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    return [\n      actionUnreadMark,\n      actionPin,\n      ...(!isChatWithSelf ? [\n        actionMute,\n        actionArchive,\n      ] : []),\n      actionDelete,\n    ];\n  }, [\n    chat, privateChatUser, handleDelete, folderId, isPinned,\n    toggleChatPinned, updateChatMutedState, toggleChatArchived, toggleChatUnread,\n  ]);\n};\n","import React, { FC } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\nimport { formatPastTimeShort } from '../../util/dateFormat';\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst LastMessageMeta: FC<OwnProps> = ({ message, outgoingStatus }) => {\n  return (\n    <div className=\"LastMessageMeta\">\n      {outgoingStatus && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">{formatPastTimeShort(message.date * 1000)}</span>\n    </div>\n  );\n};\n\nexport default LastMessageMeta;\n","import React, { FC } from '../../lib/teact/teact';\n\nimport { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {() => (\n          <i className={`icon-message-${status}`} />\n        )}\n      </Transition>\n    </div>\n  );\n};\n\nexport default MessageOutgoingStatus;\n","import { useState, useEffect } from '../lib/teact/teact';\nimport { IAnchorPosition } from '../types';\n\nexport default (\n  anchor: IAnchorPosition | undefined,\n  getTriggerElement: () => HTMLElement | null,\n  getRootElement: () => HTMLElement | null,\n  getMenuElement: () => HTMLElement | null,\n  extraPaddingX = 0,\n  extraTopPadding = 0,\n) => {\n  const [positionX, setPositionX] = useState<'right' | 'left'>('right');\n  const [positionY, setPositionY] = useState<'top' | 'bottom'>('bottom');\n  const [style, setStyle] = useState('');\n\n  useEffect(() => {\n    const triggerEl = getTriggerElement();\n    if (!anchor || !triggerEl) {\n      return;\n    }\n\n    let { x, y } = anchor;\n    const emptyRect = {\n      width: 0, left: 0, height: 0, top: 0,\n    };\n\n    const menuEl = getMenuElement();\n    const rootEl = getRootElement();\n\n    const triggerRect = triggerEl.getBoundingClientRect();\n    const menuRect = menuEl ? { width: menuEl.offsetWidth, height: menuEl.offsetHeight } : emptyRect;\n    const rootRect = rootEl ? rootEl.getBoundingClientRect() : emptyRect;\n\n    if (x + menuRect.width + extraPaddingX < rootRect.width + rootRect.left) {\n      setPositionX('left');\n      x += 3;\n    } else if (x - menuRect.width > 0) {\n      setPositionX('right');\n      x -= 3;\n    } else {\n      setPositionX('left');\n      x = 16;\n    }\n\n    if (y + menuRect.height < rootRect.height + rootRect.top) {\n      setPositionY('top');\n    } else {\n      setPositionY('bottom');\n\n      if (y - menuRect.height < rootRect.top + extraTopPadding) {\n        y = rootRect.top + extraTopPadding + menuRect.height;\n      }\n    }\n\n    setStyle(`left: ${x - triggerRect.left}px; top: ${y - triggerRect.top}px;`);\n  }, [\n    anchor, extraPaddingX, extraTopPadding,\n    getMenuElement, getRootElement, getTriggerElement,\n  ]);\n\n  return {\n    positionX,\n    positionY,\n    style,\n  };\n};\n","import React, { FC, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport usePrevious from '../../hooks/usePrevious';\nimport buildClassName from '../../util/buildClassName';\n\ntype ChildrenFn = () => any;\n\ntype OwnProps = {\n  isOpen: boolean;\n  isCustom?: boolean;\n  id?: string;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  children: ChildrenFn;\n};\n\nconst ShowTransition: FC<OwnProps> = ({\n  isOpen, isCustom, id, className, onClick, children,\n}) => {\n  const { shouldRender, transitionClassNames } = useShowTransition(\n    isOpen, undefined, undefined, isCustom ? false : undefined,\n  );\n  const prevIsOpen = usePrevious(isOpen);\n  const prevChildren = usePrevious(children);\n  const fromChildrenRef = useRef<ChildrenFn>();\n\n  if (prevIsOpen && !isOpen) {\n    fromChildrenRef.current = prevChildren;\n  }\n\n  return (\n    shouldRender && (\n      <div id={id} className={buildClassName(className, transitionClassNames)} onClick={onClick}>\n        {isOpen ? children() : fromChildrenRef.current!()}\n      </div>\n    )\n  );\n};\n\nexport default ShowTransition;\n","import {\n  useCallback, useEffect, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { register } from '../util/audioPlayer';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useOnChange from './useOnChange';\n\ntype Handler = (e: Event) => void;\n\nexport default (\n  trackId: string,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  src?: string,\n  handlers?: Record<string, Handler>,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  noPlaylist = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  useOnChange(() => {\n    controllerRef.current = register(trackId, (eventName, e) => {\n      switch (eventName) {\n        case 'onPlay':\n          setIsPlaying(true);\n          break;\n        case 'onPause':\n          setIsPlaying(false);\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n      }\n\n      if (handlers && handlers[eventName]) {\n        handlers[eventName](e);\n      }\n    }, onForcePlay);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      isPlayingSync = true;\n    }\n\n    if (onInit) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  const {\n    play, pause, setCurrentTime, proxy, destroy,\n  } = controllerRef.current!;\n  const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n\n  // RAF progress\n  useEffect(() => {\n    if (duration && !isSafariPatchInProgress(proxy)) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy.src && proxy.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy.src, proxy.paused]);\n\n  const playPause = useCallback(() => {\n    if (isPlaying) {\n      pause();\n    } else if (src) {\n      play(src);\n    }\n  }, [src, pause, play, isPlaying]);\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    setCurrentTime,\n    audioProxy: proxy,\n    duration,\n  };\n};\n","import { IS_SAFARI } from './environment';\nimport safePlay from './safePlay';\nimport { patchSafariProgressiveAudio, isSafariPatchInProgress } from './patchSafariProgressiveAudio';\nimport { getDispatch } from '../lib/teact/teactn';\nimport { parseMessageKey } from '../modules/helpers';\n\ntype Handler = (eventName: string, e: Event) => void;\n\ninterface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<string, Track>();\nlet queue: string[] = [];\n\nlet currentTrackId: string | undefined;\n\nfunction createAudio(trackId: string, onForcePlay?: NoneToVoidFunction) {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    const nextTrackId = queue[queue.indexOf(trackId) + 1];\n    if (!nextTrackId) {\n      return;\n    }\n\n    if (!tracks.has(nextTrackId)) {\n      // A bit hacky way to continue playlist when switching chat\n      getDispatch().openAudioPlayer(parseMessageKey(nextTrackId));\n\n      return;\n    }\n\n    const nextTrack = tracks.get(nextTrackId)!;\n\n    if (nextTrack.onForcePlay) {\n      nextTrack.onForcePlay();\n    }\n\n    currentTrackId = nextTrackId;\n\n    if (nextTrack.audio.src) {\n      safePlay(nextTrack.audio);\n    }\n  });\n\n  return {\n    audio,\n    proxy: new Proxy(audio, {\n      get: (origin, key: keyof HTMLAudioElement) => origin[key],\n    }),\n    handlers: [],\n    onForcePlay,\n  };\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(trackId: string, handler: Handler, onForcePlay?: NoneToVoidFunction) {\n  if (!tracks.has(trackId)) {\n    tracks.set(trackId, createAudio(trackId, onForcePlay));\n\n    if (!queue.includes(trackId)) {\n      queue.push(trackId);\n    }\n  }\n\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (currentTrackId && currentTrackId !== trackId) {\n        tracks.get(currentTrackId)!.audio.pause();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        audio.currentTime = time;\n      }\n    },\n\n    proxy,\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          queue = queue.filter((id) => id !== trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n","export default function download(url: string, filename: string) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename;\n  link.click();\n}\n","import { RefObject } from 'react';\nimport React, { FC, memo, useRef } from '../../lib/teact/teact';\n\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useTransitionForMedia from '../../hooks/useTransitionForMedia';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dateFormat';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Link from '../ui/Link';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  onClick,\n  onDateClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransition(isTransferring, undefined, true);\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n\n  const {\n    shouldRenderThumb, shouldRenderFullMedia, transitionClassNames,\n  } = useTransitionForMedia(previewData, 'slow');\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <i className=\"icon-select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            {shouldRenderThumb && (\n              <img\n                src={thumbnailDataUri}\n                width={width}\n                height={height}\n                className=\"thumbnail\"\n                alt=\"\"\n              />\n            )}\n            {shouldRenderFullMedia && (\n              <img\n                src={previewData}\n                className={`full-media ${transitionClassNames}`}\n                width={width}\n                height={height}\n                alt=\"\"\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && <i className={buildClassName('icon-download', shouldSpinnerRender && 'hidden')} />}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\">{renderText(name)}</div>\n        <div className=\"file-subtitle\">\n          <span>\n            {isTransferring && transferProgress ? `${Math.round(transferProgress * 100)}%` : sizeString}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && timestamp && (\n            <>\n              {' '}\n              <Link onClick={onDateClick}>{formatMediaDateTime(timestamp * 1000)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && timestamp && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-multi-assign */\n/* eslint-disable no-cond-assign */\n/* eslint-disable no-param-reassign */\n/* eslint-disable prefer-const */\n/* eslint-disable eqeqeq */\n\n/*\nSuperfast Blur - a fast Box Blur For Canvas\n\nVersion:     0.5\nAuthor:        Mario Klingemann\nContact:     mario@quasimondo.com\nWebsite:    http://www.quasimondo.com/BoxBlurForCanvas\nTwitter:    @quasimondo\n\nIn case you find this class useful - especially in commercial projects -\nI am not totally unhappy for a small donation to my PayPal account\nmario@quasimondo.de\n\nOr support me on flattr:\nhttps://flattr.com/thing/140066/Superfast-Blur-a-pretty-fast-Box-Blur-Effect-for-CanvasJavascript\n\nCopyright (c) 2011 Mario Klingemann\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// eslint-disable-next-line max-len\nconst mul_table = [1, 57, 41, 21, 203, 34, 97, 73, 227, 91, 149, 62, 105, 45, 39, 137, 241, 107, 3, 173, 39, 71, 65, 238, 219, 101, 187, 87, 81, 151, 141, 133, 249, 117, 221, 209, 197, 187, 177, 169, 5, 153, 73, 139, 133, 127, 243, 233, 223, 107, 103, 99, 191, 23, 177, 171, 165, 159, 77, 149, 9, 139, 135, 131, 253, 245, 119, 231, 224, 109, 211, 103, 25, 195, 189, 23, 45, 175, 171, 83, 81, 79, 155, 151, 147, 9, 141, 137, 67, 131, 129, 251, 123, 30, 235, 115, 113, 221, 217, 53, 13, 51, 50, 49, 193, 189, 185, 91, 179, 175, 43, 169, 83, 163, 5, 79, 155, 19, 75, 147, 145, 143, 35, 69, 17, 67, 33, 65, 255, 251, 247, 243, 239, 59, 29, 229, 113, 111, 219, 27, 213, 105, 207, 51, 201, 199, 49, 193, 191, 47, 93, 183, 181, 179, 11, 87, 43, 85, 167, 165, 163, 161, 159, 157, 155, 77, 19, 75, 37, 73, 145, 143, 141, 35, 138, 137, 135, 67, 33, 131, 129, 255, 63, 250, 247, 61, 121, 239, 237, 117, 29, 229, 227, 225, 111, 55, 109, 216, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 48, 190, 47, 93, 185, 183, 181, 179, 178, 176, 175, 173, 171, 85, 21, 167, 165, 41, 163, 161, 5, 79, 157, 78, 154, 153, 19, 75, 149, 74, 147, 73, 144, 143, 71, 141, 140, 139, 137, 17, 135, 134, 133, 66, 131, 65, 129, 1];\n// eslint-disable-next-line max-len\nconst shg_table = [0, 9, 10, 10, 14, 12, 14, 14, 16, 15, 16, 15, 16, 15, 15, 17, 18, 17, 12, 18, 16, 17, 17, 19, 19, 18, 19, 18, 18, 19, 19, 19, 20, 19, 20, 20, 20, 20, 20, 20, 15, 20, 19, 20, 20, 20, 21, 21, 21, 20, 20, 20, 21, 18, 21, 21, 21, 21, 20, 21, 17, 21, 21, 21, 22, 22, 21, 22, 22, 21, 22, 21, 19, 22, 22, 19, 20, 22, 22, 21, 21, 21, 22, 22, 22, 18, 22, 22, 21, 22, 22, 23, 22, 20, 23, 22, 22, 23, 23, 21, 19, 21, 21, 21, 23, 23, 23, 22, 23, 23, 21, 23, 22, 23, 18, 22, 23, 20, 22, 23, 23, 23, 21, 22, 20, 22, 21, 22, 24, 24, 24, 24, 24, 22, 21, 24, 23, 23, 24, 21, 24, 23, 24, 22, 24, 24, 22, 24, 24, 22, 23, 24, 24, 24, 20, 23, 22, 23, 24, 24, 24, 24, 24, 24, 24, 23, 21, 23, 22, 23, 24, 24, 24, 22, 24, 24, 24, 23, 22, 24, 24, 25, 23, 25, 25, 23, 24, 25, 25, 24, 22, 25, 25, 25, 24, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 23, 25, 23, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 24, 22, 25, 25, 23, 25, 25, 20, 24, 25, 24, 25, 25, 22, 24, 25, 24, 25, 24, 25, 25, 24, 25, 25, 25, 25, 22, 25, 25, 25, 24, 25, 24, 25, 18];\n\nexport default function boxBlurCanvasRGB(context, top_x, top_y, width, height, radius, iterations) {\n  if (Number.isNaN(radius) || radius < 1) return;\n\n  radius |= 0;\n\n  if (Number.isNaN(iterations)) iterations = 1;\n  iterations |= 0;\n  if (iterations > 3) iterations = 3;\n  if (iterations < 1) iterations = 1;\n\n  const imageData = context.getImageData(top_x, top_y, width, height);\n\n  const pixels = imageData.data;\n\n  let rsum;\n  let gsum;\n  let bsum;\n  let x;\n  let y;\n  let i;\n  let p;\n  let p1;\n  let p2;\n  let yp;\n  let yi;\n  let yw;\n  let wm = width - 1;\n  let hm = height - 1;\n  let rad1 = radius + 1;\n\n  let r = [];\n  let g = [];\n  let b = [];\n\n  let mul_sum = mul_table[radius];\n  let shg_sum = shg_table[radius];\n\n  let vmin = [];\n  let vmax = [];\n\n  while (iterations-- > 0) {\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      rsum = pixels[yw] * rad1;\n      gsum = pixels[yw + 1] * rad1;\n      bsum = pixels[yw + 2] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        p = yw + (((i > wm ? wm : i)) << 2);\n        rsum += pixels[p++];\n        gsum += pixels[p++];\n        bsum += pixels[p++];\n      }\n\n      for (x = 0; x < width; x++) {\n        r[yi] = rsum;\n        g[yi] = gsum;\n        b[yi] = bsum;\n\n        if (y == 0) {\n          vmin[x] = ((p = x + rad1) < wm ? p : wm) << 2;\n          vmax[x] = ((p = x - radius) > 0 ? p << 2 : 0);\n        }\n\n        p1 = yw + vmin[x];\n        p2 = yw + vmax[x];\n\n        rsum += pixels[p1++] - pixels[p2++];\n        gsum += pixels[p1++] - pixels[p2++];\n        bsum += pixels[p1++] - pixels[p2++];\n\n        yi++;\n      }\n      yw += (width << 2);\n    }\n\n    for (x = 0; x < width; x++) {\n      yp = x;\n      rsum = r[yp] * rad1;\n      gsum = g[yp] * rad1;\n      bsum = b[yp] * rad1;\n\n      for (i = 1; i <= radius; i++) {\n        yp += (i > hm ? 0 : width);\n        rsum += r[yp];\n        gsum += g[yp];\n        bsum += b[yp];\n      }\n\n      yi = x << 2;\n      for (y = 0; y < height; y++) {\n        pixels[yi] = (rsum * mul_sum) >>> shg_sum;\n        pixels[yi + 1] = (gsum * mul_sum) >>> shg_sum;\n        pixels[yi + 2] = (bsum * mul_sum) >>> shg_sum;\n\n        if (x == 0) {\n          vmin[y] = ((p = y + rad1) < hm ? p : hm) * width;\n          vmax[y] = ((p = y - radius) > 0 ? p * width : 0);\n        }\n\n        p1 = x + vmin[y];\n        p2 = x + vmax[y];\n\n        rsum += r[p1] - r[p2];\n        gsum += g[p1] - g[p2];\n        bsum += b[p1] - b[p2];\n\n        yi += width << 2;\n      }\n    }\n  }\n\n  context.putImageData(imageData, top_x, top_y);\n}\n","import React, {\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport { TextPart } from '../common/helpers/renderMessageText';\nimport buildClassName from '../../util/buildClassName';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\n\nimport Portal from './Portal';\n\nimport './Notification.scss';\n\ntype OwnProps = {\n  message: TextPart[];\n  duration?: number;\n  onDismiss: () => void;\n};\n\nconst DEFAULT_DURATION = 3000;\nconst ANIMATION_DURATION = 150;\n\nconst Notification: FC<OwnProps> = ({ message, duration = DEFAULT_DURATION, onDismiss }) => {\n  const [isOpen, setIsOpen] = useState(true);\n  // eslint-disable-next-line no-null/no-null\n  const timerRef = useRef<number | undefined>(null);\n\n  const { transitionClassNames } = useShowTransition(isOpen);\n\n  const closeAndDismiss = useCallback(() => {\n    setIsOpen(false);\n    setTimeout(onDismiss, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [onDismiss]);\n\n  useEffect(() => (isOpen ? captureEscKeyListener(closeAndDismiss) : undefined), [isOpen, closeAndDismiss]);\n\n  useEffect(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n        timerRef.current = undefined;\n      }\n    };\n  }, [duration, closeAndDismiss]);\n\n  const handleMouseEnter = useCallback(() => {\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = undefined;\n    }\n  }, []);\n\n  const handleMouseLeave = useCallback(() => {\n    timerRef.current = window.setTimeout(closeAndDismiss, duration);\n  }, [duration, closeAndDismiss]);\n\n  return (\n    <Portal className=\"Notification-container\" containerId=\"#middle-column-portals\">\n      <div\n        className={buildClassName('Notification', transitionClassNames)}\n        onClick={closeAndDismiss}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"content\">\n          {message}\n        </div>\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(Notification);\n","import { EDITABLE_INPUT_ID } from '../../../../config';\n\nconst MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== EDITABLE_INPUT_ID && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === EDITABLE_INPUT_ID);\n}\n","import { ChangeEvent } from 'react';\nimport React, {\n  FC, useEffect, useRef, memo, useState, useCallback,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport { IAnchorPosition, ISettings } from '../../../types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { selectCurrentMessageList, selectReplyingToId } from '../../../modules/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport {\n  IS_ANDROID, IS_IOS, IS_MOBILE_SCREEN, IS_TOUCH_ENV,\n} from '../../../util/environment';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport parseEmojiOnlyString from '../../common/helpers/parseEmojiOnlyString';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport TextFormatter from './TextFormatter';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\n\ntype OwnProps = {\n  id: string;\n  editableInputId?: string;\n  html: string;\n  placeholder: string;\n  shouldSetFocus: boolean;\n  shouldSupressFocus?: boolean;\n  onUpdate: (html: string) => void;\n  onSupressedFocus?: () => void;\n  onSend: () => void;\n};\n\ntype StateProps = {\n  currentChatId?: number;\n  replyingToId?: number;\n  noTabCapture?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n};\n\ntype DispatchProps = Pick<GlobalActions, 'editLastMessage'>;\n\nconst MAX_INPUT_HEIGHT = IS_MOBILE_SCREEN ? 256 : 416;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 90;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps & DispatchProps> = ({\n  id,\n  editableInputId,\n  html,\n  placeholder,\n  shouldSetFocus,\n  shouldSupressFocus,\n  onUpdate,\n  onSupressedFocus,\n  onSend,\n  currentChatId,\n  replyingToId,\n  noTabCapture,\n  messageSendKeyCombo,\n  editLastMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n\n  useLayoutEffectWithPrevDeps(([prevHtml]) => {\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (prevHtml !== undefined && prevHtml !== html) {\n      updateInputHeight();\n    }\n  }, [html]);\n\n  const focusInput = useCallback(() => {\n    // Avoid focusing during animation\n    if (inputRef.current!.closest('.from, .to')) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  }, []);\n\n  const handleCloseTextFormatter = useCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  }, [closeTextFormatter]);\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      return;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      !isSelectionInsideInput(selectionRange)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return;\n    }\n\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const inputRect = inputRef.current!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - inputRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = inputRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - inputRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    function handleMouseUp() {\n      checkSelection();\n\n      event.target.removeEventListener('mouseup', handleMouseUp);\n    }\n\n    if (event.button !== 2) {\n      event.target.addEventListener('mouseup', handleMouseUp);\n      return;\n    }\n\n    if (isContextMenuOpenRef.current === true) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function closeContextMenuMouseListener() {\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('mouseup', closeContextMenuMouseListener);\n    }\n\n    function closeContextMenuKeyListener(e: KeyboardEvent) {\n      if (e.key !== 'Esc' && e.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', closeContextMenuKeyListener);\n    }\n\n    document.addEventListener('mousedown', closeContextMenuMouseListener);\n    document.addEventListener('keydown', closeContextMenuKeyListener);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    function handleKeyUp() {\n      checkSelection();\n\n      e.target.removeEventListener('keyup', handleKeyUp);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !(IS_IOS || IS_ANDROID)\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (e.key === 'ArrowUp' && !html.length) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', handleKeyUp);\n    }\n  }\n\n  function handleTouchSelection() {\n    if (!IS_ANDROID) {\n      return;\n    }\n\n    checkSelection();\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (!IS_TOUCH_ENV && (!textContent || !textContent.length)) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!IS_ANDROID) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function updateInputHeight() {\n    const input = inputRef.current!;\n    const clone = cloneRef.current!;\n    input.style.height = `${Math.min(clone.scrollHeight, MAX_INPUT_HEIGHT)}px`;\n    input.classList.toggle('overflown', clone.scrollHeight > MAX_INPUT_HEIGHT);\n  }\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    focusInput();\n  }, [currentChatId, focusInput, replyingToId, shouldSetFocus]);\n\n  useEffect(() => {\n    if (noTabCapture) {\n      return undefined;\n    }\n\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        requestAnimationFrame(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput, noTabCapture]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function supressFocus() {\n      input.blur();\n    }\n\n    if (shouldSupressFocus) {\n      input.addEventListener('focus', supressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', supressFocus);\n    };\n  }, [shouldSupressFocus]);\n\n  const className = buildClassName(\n    'form-control custom-scroll',\n    html.length > 0 && 'touched',\n    shouldSupressFocus && 'focus-disabled',\n  );\n\n  return (\n    <div id={id} onClick={shouldSupressFocus ? onSupressedFocus : undefined}>\n      <div\n        ref={inputRef}\n        id={editableInputId || EDITABLE_INPUT_ID}\n        className={className}\n        contentEditable\n        onClick={focusInput}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onMouseDown={handleMouseDown}\n        onContextMenu={stopEvent}\n        onTouchCancel={handleTouchSelection}\n      />\n      <div ref={cloneRef} className={buildClassName(className, 'clone')} />\n      <span className=\"placeholder-text\">{placeholder}</span>\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId: currentChatId, threadId } = selectCurrentMessageList(global) || {};\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      currentChatId,\n      messageSendKeyCombo,\n      replyingToId: currentChatId && threadId ? selectReplyingToId(global, currentChatId, threadId) : undefined,\n      noTabCapture: global.isPollModalOpen || global.payment.isPaymentModalOpen,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['editLastMessage']),\n)(MessageInput));\n","import React, { FC, memo, useCallback } from '../../lib/teact/teact';\n\nimport { ApiMessage, ApiWebPage } from '../../api/types';\n\nimport { getFirstLinkInMessage, getMessageSummaryText, getMessageWebPage } from '../../modules/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport trimText from '../../util/trimText';\nimport renderText from './helpers/renderText';\nimport { formatPastTimeShort } from '../../util/dateFormat';\n\nimport Media from './Media';\nimport Link from '../ui/Link';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  onMessageClick: (messageId: number, chatId: number) => void;\n};\n\nconst WebLink: FC<OwnProps> = ({ message, senderTitle, onMessageClick }) => {\n  let linkData: ApiWebPage | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n      const messageText = getMessageSummaryText(message);\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        description: messageText !== url ? messageText : undefined,\n      } as ApiWebPage;\n    }\n  }\n\n  const handleMessageClick = useCallback(() => {\n    onMessageClick(message.id, message.chatId);\n  }, [onMessageClick, message.id, message.chatId]);\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    !photo && 'without-photo',\n  );\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n    >\n      {photo && (\n        <Media message={message} />\n      )}\n      <div className=\"content\">\n        <Link className=\"site-title\" onClick={handleMessageClick}>{renderText(title || siteName || displayUrl)}</Link>\n        {truncatedDescription && (\n          <Link className=\"site-description\" onClick={handleMessageClick}>{renderText(truncatedDescription)}</Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text=\"\"\n        >\n          {url.replace('mailto:', '') || displayUrl}\n        </SafeLink>\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n          >\n            {formatPastTimeShort(message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import { useCallback } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType(orderDiffById: Record<number, number>) {\n  const movesUp = useCallback((id: number) => orderDiffById[id] < 0, [orderDiffById]);\n  const movesDown = useCallback((id: number) => orderDiffById[id] > 0, [orderDiffById]);\n\n  const orderDiffIds = Object.keys(orderDiffById).map(Number);\n  const numberOfUp = orderDiffIds.filter(movesUp).length;\n  const numberOfDown = orderDiffIds.filter(movesDown).length;\n\n  return useCallback((chatId: number): ChatAnimationTypes => {\n    const orderDiff = orderDiffById[chatId];\n\n    if (orderDiff === 0) {\n      return ChatAnimationTypes.None;\n    }\n\n    if (\n      orderDiff === Infinity\n      || orderDiff === -Infinity\n      || (movesUp(chatId) && numberOfUp <= numberOfDown)\n      || (movesDown(chatId) && numberOfDown < numberOfUp)\n    ) {\n      return ChatAnimationTypes.Opacity;\n    }\n\n    return ChatAnimationTypes.Move;\n  }, [movesDown, movesUp, numberOfDown, numberOfUp, orderDiffById]);\n}\n","import React, { FC } from '../../../lib/teact/teact';\n\nimport { ApiChat } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport buildClassName from '../../../util/buildClassName';\n\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './Badge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  isPinned?: boolean;\n};\n\nconst Badge: FC<OwnProps> = ({ chat, isPinned }) => {\n  const isShown = Boolean(chat.unreadCount || chat.hasUnreadMark || isPinned);\n  const className = buildClassName(\n    'Badge',\n    chat.isMuted && 'muted',\n    isPinned && 'pinned',\n    Boolean(chat.unreadCount || chat.hasUnreadMark) && 'unread',\n  );\n\n  function renderContent() {\n    if (chat.unreadCount) {\n      if (chat.unreadMentionsCount) {\n        return (\n          <div className=\"Badge-wrapper\">\n            <div className=\"Badge mention\">\n              <i className=\"icon-mention\" />\n            </div>\n            <div className={className}>\n              {formatIntegerCompact(chat.unreadCount)}\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className={className}>\n          {formatIntegerCompact(chat.unreadCount)}\n        </div>\n      );\n    } else if (chat.hasUnreadMark) {\n      return (\n        <div className={className} />\n      );\n    } else if (isPinned) {\n      return (\n        <div className={className}>\n          <i className=\"icon-pinned-chat\" />\n        </div>\n      );\n    }\n\n    return undefined;\n  }\n\n  return (\n    <ShowTransition isCustom className=\"Badge-transition\" isOpen={isShown}>\n      {renderContent}\n    </ShowTransition>\n  );\n};\n\nexport default Badge;\n","import React, {\n  FC, memo, useCallback, useLayoutEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport useLang from '../../../hooks/useLang';\n\nimport { GlobalActions, MessageListType } from '../../../global/types';\nimport {\n  ApiChat, ApiUser, ApiMessage, ApiMessageOutgoingStatus, ApiFormattedText, MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport { IS_MOBILE_SCREEN } from '../../../util/environment';\nimport {\n  getChatTitle,\n  isChatPrivate,\n  isActionMessage,\n  getPrivateChatUserId,\n  getMessageAction,\n  getMessageSenderName,\n  isChatChannel,\n  getMessageMediaHash,\n  getMessageSummaryText,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n  getMessageSticker,\n} from '../../../modules/helpers';\nimport {\n  selectChat, selectUser, selectChatMessage, selectOutgoingStatus, selectDraft, selectCurrentMessageList,\n} from '../../../modules/selectors';\nimport { renderActionMessageText } from '../../common/helpers/renderActionMessageText';\nimport renderText from '../../common/helpers/renderText';\nimport { fastRaf } from '../../../util/schedulers';\nimport buildClassName from '../../../util/buildClassName';\nimport { pick } from '../../../util/iteratees';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useMedia from '../../../hooks/useMedia';\nimport { ChatAnimationTypes } from './hooks';\n\nimport Avatar from '../../common/Avatar';\nimport VerifiedIcon from '../../common/VerifiedIcon';\nimport TypingStatus from '../../common/TypingStatus';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport ListItem from '../../ui/ListItem';\nimport Badge from './Badge';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  style?: string;\n  chatId: number;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isSelected: boolean;\n  isPinned?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  actionTargetUser?: ApiUser;\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: number;\n  lastMessageSender?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiFormattedText;\n  messageListType?: MessageListType;\n  animationLevel?: number;\n  lastSyncTime?: number;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'openChat' | 'focusLastMessage'>;\n\nconst ANIMATION_DURATION = 200;\n\nconst Chat: FC<OwnProps & StateProps & DispatchProps> = ({\n  style,\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isSelected,\n  isPinned,\n  chat,\n  privateChatUser,\n  actionTargetUser,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  draft,\n  messageListType,\n  animationLevel,\n  lastSyncTime,\n  openChat,\n  focusLastMessage,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n\n  const { lastMessage, typingStatus } = chat || {};\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  useEnsureMessage(chatId, isAction ? lastMessage!.replyToMessageId : undefined, actionTargetMessage);\n\n  const mediaThumbnail = lastMessage && !getMessageSticker(lastMessage)\n    ? getMessageMediaThumbDataUri(lastMessage)\n    : undefined;\n  const mediaBlobUrl = useMedia(lastMessage ? getMessageMediaHash(lastMessage, 'micro') : undefined);\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate.\n  useLayoutEffect(() => {\n    if (animationLevel === 0) {\n      return;\n    }\n\n    const element = ref.current!;\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      fastRaf(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * 100}%, 0)`;\n\n      fastRaf(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      fastRaf(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [animationLevel, orderDiff, animationType]);\n\n  const handleClick = useCallback(() => {\n    openChat({ id: chatId });\n\n    if (isSelected && messageListType === 'thread') {\n      focusLastMessage();\n    }\n  }, [\n    isSelected,\n    messageListType,\n    openChat,\n    chatId,\n    focusLastMessage,\n  ]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    privateChatUser,\n    handleDelete: openDeleteModal,\n    folderId,\n    isPinned,\n  });\n\n  const lang = useLang();\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderLastMessageOrTyping() {\n    if (typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (draft && draft.text.length) {\n      return (\n        <p className=\"last-message\">\n          <span className=\"draft\">{lang('Draft')}</span>\n          {renderText(draft.text)}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isAction) {\n      const actionOrigin = chat && (isChatChannel(chat) || lastMessage.senderId === lastMessage.chatId)\n        ? chat\n        : lastMessageSender;\n\n      return (\n        <p className=\"last-message\">\n          {renderText(renderActionMessageText(\n            lastMessage,\n            actionOrigin,\n            actionTargetUser,\n            actionTargetMessage,\n            actionTargetChatId,\n            { asPlain: true },\n          ) as string)}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message\">\n        {senderName && (\n          <span className=\"sender-name\">{renderText(senderName)}</span>\n        )}\n        {renderMessageSummary(lastMessage!, mediaBlobUrl || mediaThumbnail)}\n      </p>\n    );\n  }\n\n  const className = buildClassName(\n    'Chat chat-item-clickable',\n    isChatPrivate(chatId) ? 'private' : 'group',\n    isSelected && 'selected',\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={className}\n      style={style}\n      ripple={!IS_MOBILE_SCREEN}\n      contextActions={contextActions}\n      onClick={handleClick}\n    >\n      <Avatar\n        chat={chat}\n        user={privateChatUser}\n        withOnlineStatus\n        isSavedMessages={privateChatUser && privateChatUser.isSelf}\n        lastSyncTime={lastSyncTime}\n      />\n      <div className=\"info\">\n        <div className=\"title\">\n          <h3>{renderText(getChatTitle(chat, privateChatUser))}</h3>\n          {chat.isVerified && <VerifiedIcon />}\n          {chat.isMuted && <i className=\"icon-muted-chat\" />}\n          {chat.lastMessage && (\n            <LastMessageMeta message={chat.lastMessage} outgoingStatus={lastMessageOutgoingStatus} />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderLastMessageOrTyping()}\n          <Badge chat={chat} isPinned={isPinned} />\n        </div>\n      </div>\n      <DeleteChatModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        chat={chat}\n      />\n    </ListItem>\n  );\n};\n\nfunction renderMessageSummary(message: ApiMessage, blobUrl?: string) {\n  if (!blobUrl) {\n    return renderText(getMessageSummaryText(message));\n  }\n\n  return (\n    <span className=\"media-preview\">\n      <img src={blobUrl} alt=\"\" />\n      {getMessageVideo(message) && <i className=\"icon-play\" />}\n      {renderText(getMessageSummaryText(message, true))}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || !chat.lastMessage) {\n      return {};\n    }\n\n    const { senderId, replyToMessageId, isOutgoing } = chat.lastMessage;\n    const lastMessageSender = senderId ? selectUser(global, senderId) : undefined;\n    const lastMessageAction = getMessageAction(chat.lastMessage);\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserId: actionTargetUserId, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const { type: messageListType } = selectCurrentMessageList(global) || {};\n\n    return {\n      chat,\n      lastMessageSender,\n      ...(isOutgoing && { lastMessageOutgoingStatus: selectOutgoingStatus(global, chat.lastMessage) }),\n      ...(privateChatUserId && { privateChatUser: selectUser(global, privateChatUserId) }),\n      ...(actionTargetUserId && { actionTargetUser: selectUser(global, actionTargetUserId) }),\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      messageListType,\n      animationLevel: global.settings.byKey.animationLevel,\n      lastSyncTime: global.lastSyncTime,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, [\n    'openChat',\n    'focusLastMessage',\n  ]),\n)(Chat));\n","import React, {\n  FC, memo, useMemo, useCallback, useEffect,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../../global/types';\nimport {\n  ApiChat, ApiChatFolder, ApiUser, MAIN_THREAD_ID,\n} from '../../../api/types';\n\nimport { ALL_CHATS_PRELOAD_DISABLED, CHAT_HEIGHT_PX, CHAT_LIST_SLICE } from '../../../config';\nimport { IS_ANDROID } from '../../../util/environment';\nimport usePrevious from '../../../hooks/usePrevious';\nimport { mapValues, pick } from '../../../util/iteratees';\nimport { getChatOrder, prepareChatList, prepareFolderListIds } from '../../../modules/helpers';\nimport { selectChatFolder, selectCurrentMessageList } from '../../../modules/selectors';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useChatAnimationType } from './hooks';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Chat from './Chat';\n\ntype OwnProps = {\n  folderType: 'all' | 'archived' | 'folder';\n  folderId?: number;\n  noChatsText?: string;\n};\n\ntype StateProps = {\n  chatsById: Record<number, ApiChat>;\n  usersById: Record<number, ApiUser>;\n  chatFolder?: ApiChatFolder;\n  listIds?: number[];\n  currentChatId?: number;\n  orderedPinnedIds?: number[];\n  lastSyncTime?: number;\n  isInDiscussionThread?: boolean;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'loadMoreChats' | 'preloadTopChatMessages'>;\n\nenum FolderTypeToListType {\n  'all' = 'active',\n  'archived' = 'archived'\n}\n\nconst ChatList: FC<OwnProps & StateProps & DispatchProps> = ({\n  folderType,\n  folderId,\n  noChatsText = 'Chat list is empty.',\n  chatFolder,\n  chatsById,\n  usersById,\n  listIds,\n  currentChatId,\n  orderedPinnedIds,\n  lastSyncTime,\n  isInDiscussionThread,\n  loadMoreChats,\n  preloadTopChatMessages,\n}) => {\n  const [currentListIds, currentPinnedIds] = useMemo(() => {\n    return folderType === 'folder' && chatFolder\n      ? prepareFolderListIds(chatsById, usersById, chatFolder)\n      : [listIds, orderedPinnedIds];\n  }, [folderType, chatsById, usersById, chatFolder, listIds, orderedPinnedIds]);\n\n  const [orderById, orderedIds] = useMemo(() => {\n    if (!currentListIds || (folderType === 'folder' && !chatFolder)) {\n      return [];\n    }\n    const newChatArrays = prepareChatList(chatsById, currentListIds, currentPinnedIds, folderType);\n    const singleList = [...newChatArrays.pinnedChats, ...newChatArrays.otherChats];\n    const newOrderedIds = singleList.map(({ id }) => id);\n    const newOrderById = singleList.reduce((acc, chat, i) => {\n      acc[chat.id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n\n    return [newOrderById, newOrderedIds];\n  }, [currentListIds, currentPinnedIds, folderType, chatFolder, chatsById]);\n\n  const prevOrderById = usePrevious(orderById);\n\n  const orderDiffById = orderById && prevOrderById\n    ? mapValues(orderById, (order, id) => {\n      return order - (prevOrderById[id] !== undefined ? prevOrderById[id] : Infinity);\n    })\n    : {};\n\n  const loadMoreOfType = useCallback(() => {\n    loadMoreChats({ listType: folderType === 'archived' ? 'archived' : 'active' });\n  }, [loadMoreChats, folderType]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    lastSyncTime ? loadMoreOfType : undefined,\n    orderedIds,\n    undefined,\n    CHAT_LIST_SLICE,\n    folderType === 'all' && !ALL_CHATS_PRELOAD_DISABLED,\n  );\n\n  // TODO Refactor to not call `prepareChatList` twice\n  const chatArrays = viewportIds && prepareChatList(chatsById, viewportIds, currentPinnedIds, folderType);\n\n  useEffect(() => {\n    if (lastSyncTime && folderType === 'all') {\n      preloadTopChatMessages();\n    }\n  }, [lastSyncTime, folderType, preloadTopChatMessages]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n    const pinnedOffset = viewportOffset + chatArrays!.pinnedChats.length;\n\n    return (\n      <div\n        className=\"scroll-container\"\n        // @ts-ignore\n        style={IS_ANDROID ? `height: ${orderedIds!.length * CHAT_HEIGHT_PX}px` : undefined}\n        teactFastList\n      >\n        {chatArrays!.pinnedChats.map(({ id }, i) => (\n          <Chat\n            key={id}\n            teactOrderKey={i}\n            chatId={id}\n            isPinned\n            folderId={folderId}\n            isSelected={id === currentChatId && !isInDiscussionThread}\n            animationType={getAnimationType(id)}\n            orderDiff={orderDiffById[id]}\n            // @ts-ignore\n            style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n        {chatArrays!.otherChats.map((chat, i) => (\n          <Chat\n            key={chat.id}\n            teactOrderKey={getChatOrder(chat)}\n            chatId={chat.id}\n            folderId={folderId}\n            isSelected={chat.id === currentChatId && !isInDiscussionThread}\n            animationType={getAnimationType(chat.id)}\n            orderDiff={orderDiffById[chat.id]}\n            // @ts-ignore\n            style={`top: ${(pinnedOffset + i) * CHAT_HEIGHT_PX}px;`}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <InfiniteScroll\n      className=\"chat-list custom-scroll\"\n      items={viewportIds}\n      onLoadMore={getMore}\n      preloadBackwards={CHAT_LIST_SLICE}\n      noFastList\n      isDisabled\n    >\n      {viewportIds && viewportIds.length && chatArrays ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length ? (\n        <div className=\"no-results\">{noChatsText}</div>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { folderType, folderId }): StateProps => {\n    const {\n      chats: {\n        listIds,\n        byId: chatsById,\n        orderedPinnedIds,\n      },\n      users: { byId: usersById },\n      lastSyncTime,\n    } = global;\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const listType = folderType !== 'folder' ? FolderTypeToListType[folderType] : undefined;\n    const chatFolder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      chatsById,\n      usersById,\n      currentChatId,\n      lastSyncTime,\n      ...(listType ? {\n        listIds: listIds[listType],\n        orderedPinnedIds: orderedPinnedIds[listType],\n      } : {\n        chatFolder,\n      }),\n      isInDiscussionThread: currentThreadId !== MAIN_THREAD_ID,\n    };\n  },\n  (setGlobal, actions): DispatchProps => pick(actions, ['loadMoreChats', 'preloadTopChatMessages']),\n)(ChatList));\n","import React, { FC, useCallback } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../global/types';\nimport { ApiChat, ApiUser } from '../../api/types';\n\nimport { pick } from '../../util/iteratees';\nimport buildClassName from '../../util/buildClassName';\n\nimport Link from '../ui/Link';\n\ntype OwnProps = {\n  className?: string;\n  sender?: ApiUser | ApiChat;\n  children: any;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'openUserInfo'>;\n\nconst UserLink: FC<OwnProps & DispatchProps> = ({\n  className, sender, openUserInfo, children,\n}) => {\n  const handleClick = useCallback(() => {\n    if (sender) {\n      openUserInfo({ id: sender.id });\n    }\n  }, [sender, openUserInfo]);\n\n  if (!sender) {\n    return children;\n  }\n\n  return (\n    <Link className={buildClassName('UserLink', className)} onClick={handleClick}>{children}</Link>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  undefined,\n  (setGlobal, actions): DispatchProps => pick(actions, ['openUserInfo']),\n)(UserLink);\n","import React, { FC, useCallback } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../global/types';\nimport { ApiMessage } from '../../api/types';\n\nimport { pick } from '../../util/iteratees';\nimport buildClassName from '../../util/buildClassName';\n\nimport Link from '../ui/Link';\n\ntype OwnProps = {\n  className?: string;\n  message?: ApiMessage;\n  children: any;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'focusMessage'>;\n\nconst MessageLink: FC<OwnProps & DispatchProps> = ({\n  className, message, children, focusMessage,\n}) => {\n  const handleMessageClick = useCallback((): void => {\n    if (message) {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  }, [focusMessage, message]);\n\n  if (!message) {\n    return children;\n  }\n\n  return (\n    <Link className={buildClassName('MessageLink', className)} onClick={handleMessageClick}>{children}</Link>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  undefined,\n  (setGlobal, actions): DispatchProps => pick(actions, ['focusMessage']),\n)(MessageLink);\n","import React, { FC, useCallback } from '../../lib/teact/teact';\nimport { withGlobal } from '../../lib/teact/teactn';\n\nimport { GlobalActions } from '../../global/types';\n\nimport { pick } from '../../util/iteratees';\nimport buildClassName from '../../util/buildClassName';\n\nimport Link from '../ui/Link';\n\ntype OwnProps = {\n  className?: string;\n  chatId?: number;\n  children: any;\n};\n\ntype DispatchProps = Pick<GlobalActions, 'openChat'>;\n\nconst ChatLink: FC<OwnProps & DispatchProps> = ({\n  className, chatId, openChat, children,\n}) => {\n  const handleClick = useCallback(() => {\n    if (chatId) {\n      openChat({ id: chatId });\n    }\n  }, [chatId, openChat]);\n\n  if (!chatId) {\n    return children;\n  }\n\n  return (\n    <Link className={buildClassName('ChatLink', className)} onClick={handleClick}>{children}</Link>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  undefined,\n  (setGlobal, actions): DispatchProps => pick(actions, ['openChat']),\n)(ChatLink);\n","import React from '../../../lib/teact/teact';\n\nimport { ApiChat, ApiMessage, ApiUser } from '../../../api/types';\nimport {\n  getChatTitle,\n  getMessageContent,\n  getMessageSummaryText,\n  getUserFullName,\n  isChat,\n} from '../../../modules/helpers';\nimport trimText from '../../../util/trimText';\nimport { TextPart } from './renderMessageText';\nimport renderText from './renderText';\n\nimport UserLink from '../UserLink';\nimport MessageLink from '../MessageLink';\nimport ChatLink from '../ChatLink';\n\ninterface ActionMessageTextOptions {\n  maxTextLength?: number;\n  asPlain?: boolean;\n  isEmbedded?: boolean;\n}\n\nconst NBSP = '\\u00A0';\n\nexport function renderActionMessageText(\n  message: ApiMessage,\n  actionOrigin?: ApiUser | ApiChat,\n  targetUser?: ApiUser,\n  targetMessage?: ApiMessage,\n  targetChatId?: number,\n  options: ActionMessageTextOptions = {},\n) {\n  if (!message.content.action) {\n    return [];\n  }\n  const { text } = message.content.action;\n  const content: TextPart[] = [];\n  const textOptions: ActionMessageTextOptions = { ...options, maxTextLength: 16 };\n\n  let unprocessed: string;\n  let processed = processPlaceholder(\n    text,\n    '%action_origin%',\n    actionOrigin\n      ? (!options.isEmbedded && renderOriginContent(actionOrigin, options.asPlain)) || NBSP\n      : 'User',\n  );\n\n  unprocessed = processed.pop() as string;\n  content.push(...processed);\n\n  processed = processPlaceholder(\n    unprocessed,\n    '%target_user%',\n    targetUser\n      ? renderUserContent(targetUser, options.asPlain)\n      : 'User',\n  );\n\n  unprocessed = processed.pop() as string;\n  content.push(...processed);\n\n  processed = processPlaceholder(\n    unprocessed,\n    '%message%',\n    targetMessage\n      ? renderMessageContent(targetMessage, textOptions)\n      : 'a message',\n  );\n  unprocessed = processed.pop() as string;\n  content.push(...processed);\n\n  processed = processPlaceholder(\n    unprocessed,\n    '%product%',\n    targetMessage\n      ? renderProductContent(targetMessage)\n      : 'a product',\n  );\n  unprocessed = processed.pop() as string;\n  content.push(...processed);\n\n  processed = processPlaceholder(\n    unprocessed,\n    '%target_chat%',\n    targetChatId\n      ? renderMigratedContent(targetChatId, options.asPlain)\n      : 'another chat',\n  );\n  content.push(...processed);\n\n  if (options.asPlain) {\n    return content.join('').trim();\n  }\n\n  return content;\n}\n\nfunction renderProductContent(message: ApiMessage) {\n  return message.content && message.content.invoice\n    ? message.content.invoice.title\n    : 'a product';\n}\n\nfunction renderMessageContent(message: ApiMessage, options: ActionMessageTextOptions = {}) {\n  const text = getMessageSummaryText(message);\n  const {\n    photo, video, document, sticker,\n  } = getMessageContent(message);\n\n  const showQuotes = text && !photo && !video && !document && !sticker;\n  let messageText = trimText(text as string, options.maxTextLength)!;\n\n  if (photo) {\n    messageText = 'a photo';\n  } else if (video) {\n    messageText = video.isGif ? 'a GIF' : 'a video';\n  } else if (document) {\n    messageText = 'a document';\n  } else if (sticker) {\n    messageText = `«${text}»`;\n  }\n\n  if (options.asPlain) {\n    return showQuotes ? `«${messageText}»` : messageText;\n  }\n\n  if (showQuotes) {\n    return (\n      <span>\n        &laquo;\n        <MessageLink className=\"action-link\" message={message}>{renderText(messageText)}</MessageLink>\n        &raquo;\n      </span>\n    );\n  }\n\n  return (\n    <MessageLink className=\"action-link\" message={message}>{renderText(messageText)}</MessageLink>\n  );\n}\n\nfunction renderOriginContent(origin: ApiUser | ApiChat, asPlain?: boolean) {\n  return isChat(origin)\n    ? renderChatContent(origin, asPlain)\n    : renderUserContent(origin, asPlain);\n}\n\nfunction renderUserContent(sender: ApiUser, asPlain?: boolean): string | TextPart | undefined {\n  const text = trimText(getUserFullName(sender));\n\n  if (asPlain) {\n    return text;\n  }\n\n  return <UserLink className=\"action-link\" sender={sender}>{sender && renderText(text!)}</UserLink>;\n}\n\nfunction renderChatContent(chat: ApiChat, asPlain?: boolean): string | TextPart | undefined {\n  const text = trimText(getChatTitle(chat));\n\n  if (asPlain) {\n    return text;\n  }\n\n  return <ChatLink className=\"action-link\" chatId={chat.id}>{chat && renderText(text!)}</ChatLink>;\n}\n\nfunction renderMigratedContent(chatId: number, asPlain?: boolean): string | TextPart | undefined {\n  const text = 'another chat';\n\n  if (asPlain) {\n    return text;\n  }\n\n  return <ChatLink className=\"action-link\" chatId={chatId}>{text}</ChatLink>;\n}\n\nfunction processPlaceholder(text: string, placeholder: string, replaceValue?: TextPart): TextPart[] {\n  const placeholderPosition = text.indexOf(placeholder);\n  if (placeholderPosition < 0 || !replaceValue) {\n    return [text];\n  }\n\n  const content: TextPart[] = [];\n  content.push(text.substring(0, placeholderPosition));\n  content.push(replaceValue);\n  content.push(text.substring(placeholderPosition + placeholder.length));\n\n  return content;\n}\n","import { useCallback, useEffect, useState } from '../../../../lib/teact/teact';\n\nimport { ApiMessageEntityTypes, ApiChatMember, ApiUser } from '../../../../api/types';\nimport { EDITABLE_INPUT_ID } from '../../../../config';\nimport { getUserFirstOrLastName } from '../../../../modules/helpers';\nimport searchUserName from '../helpers/searchUserName';\nimport { IS_MOBILE_SCREEN } from '../../../../util/environment';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_NOT_USERNAME_SEARCH = /[^@_\\d\\wа-яё]+/i;\n\nexport default function useMentionMenu(\n  canSuggestMembers: boolean | undefined,\n  html: string,\n  onUpdateHtml: (html: string) => void,\n  inputId: string = EDITABLE_INPUT_ID,\n  groupChatMembers?: ApiChatMember[],\n  currentUserId?: number,\n  usersById?: Record<number, ApiUser>,\n) {\n  const [isOpen, markIsOpen, unmarkIsOpen] = useFlag();\n  const [currentFilter, setCurrentFilter] = useState('');\n  const [filteredMembers, setFilteredMembers] = useState<ApiChatMember[]>([]);\n\n  const getFilteredMembers = useCallback((filter) => {\n    if (!groupChatMembers || !usersById) {\n      return undefined;\n    }\n\n    return groupChatMembers.filter(({ userId }) => {\n      const user = usersById[userId];\n      if (userId === currentUserId || !user) {\n        return false;\n      }\n\n      return !filter || searchUserName(filter, user);\n    });\n  }, [groupChatMembers, currentUserId, usersById]);\n\n  useEffect(() => {\n    if (!canSuggestMembers || !html.length) {\n      unmarkIsOpen();\n      return;\n    }\n\n    const usernameFilter = getUsernameFilter(html);\n\n    if (usernameFilter) {\n      const filter = usernameFilter ? usernameFilter.substr(1) : '';\n      const membersToMention = getFilteredMembers(filter);\n      if (membersToMention && membersToMention.length) {\n        markIsOpen();\n        setCurrentFilter(filter);\n        setFilteredMembers(membersToMention);\n      } else {\n        unmarkIsOpen();\n      }\n    } else {\n      unmarkIsOpen();\n    }\n  }, [canSuggestMembers, html, getFilteredMembers, markIsOpen, unmarkIsOpen]);\n\n  const insertMention = useCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.username && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const insertedHtml = user.username\n      ? `@${user.username}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n        >${getUserFirstOrLastName(user)}</a>`;\n\n    const atIndex = html.lastIndexOf('@');\n    if (atIndex !== -1) {\n      onUpdateHtml(`${html.substr(0, atIndex)}${insertedHtml}&nbsp;`);\n      const messageInput = document.getElementById(inputId)!;\n      if (!IS_MOBILE_SCREEN) {\n        requestAnimationFrame(() => {\n          focusEditableElement(messageInput, forceFocus);\n        });\n      }\n    }\n\n    unmarkIsOpen();\n  }, [html, inputId, onUpdateHtml, unmarkIsOpen]);\n\n  return {\n    isMentionMenuOpen: isOpen,\n    mentionFilter: currentFilter,\n    closeMentionMenu: unmarkIsOpen,\n    insertMention,\n    mentionFilteredMembers: filteredMembers,\n  };\n}\n\nfunction getUsernameFilter(html: string) {\n  const tempEl = document.createElement('div');\n  tempEl.innerHTML = html;\n  const text = tempEl.innerText;\n\n  const lastSymbol = text[text.length - 1];\n  const lastWord = text.split(RE_NOT_USERNAME_SEARCH).pop();\n\n  if (\n    !text.length || RE_NOT_USERNAME_SEARCH.test(lastSymbol)\n    || !lastWord || !lastWord.startsWith('@')\n  ) {\n    return undefined;\n  }\n\n  return lastWord;\n}\n","import { ApiUser } from '../../../../api/types';\nimport { getUserFullName } from '../../../../modules/helpers';\nimport searchWords from '../../../../util/searchWords';\n\n// TODO: Support cyrillic translit search\nexport default function searchUserName(filter: string, user: ApiUser) {\n  const usernameLowered = user.username.toLowerCase();\n  const fullName = getUserFullName(user);\n  const fullNameLowered = fullName && fullName.toLowerCase();\n  const filterLowered = filter.toLowerCase();\n\n  return usernameLowered.startsWith(filterLowered) || (\n    fullNameLowered && searchWords(fullNameLowered, filterLowered)\n  );\n}\n"],"sourceRoot":""}